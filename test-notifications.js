#!/usr/bin/env node

/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å
 * –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: node test-notifications.js
 */

const mongoose = require('mongoose');
require('dotenv').config({ path: './backend/config.env' });

// –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –¥–µ–±–∞–≥–µ—Ä
const NotificationDebugger = require('./backend/notification-debugger');

async function testNotificationSystem() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Å–ø–æ–≤—ñ—â–µ–Ω—å...\n');
    
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB
    const mongoUri = process.env.MONGODB_URI || 'mongodb://localhost:27017/dts-service';
    await mongoose.connect(mongoUri);
    console.log('‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB\n');
    
    // –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –¥–µ–±–∞–≥–µ—Ä–∞
    const debugger = new NotificationDebugger();
    
    // 1. –ê–Ω–∞–ª—ñ–∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
    console.log('üìä === –ö–†–û–ö 1: –ê–ù–ê–õ–Ü–ó –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨ –ö–û–†–ò–°–¢–£–í–ê–ß–Ü–í ===');
    const userAnalysis = await debugger.analyzeUserSettings();
    
    if (!userAnalysis) {
      console.log('‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤');
      return;
    }
    
    console.log(`\nüìà –ü—ñ–¥—Å—É–º–æ–∫:`);
    console.log(`   –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: ${userAnalysis.totalUsers}`);
    console.log(`   –ó Telegram Chat ID: ${userAnalysis.usersWithTelegram}`);
    console.log(`   –ë–µ–∑ Telegram Chat ID: ${userAnalysis.usersWithoutTelegram}`);
    
    // 2. –ê–Ω–∞–ª—ñ–∑ –ª–æ–≥—ñ–≤ —Å–ø–æ–≤—ñ—â–µ–Ω—å
    console.log('\nüìä === –ö–†–û–ö 2: –ê–ù–ê–õ–Ü–ó –õ–û–ì–Ü–í –°–ü–û–í–Ü–©–ï–ù–¨ ===');
    const logAnalysis = await debugger.analyzeNotificationLogs(20);
    
    if (logAnalysis) {
      console.log(`\nüìà –ü—ñ–¥—Å—É–º–æ–∫ –ª–æ–≥—ñ–≤:`);
      console.log(`   –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª–æ–≥—ñ–≤: ${logAnalysis.totalLogs}`);
      console.log(`   –ù–µ–≤–¥–∞–ª–∏—Ö —Å–ø–æ–≤—ñ—â–µ–Ω—å: ${logAnalysis.failedLogs}`);
    }
    
    // 3. –°–∏–º—É–ª—è—Ü—ñ—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ —Å–ø–æ–≤—ñ—â–µ–Ω—å
    console.log('\nüß™ === –ö–†–û–ö 3: –°–ò–ú–£–õ–Ø–¶–Ü–Ø –°–ü–û–í–Ü–©–ï–ù–¨ ===');
    
    const testCases = [
      {
        type: 'new_requests',
        data: {
          task: {
            serviceRegion: '–ö–∏—ó–≤—Å—å–∫–∏–π',
            requestNumber: 'TEST-001',
            createdBy: 'test_user',
            requestDesc: '–¢–µ—Å—Ç–æ–≤–∞ –∑–∞—è–≤–∫–∞',
            client: '–¢–µ—Å—Ç–æ–≤–∏–π –∫–ª—ñ—î–Ω—Ç'
          },
          authorLogin: 'test_user'
        }
      },
      {
        type: 'system_notifications',
        data: {
          message: '–¢–µ—Å—Ç–æ–≤–µ —Å–∏—Å—Ç–µ–º–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è'
        }
      },
      {
        type: 'pending_approval',
        data: {
          task: {
            serviceRegion: '–•–º–µ–ª—å–Ω–∏—Ü—å–∫–∏–π',
            requestNumber: 'TEST-002',
            createdBy: 'test_user2'
          },
          authorLogin: 'test_user2'
        }
      }
    ];
    
    for (const testCase of testCases) {
      console.log(`\nüîç –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è: ${testCase.type}`);
      const result = await debugger.simulateNotification(testCase.type, testCase.data);
      
      if (result.success) {
        console.log(`   ‚úÖ –£—Å–ø—ñ—à–Ω–æ: ${result.filteredUsers} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –æ—Ç—Ä–∏–º–∞—é—Ç—å —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è`);
        if (result.recipients && result.recipients.length > 0) {
          console.log(`   üì± –û—Ç—Ä–∏–º—É–≤–∞—á—ñ: ${result.recipients.map(r => r.login).join(', ')}`);
        }
      } else {
        console.log(`   ‚ùå –ü–æ–º–∏–ª–∫–∞: ${result.reason || result.error}`);
      }
    }
    
    // 4. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    console.log('\nüéØ === –ö–†–û–ö 4: –¢–ï–°–¢–£–í–ê–ù–ù–Ø –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –ö–û–†–ò–°–¢–£–í–ê–ß–ê ===');
    
    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ –ø–µ—Ä—à–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ Telegram
    const User = mongoose.model('User');
    const userWithTelegram = await User.findOne({
      telegramChatId: { 
        $exists: true, 
        $ne: null, 
        $ne: '', 
        $ne: 'Chat ID' 
      }
    });
    
    if (userWithTelegram) {
      console.log(`\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: ${userWithTelegram.login}`);
      const testResult = await debugger.testUserNotification(
        userWithTelegram.login, 
        'üß™ –¢–µ—Å—Ç–æ–≤–µ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –∑ —Å–∫—Ä–∏–ø—Ç–∞'
      );
      
      if (testResult.success) {
        console.log(`   ‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≥–æ—Ç–æ–≤–∏–π –¥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–æ–≤—ñ—â–µ–Ω—å`);
        console.log(`   üì± Chat ID: ${testResult.user.chatId}`);
        console.log(`   üåç –†–µ–≥—ñ–æ–Ω: ${testResult.user.region}`);
      } else {
        console.log(`   ‚ùå –ü—Ä–æ–±–ª–µ–º–∞: ${testResult.reason || testResult.error}`);
      }
    } else {
      console.log('   ‚ö†Ô∏è –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–º Telegram');
    }
    
    // 5. –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–æ–≤–Ω–æ–≥–æ –∑–≤—ñ—Ç—É
    console.log('\nüìã === –ö–†–û–ö 5: –ì–ï–ù–ï–†–ê–¶–Ü–Ø –ü–û–í–ù–û–ì–û –ó–í–Ü–¢–£ ===');
    const report = await debugger.generateSystemReport();
    
    if (report && report.recommendations.length > 0) {
      console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è:');
      report.recommendations.forEach((rec, index) => {
        console.log(`   ${index + 1}. ${rec}`);
      });
    }
    
    console.log('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è:', error);
  } finally {
    // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –∑'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB
    await mongoose.disconnect();
    console.log('\nüîå –í—ñ–¥–∫–ª—é—á–µ–Ω–æ –≤—ñ–¥ MongoDB');
  }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
if (require.main === module) {
  testNotificationSystem();
}

module.exports = { testNotificationSystem };
