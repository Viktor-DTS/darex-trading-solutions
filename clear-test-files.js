const https = require('https');

console.log('üßπ –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤ –∑ –∑–∞–ø–∏—Ç—É –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫...\n');

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∑ –∑–∞–ø–∏—Ç—É
function clearTestFiles() {
  return new Promise((resolve) => {
    const data = JSON.stringify({
      invoiceFile: '',
      invoiceFileName: '',
      actFile: '',
      actFileName: '',
      status: 'pending' // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Å—Ç–∞—Ç—É—Å –≤ pending
    });
    
    const options = {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
        'Content-Length': data.length
      }
    };
    
    const req = https.request(
      'https://darex-trading-solutions.onrender.com/api/invoice-requests/68f7baaf179f05b6c4dcad86',
      options,
      (res) => {
        let responseData = '';
        
        res.on('data', chunk => {
          responseData += chunk;
        });
        
        res.on('end', () => {
          console.log(`   Status: ${res.statusCode}`);
          if (res.statusCode === 200) {
            console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤—ñ —Ñ–∞–π–ª–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ');
            try {
              const response = JSON.parse(responseData);
              console.log('   Response:', response);
            } catch (e) {
              console.log('   Response (text):', responseData);
            }
          } else {
            console.log('   ‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —Ñ–∞–π–ª—ñ–≤');
            console.log('   Error:', responseData);
          }
          resolve();
        });
      }
    );
    
    req.on('error', (error) => {
      console.log('   ‚ùå Request failed:', error.message);
      resolve();
    });
    
    req.write(data);
    req.end();
  });
}

async function main() {
  console.log('üîç –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö —Ñ–∞–π–ª—ñ–≤...');
  await clearTestFiles();
  console.log('\n‚úÖ –û—á–∏—â–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log('üìù –ó–∞–ø–∏—Ç –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ –ø–æ–≤–µ—Ä–Ω—É—Ç–æ –≤ —Å—Ç–∞—Ç—É—Å "pending"');
  console.log('üóëÔ∏è –¢–µ—Å—Ç–æ–≤—ñ —Ñ–∞–π–ª–∏ –≤–∏–¥–∞–ª–µ–Ω–æ');
}

main().catch(console.error);
