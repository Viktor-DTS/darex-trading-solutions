// –°–∫—Ä–∏–ø—Ç –¥–ª—è –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è bonusApprovalDate —á–µ—Ä–µ–∑ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞
// –í—ñ–¥–∫—Ä–∏–π—Ç–µ https://darex-trading-solutions.onrender.com —ñ –≤–∏–∫–æ–Ω–∞–π—Ç–µ —Ü–µ–π –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—ñ

async function fixBonusApprovalDates() {
    console.log('üöÄ –ü–æ—á–∞—Ç–æ–∫ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è bonusApprovalDate...');
    
    try {
        // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∑–∞—è–≤–∫–∏
        const response = await fetch('https://darex-trading-solutions.onrender.com/api/tasks');
        const tasks = await response.json();
        
        console.log(`üìä –ó–Ω–∞–π–¥–µ–Ω–æ ${tasks.length} –∑–∞—è–≤–æ–∫`);
        
        // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∑–∞—è–≤–∫–∏ –±–µ–∑ bonusApprovalDate
        const tasksWithoutBonusDate = tasks.filter(task => 
            !task.bonusApprovalDate || 
            task.bonusApprovalDate === '' || 
            task.bonusApprovalDate === null
        );
        
        console.log(`üîç –ó–Ω–∞–π–¥–µ–Ω–æ ${tasksWithoutBonusDate.length} –∑–∞—è–≤–æ–∫ –±–µ–∑ bonusApprovalDate`);
        
        let updatedCount = 0;
        let skippedCount = 0;
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –∫–æ–∂–Ω—É –∑–∞—è–≤–∫—É
        for (const task of tasksWithoutBonusDate) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∑–∞—è–≤–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞ –≤—Å—ñ–º–∞ —Ä–æ–ª—è–º–∏
            const isWarehouseApproved = task.approvedByWarehouse === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' || task.approvedByWarehouse === true;
            const isAccountantApproved = task.approvedByAccountant === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' || task.approvedByAccountant === true;
            const isRegionalManagerApproved = task.approvedByRegionalManager === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' || task.approvedByRegionalManager === true;
            
            // –Ø–∫—â–æ –∑–∞—è–≤–∫–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞ –≤—Å—ñ–º–∞ —Ä–æ–ª—è–º–∏, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ bonusApprovalDate
            if (isWarehouseApproved && isAccountantApproved && isRegionalManagerApproved && task.workPrice) {
                // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ bonusApprovalDate –Ω–∞ –ø–æ—Ç–æ—á–Ω–∏–π –º—ñ—Å—è—Ü—å
                const now = new Date();
                const currentMonth = String(now.getMonth() + 1).padStart(2, '0');
                const currentYear = now.getFullYear();
                const bonusApprovalDate = `${currentMonth}-${currentYear}`;
                
                try {
                    // –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞—è–≤–∫—É
                    const updateResponse = await fetch(`https://darex-trading-solutions.onrender.com/api/tasks/${task._id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            ...task,
                            bonusApprovalDate: bonusApprovalDate
                        })
                    });
                    
                    if (updateResponse.ok) {
                        console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ –∑–∞—è–≤–∫—É ${task._id}: bonusApprovalDate = ${bonusApprovalDate}`);
                        updatedCount++;
                    } else {
                        console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ ${task._id}`);
                        skippedCount++;
                    }
                } catch (error) {
                    console.log(`‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ ${task._id}:`, error);
                    skippedCount++;
                }
            } else {
                console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ –∑–∞—è–≤–∫—É ${task._id}: –Ω–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–∞ –≤—Å—ñ–º–∞ —Ä–æ–ª—è–º–∏ –∞–±–æ –Ω–µ–º–∞—î workPrice`);
                skippedCount++;
            }
        }
        
        console.log(`\nüìà –†–µ–∑—É–ª—å—Ç–∞—Ç–∏:`);
        console.log(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ: ${updatedCount} –∑–∞—è–≤–æ–∫`);
        console.log(`‚è≠Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} –∑–∞—è–≤–æ–∫`);
        console.log(`üìä –í—Å—å–æ–≥–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ: ${tasksWithoutBonusDate.length} –∑–∞—è–≤–æ–∫`);
        console.log(`\nüéâ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –¢–µ–ø–µ—Ä —Å–∏—Å—Ç–µ–º–∞ –º–æ–∂–µ –Ω–∞—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –ø—Ä–µ–º—ñ—ó.`);
        
        return {
            totalFound: tasksWithoutBonusDate.length,
            updated: updatedCount,
            skipped: skippedCount
        };
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ bonusApprovalDate:', error);
        throw error;
    }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è
console.log('üîß –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –≤–∏–ø—Ä–∞–≤–ª–µ–Ω–Ω—è bonusApprovalDate...');
console.log('üìù –í–∏–∫–æ–Ω–∞–π—Ç–µ: fixBonusApprovalDates()');
