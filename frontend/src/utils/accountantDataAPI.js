// API –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö –ø–∞–Ω–µ–ª—ñ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ –æ–¥–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º
import API_BASE_URL from '../config.js';

export const accountantDataAPI = {
  // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ –¥–ª—è –ø–∞–Ω–µ–ª—ñ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ –æ–¥–Ω–∏–º –∑–∞–ø–∏—Ç–æ–º
  async getAllAccountantData(user, region) {
    try {
      console.log('[accountantDataAPI] üöÄ Fetching all accountant data in single request...');
      
      const response = await fetch(`${API_BASE_URL}/accountant/data`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
          userLogin: user.login, 
          region: region || user.region 
        })
      });

      if (!response.ok) {
        const errorText = await response.text();
        console.error('[ERROR] accountantDataAPI.getAllAccountantData - –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø–∞–Ω–µ–ª—ñ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞');
      }

      const data = await response.json();
      console.log('[accountantDataAPI] ‚úÖ All data fetched successfully:', {
        tasksCount: Object.keys(data.tasks || {}).reduce((total, key) => total + (data.tasks[key] || []).length, 0),
        hasColumnSettings: !!data.columnSettings,
        hasInvoiceColumnSettings: !!data.invoiceColumnSettings,
        hasAccessRules: !!data.accessRules,
        hasRoles: !!data.roles
      });

      return data;
    } catch (error) {
      console.error('[ERROR] accountantDataAPI.getAllAccountantData - –≤–∏–Ω—è—Ç–æ–∫:', error);
      throw error;
    }
  },

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –≤–∫–ª–∞–¥–∫–∏ (fallback –º–µ—Ç–æ–¥)
  async getTabData(tab, region) {
    try {
      let url = `${API_BASE_URL}/tasks/filter?status=${encodeURIComponent(tab)}`;
      if (region && region !== '–£–∫—Ä–∞—ó–Ω–∞') {
        url += `&region=${encodeURIComponent(region)}`;
      }
      
      console.log(`[accountantDataAPI] Fetching data for tab: ${tab}, region: ${region}`);
      const res = await fetch(url);
      if (!res.ok) {
        const errorText = await res.text();
        console.error('[ERROR] accountantDataAPI.getTabData - –ø–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
        throw new Error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤–∫–ª–∞–¥–∫–∏');
      }
      const data = await res.json();
      console.log(`[accountantDataAPI] Fetched ${data.length} tasks for tab: ${tab}`);
      return data;
    } catch (error) {
      console.error('[ERROR] accountantDataAPI.getTabData - –≤–∏–Ω—è—Ç–æ–∫:', error);
      throw error;
    }
  }
};
