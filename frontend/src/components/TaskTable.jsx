import React, { useState, useEffect, useMemo, useRef } from 'react';
import ModalTaskForm from '../ModalTaskForm';
import DocumentUploadModal from './DocumentUploadModal';
import { columnsSettingsAPI } from '../utils/columnsSettingsAPI';
import { regionsAPI } from '../utils/regionsAPI';
import { logUserAction, EVENT_ACTIONS, ENTITY_TYPES } from '../utils/eventLogAPI';

function ColumnSettings({ allColumns, selected, onChange, onClose, onSave }) {
  return (
    <div style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'#000a',zIndex:2000,display:'flex',alignItems:'center',justifyContent:'center'}}>
      <div style={{background:'#fff',color:'#111',padding:32,borderRadius:8,minWidth:320,maxWidth:500}}>
        <h3>–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–ª–æ–Ω–æ–∫</h3>
        <div style={{marginBottom:16,fontSize:'14px',color:'#666'}}>
          –í–∏–±–µ—Ä—ñ—Ç—å –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
          <br />
          <small style={{color:'#888'}}>
            –í–∏–±—Ä–∞–Ω–æ: {selected.length} –∑ {allColumns.length} –∫–æ–ª–æ–Ω–æ–∫
          </small>
        </div>
        <div style={{display:'flex',flexDirection:'column',gap:8,maxHeight:400,overflowY:'auto',marginBottom:16}}>
          {allColumns.map(col => (
            <label key={col.key} style={{fontWeight:600,display:'flex',alignItems:'center',gap:8,padding:'4px 0'}}>
              <input 
                type="checkbox" 
                checked={selected.includes(col.key)} 
                onChange={e => {
                if (e.target.checked) onChange([...selected, col.key]);
                else onChange(selected.filter(k => k !== col.key));
                }} 
              /> 
              <span>{col.label}</span>
            </label>
          ))}
        </div>
        <div style={{display:'flex',gap:12,marginTop:24}}>
          <button onClick={() => { onSave(selected); onClose(); }} style={{flex:1,background:'#1976d2',color:'#fff',border:'none',padding:'8px',borderRadius:'4px',cursor:'pointer'}}>
            –ó–±–µ—Ä–µ–≥—Ç–∏
          </button>
        </div>
      </div>
    </div>
  );
}

function TaskTableComponent({
  tasks = [],
  allTasks = [],
  onApprove,
  onStatusChange,
  role = 'service',
  filters,
  onFilterChange,
  columns,
  approveField,
  commentField,
  statusOptions = ['–ù–æ–≤–∏–π', '–í —Ä–æ–±–æ—Ç—ñ', '–í–∏–∫–æ–Ω–∞–Ω–æ', '–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ'],
  onEdit,
  onDelete,
  onSaveBonusDate,
  dateRange,
  setDateRange,
  user,
  isArchive = false,
  isImported = false, // –ù–æ–≤–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –∑–∞—è–≤–æ–∫
  onHistoryClick,
  showInvoiceActions = false,
  onCompleteInvoiceRequest,
}) {
  console.log('[LOG] TaskTable received columns:', columns);
  console.log('[LOG] TaskTable role:', role);
  console.log('[LOG] TaskTable user:', user);
  console.log('[LOG] TaskTable user?.region:', user?.region);
  console.log('[LOG] TaskTable filters:', filters);
  console.log('[LOG] TaskTable onDelete:', onDelete);
  console.log('[LOG] TaskTable user?.role:', user?.role);
  console.log('[LOG] TaskTable onFilterChange:', onFilterChange);
  
  // –í—Å—ñ —Ö—É–∫–∏ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const [showSettings, setShowSettings] = useState(false);
  const [infoTask, setInfoTask] = useState(null);
  const [showInfo, setShowInfo] = useState(false);
  const [sortField, setSortField] = useState('requestDate');
  const [sortDirection, setSortDirection] = useState('desc');
  const [filter, setFilter] = useState('');
  const [rejectModal, setRejectModal] = useState({ open: false, taskId: null, comment: '' });
  const [deleteConfirmModal, setDeleteConfirmModal] = useState({ open: false, taskId: null, taskInfo: null });
  const [editDateModal, setEditDateModal] = useState({ open: false, taskId: null, month: '', year: '' });
  const [documentUploadModal, setDocumentUploadModal] = useState({ open: false, task: null });
  const [regions, setRegions] = useState([]);
  
  // –§–æ—Ä–º–∞—Ç—É—î –∑–Ω–∞—á–µ–Ω–Ω—è –∫–ª—ñ—Ç–∏–Ω–∫–∏, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–µ—Ä–µ–¥–∞—á—ñ –æ–±'—î–∫—Ç—ñ–≤ —É JSX
  function formatCellValue(value) {
    if (value === null || value === undefined) return '';
    const type = typeof value;
    if (type === 'string' || type === 'number' || type === 'boolean') return value;
    if (Array.isArray(value)) return value.join(', ');
    if (value instanceof Date) return value.toISOString().slice(0, 10);
    try {
      const json = JSON.stringify(value);
      return json && json.length <= 80 ? json : '';
    } catch (_) {
      return '';
    }
  }
  
  // –î–æ–¥–∞—é —Å—Ç–∞–Ω –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
  const [sortConfig, setSortConfig] = useState({ field: null, direction: 'asc' });
  
  // –ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –∫–ª—é—á –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  const userLogin = user?.login || 'default';
  const area = role; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ role —è–∫ –æ–±–ª–∞—Å—Ç—å
  
  const allColumns = columns;
  
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ useRef –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å
  const defaultKeysRef = useRef(null);
  const userLoginRef = useRef(null);
  const areaRef = useRef(null);
  
  // –û–Ω–æ–≤–ª—é—î–º–æ refs —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –¥—ñ–π—Å–Ω–æ –∑–º—ñ–Ω—é—é—Ç—å—Å—è
  if (defaultKeysRef.current === null || 
      JSON.stringify(defaultKeysRef.current) !== JSON.stringify(columns.map(c => c.key))) {
    defaultKeysRef.current = columns.map(c => c.key);
    console.log('[DEBUG] defaultKeysRef –æ–Ω–æ–≤–ª–µ–Ω–æ:', defaultKeysRef.current.length, 'keys');
  }
  
  if (userLoginRef.current !== userLogin) {
    userLoginRef.current = userLogin;
    console.log('[DEBUG] userLoginRef –æ–Ω–æ–≤–ª–µ–Ω–æ:', userLogin);
  }
  
  if (areaRef.current !== area) {
    areaRef.current = area;
    console.log('[DEBUG] areaRef –æ–Ω–æ–≤–ª–µ–Ω–æ:', area);
  }
  
  // –î–æ–¥–∞—î–º–æ —Å—Ç–∞–Ω –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  const [loadingSettings, setLoadingSettings] = useState(true);
  const [selected, setSelected] = useState([]);
  const [columnWidths, setColumnWidths] = useState({});
  const [settingsLoaded, setSettingsLoaded] = useState(false);
  
  // –î–æ–¥–∞—î–º–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è –ø—Ä–∏ –∑–º—ñ–Ω—ñ selected
  useEffect(() => {
    console.log('[LOG] –°—Ç–∞–Ω selected –∑–º—ñ–Ω–∏–≤—Å—è:', { selected, length: selected.length });
  }, [selected]);
  
  // –°–∫–∏–¥–∞—î–º–æ settingsLoaded –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ –æ–±–ª–∞—Å—Ç—ñ
  useEffect(() => {
    const prevUserLogin = userLoginRef.current;
    const prevArea = areaRef.current;
    
    if (prevUserLogin !== userLogin || prevArea !== area) {
      console.log('[DEBUG] –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–±–æ –æ–±–ª–∞—Å—Ç—å –∑–º—ñ–Ω–∏–ª–∞—Å—è, —Å–∫–∏–¥–∞—î–º–æ settingsLoaded');
      console.log('[DEBUG] –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π userLogin:', prevUserLogin, '–Ω–æ–≤–∏–π:', userLogin);
      console.log('[DEBUG] –ü–æ–ø–µ—Ä–µ–¥–Ω—è area:', prevArea, '–Ω–æ–≤–∞:', area);
      setSettingsLoaded(false);
      setSelected([]);
      setLoadingSettings(true);
    }
  }, [userLogin, area]);
  
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–µ—à–æ–≤–∞–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  const getCachedSettings = () => {
    try {
      const cacheKey = `columnSettings_${userLogin}_${area}`;
      const cached = localStorage.getItem(cacheKey);
      if (cached) {
        const parsed = JSON.parse(cached);
        console.log('[DEBUG] –ó–Ω–∞–π–¥–µ–Ω–æ –∫–µ—à–æ–≤–∞–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:', parsed);
        return parsed;
      }
    } catch (error) {
      console.log('[DEBUG] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —á–∏—Ç–∞–Ω–Ω—ñ –∫–µ—à—É:', error);
    }
    return null;
  };
  
  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –≤ –∫–µ—à
  const cacheSettings = (settings) => {
    try {
      const cacheKey = `columnSettings_${userLogin}_${area}`;
      localStorage.setItem(cacheKey, JSON.stringify(settings));
      console.log('[DEBUG] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –∫–µ—à:', settings);
    } catch (error) {
      console.log('[DEBUG] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∫–µ—à—É:', error);
    }
  };
  
  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∑ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  useEffect(() => {
    // –Ø–∫—â–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ —ñ –º–∏ –º–∞—î–º–æ selected, –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–Ω–æ–≤—É
    // –ê–ª–µ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–±–æ –æ–±–ª–∞—Å—Ç—å
    if (settingsLoaded && selected.length > 0 && !loadingSettings) {
      console.log('[DEBUG] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
      return;
    }
    
    // –°–ø–æ—á–∞—Ç–∫—É –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–µ—à
    const cachedSettings = getCachedSettings();
    if (cachedSettings && cachedSettings.visible && cachedSettings.visible.length > 0) {
      console.log('[DEBUG] –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è');
      console.log('[DEBUG] üîç –ö–µ—à–æ–≤–∞–Ω–∞ —à–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫:', cachedSettings.widths);
      
      setSelected(cachedSettings.visible);
      
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ä—è–¥–æ–∫ –∑ –∫–µ—à—É
      if (cachedSettings.order && cachedSettings.order.length > 0) {
        setSelected(cachedSettings.order);
      }
      
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —à–∏—Ä–∏–Ω—É –∑ –∫–µ—à—É
      if (cachedSettings.widths && typeof cachedSettings.widths === 'object' && Object.keys(cachedSettings.widths).length > 0) {
        console.log('[DEBUG] ‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —à–∏—Ä–∏–Ω—É –∑ –∫–µ—à—É:', cachedSettings.widths);
        setColumnWidths(cachedSettings.widths);
      } else {
        console.log('[DEBUG] ‚ö†Ô∏è –®–∏—Ä–∏–Ω–∞ –≤ –∫–µ—à—ñ –≤—ñ–¥—Å—É—Ç–Ω—è, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º');
        const defaultWidths = {};
        columns.forEach(col => {
          defaultWidths[col.key] = 120;
        });
        setColumnWidths(defaultWidths);
      }
      
      setSettingsLoaded(true);
      setLoadingSettings(false);
      return;
    }
    
    let isMounted = true;
    const loadUserSettings = async () => {
      setLoadingSettings(true);
      console.log('[DEBUG] === –ü–û–ß–ê–¢–û–ö –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨ ===');
      console.log('[DEBUG] userLogin:', userLoginRef.current);
      console.log('[DEBUG] area:', areaRef.current);
      console.log('[DEBUG] user:', user);
      console.log('[DEBUG] columns.length:', columns.length);
      console.log('[DEBUG] defaultKeys:', defaultKeysRef.current);
      
      if (userLoginRef.current && areaRef.current && columns.length > 0) {
        try {
          console.log('[DEBUG] –í–∏–∫–ª–∏–∫–∞—î–º–æ loadSettings...');
          const settings = await columnsSettingsAPI.loadSettings(userLoginRef.current, areaRef.current);
          console.log('[DEBUG] loadSettings –ø–æ–≤–µ—Ä–Ω—É–≤:', settings, '–¥–ª—è', userLoginRef.current, areaRef.current);
          
          if (isMounted) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤—Å—ñ –∫–ª—é—á—ñ –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å —ñ—Å–Ω—É—é—Ç—å —É –ø–æ—Ç–æ—á–Ω–∏—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö
            if (settings.visible && 
                settings.visible.length > 0 && 
                settings.visible.every(k => columns.some(c => c.key === k))) {
              console.log('[DEBUG] ‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:', settings.visible);
              console.log('[DEBUG] ‚úÖ –ü–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ –∑ —Å–µ—Ä–≤–µ—Ä–∞:', settings.order);
              
              // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –≤–∏–¥–∏–º—ñ –∫–æ–ª–æ–Ω–∫–∏
              setSelected(settings.visible);
              
              // –Ø–∫—â–æ —î –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ —ñ –≤—ñ–Ω –≤–∞–ª—ñ–¥–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
              if (settings.order && 
                  settings.order.length > 0 && 
                  settings.order.every(k => columns.some(c => c.key === k))) {
                console.log('[DEBUG] ‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫:', settings.order);
                setSelected(settings.order);
              } else {
                console.log('[DEBUG] ‚ö†Ô∏è –ü–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ –Ω–µ–≤–∞–ª—ñ–¥–Ω–∏–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ visible:', settings.visible);
              }
              
              // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫
              console.log('[DEBUG] üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ settings.widths:', settings.widths);
              console.log('[DEBUG] üîç –¢–∏–ø settings.widths:', typeof settings.widths);
              console.log('[DEBUG] üîç settings.widths —î –æ–±\'—î–∫—Ç–æ–º:', settings.widths && typeof settings.widths === 'object');
              console.log('[DEBUG] üîç –ö–ª—é—á—ñ –≤ settings.widths:', settings.widths ? Object.keys(settings.widths) : '–Ω–µ–º–∞—î');
              
              if (settings.widths && typeof settings.widths === 'object' && Object.keys(settings.widths).length > 0) {
                console.log('[DEBUG] ‚úÖ –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–±–µ—Ä–µ–∂–µ–Ω—É —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫:', settings.widths);
                setColumnWidths(settings.widths);
              } else {
                console.log('[DEBUG] ‚ö†Ô∏è –®–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –∞–±–æ –ø–æ—Ä–æ–∂–Ω—è, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º');
                const defaultWidths = {};
                columns.forEach(col => {
                  defaultWidths[col.key] = 120;
                });
                console.log('[DEBUG] üîß –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —à–∏—Ä–∏–Ω—É –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º:', defaultWidths);
                setColumnWidths(defaultWidths);
              }
              
              setSettingsLoaded(true);
              setLoadingSettings(false);
              
              // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –∫–µ—à
              cacheSettings(settings);
            } else {
              // –Ø–∫—â–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ
              console.log('[DEBUG] ‚ö†Ô∏è –°–∫–∏–¥–∞—î–º–æ –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ (defaultKeys):', defaultKeysRef.current);
              setSelected(defaultKeysRef.current);
              
              // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —à–∏—Ä–∏–Ω—É –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
              const defaultWidths = {};
              columns.forEach(col => {
                defaultWidths[col.key] = 120;
              });
              setColumnWidths(defaultWidths);
              
              setSettingsLoaded(true);
              
              // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ –∫–µ—à
              cacheSettings({ visible: defaultKeysRef.current, order: defaultKeysRef.current, widths: defaultWidths });
            }
          }
        } catch (error) {
          console.error('[ERROR] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:', error);
          if (isMounted) {
            console.log('[DEBUG] ‚ö†Ô∏è –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —á–µ—Ä–µ–∑ –ø–æ–º–∏–ª–∫—É:', defaultKeysRef.current);
            setSelected(defaultKeysRef.current);
            
            // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —à–∏—Ä–∏–Ω—É –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
            const defaultWidths = {};
            columns.forEach(col => {
              defaultWidths[col.key] = 120;
            });
            setColumnWidths(defaultWidths);
            
            setSettingsLoaded(true);
            
            // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ –∫–µ—à
            cacheSettings({ visible: defaultKeysRef.current, order: defaultKeysRef.current });
          }
        }
      } else {
        // –Ø–∫—â–æ –Ω–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, –æ–±–ª–∞—Å—Ç—ñ –∞–±–æ –∫–æ–ª–æ–Ω–æ–∫, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ
        console.log('[DEBUG] ‚ö†Ô∏è –ù–µ–º–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞/–æ–±–ª–∞—Å—Ç—ñ/–∫–æ–ª–æ–Ω–æ–∫, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ:', defaultKeysRef.current);
        console.log('[DEBUG] userLoginRef.current:', userLoginRef.current);
        console.log('[DEBUG] areaRef.current:', areaRef.current);
        console.log('[DEBUG] columns.length:', columns.length);
        if (isMounted) {
          setSelected(defaultKeysRef.current);
          setSettingsLoaded(true);
          
          // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ –∫–µ—à
          cacheSettings({ visible: defaultKeysRef.current, order: defaultKeysRef.current });
        }
      }
      console.log('[DEBUG] === –ö–Ü–ù–ï–¶–¨ –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨ ===');
      if (isMounted) setLoadingSettings(false);
    };
    loadUserSettings();
    return () => { isMounted = false; };
  }, [userLoginRef.current, areaRef.current, defaultKeysRef.current, settingsLoaded]); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ refs —è–∫ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
  
  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–≥—ñ–æ–Ω—ñ–≤
  useEffect(() => {
    regionsAPI.getAll().then(setRegions).catch(() => setRegions([]));
  }, []);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–≥—ñ–æ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –ø–æ–ª—è serviceRegion
  useEffect(() => {
    if (user?.region && user.region !== '–£–∫—Ä–∞—ó–Ω–∞' && filters.serviceRegion === '') {
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–≥—ñ–æ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —É –Ω—å–æ–≥–æ –æ–¥–∏–Ω —Ä–µ–≥—ñ–æ–Ω
      if (!user.region.includes(',')) {
        onFilterChange({
          target: {
            name: 'serviceRegion',
            value: user.region
          }
        });
      }
    }
  }, [user?.region, filters.serviceRegion, onFilterChange]);
  
  const visibleColumns = selected
    .map(key => allColumns.find(c => c.key === key))
    .filter(Boolean);
    
    
  // –†–µ–Ω–¥–µ—Ä–∏–º–æ —Å–ø—ñ–Ω–µ—Ä, –ø–æ–∫–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
  if (loadingSettings || selected.length === 0) {
    return (
      <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:'200px',color:'#666'}}>
        <div style={{textAlign:'center'}}>
          <div style={{fontSize:'24px',marginBottom:'8px'}}>‚è≥</div>
          <div>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –∫–æ–ª–æ–Ω–æ–∫...</div>
        </div>
      </div>
    );
  }
  
  const saveSettings = async (cols) => {
    console.log('[DEBUG] === –ü–û–ß–ê–¢–û–ö –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨ ===');
    console.log('[DEBUG] –í–∏–∫–ª–∏–∫ saveSettings –¥–ª—è', userLogin, area, cols);
    
    try {
      const result = await columnsSettingsAPI.saveSettings(userLogin, area, cols);
      console.log('[DEBUG] saveSettings —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', result);
      
      if (result) {
        console.log('[DEBUG] ‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!');
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ –∫–µ—à
        cacheSettings({ visible: cols, order: cols });
        
        console.log('[DEBUG] === –ö–Ü–ù–ï–¶–¨ –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨ ===');
        return true;
      } else {
        console.log('[DEBUG] ‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å');
        console.log('[DEBUG] === –ö–Ü–ù–ï–¶–¨ –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨ ===');
        return false;
      }
    } catch (error) {
      console.error('[ERROR] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å:', error);
      console.log('[DEBUG] === –ö–Ü–ù–ï–¶–¨ –ó–ë–ï–†–ï–ñ–ï–ù–ù–Ø –ù–ê–õ–ê–®–¢–£–í–ê–ù–¨ ===');
      return false;
    }
  };

  const statusOrder = {
    '–ù–æ–≤–∏–π': 1,
    '–í —Ä–æ–±–æ—Ç—ñ': 2,
    '–í–∏–∫–æ–Ω–∞–Ω–æ': 3,
    '–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ': 4,
  };
  const sortedTasks = [...tasks].sort((a, b) => (statusOrder[a.status] || 99) - (statusOrder[b.status] || 99));

  // –î–æ–¥–∞—é —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É —Ä—è–¥–∫–∞
  function getRowColor(t) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ö—Ç–æ—Å—å –≤—ñ–¥—Ö–∏–ª–∏–≤ –∑–∞—è–≤–∫—É
    if (t.approvedByAccountant === '–í—ñ–¥–º–æ–≤–∞' || t.approvedByWarehouse === '–í—ñ–¥–º–æ–≤–∞' || t.approvedByRegionalManager === '–í—ñ–¥–º–æ–≤–∞') {
      return '#ff9999'; // –ë—ñ–ª—å—à –Ω–∞—Å–∏—á–µ–Ω–∏–π —á–µ—Ä–≤–æ–Ω–∏–π –∫–æ–ª—ñ—Ä –¥–ª—è –≤—ñ–¥—Ö–∏–ª–µ–Ω–∏—Ö –∑–∞—è–≤–æ–∫
    }
    
    const acc = t.approvedByAccountant === true || t.approvedByAccountant === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ';
    const wh = t.approvedByWarehouse === true || t.approvedByWarehouse === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ';
    const reg = t.approvedByRegionalManager === true || t.approvedByRegionalManager === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ';
    
    if (acc && wh && reg) return 'linear-gradient(90deg, #ffb6e6 33%, #ffe066 33%, #66d9ff 66%)';
    if (acc && wh) return 'linear-gradient(90deg, #ffb6e6 50%, #ffe066 50%)';
    if (acc && reg) return 'linear-gradient(90deg, #ffb6e6 50%, #66d9ff 50%)';
    if (wh && reg) return 'linear-gradient(90deg, #ffe066 50%, #66d9ff 50%)';
    if (acc) return '#ffb6e6';
    if (wh) return '#ffe066';
    if (reg) return '#66d9ff';
    return '';
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è CSS –∫–ª–∞—Å—É —Ä—è–¥–∫–∞
  function getRowClass(t) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Ö—Ç–æ—Å—å –≤—ñ–¥—Ö–∏–ª–∏–≤ –∑–∞—è–≤–∫—É
    if (t.approvedByAccountant === '–í—ñ–¥–º–æ–≤–∞' || t.approvedByWarehouse === '–í—ñ–¥–º–æ–≤–∞' || t.approvedByRegionalManager === '–í—ñ–¥–º–æ–≤–∞') {
      return 'rejected';
    }
    
    const acc = t.approvedByAccountant === true || t.approvedByAccountant === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ';
    const wh = t.approvedByWarehouse === true || t.approvedByWarehouse === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ';
    const reg = t.approvedByRegionalManager === true || t.approvedByRegionalManager === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ';
    
    if (acc && wh && reg) return 'all-approved';
    if (acc && wh) return 'accountant-warehouse';
    if (acc && reg) return 'accountant-regional';
    if (wh && reg) return 'warehouse-regional';
    if (acc) return 'accountant-approved';
    if (wh) return 'warehouse-approved';
    if (reg) return 'regional-approved';
    return '';
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É —Ñ—ñ–ª—å—Ç—Ä–∞
  function getFilterType(colKey) {
    const selectFields = {
      'status': ['', '–ó–∞—è–≤–∫–∞', '–í —Ä–æ–±–æ—Ç—ñ', '–í–∏–∫–æ–Ω–∞–Ω–æ', '–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ'],
      'company': ['', '–î–¢–°', '–î–∞—Ä–µ–∫—Å –ï–Ω–µ—Ä–≥–æ', '—ñ–Ω—à–∞'],
      'paymentType': ['–Ω–µ –≤–∏–±—Ä–∞–Ω–æ', '–ë–µ–∑–≥–æ—Ç—ñ–≤–∫–∞', '–ì–æ—Ç—ñ–≤–∫–∞', '–ù–∞ –∫–∞—Ä—Ç—É', '–Ü–Ω—à–µ'],
      'approvedByWarehouse': ['–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ', '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ', '–í—ñ–¥–º–æ–≤–∞'],
      'approvedByAccountant': ['–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ', '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ', '–í—ñ–¥–º–æ–≤–∞'],
      'approvedByRegionalManager': ['–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ', '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ', '–í—ñ–¥–º–æ–≤–∞'],
      'serviceRegion': (() => {
        if (regions.length === 0) return [];
        
        console.log('DEBUG getFilterType: user.region =', user?.region);
        console.log('DEBUG getFilterType: user.region type =', typeof user?.region);
        console.log('DEBUG getFilterType: user.region includes comma =', user?.region?.includes(','));
        console.log('DEBUG getFilterType: regions =', regions.map(r => r.name));
        
        // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –º–Ω–æ–∂–∏–Ω–Ω—ñ —Ä–µ–≥—ñ–æ–Ω–∏, –ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —ó—Ö —Ä–µ–≥—ñ–æ–Ω–∏ (–±–µ–∑ "–ó–∞–≥–∞–ª—å–Ω–∏–π")
        if (user?.region && user.region.includes(',')) {
          const userRegions = user.region.split(',').map(r => r.trim());
          console.log('DEBUG getFilterType: userRegions =', userRegions);
          const result = ['', ...userRegions];
          console.log('DEBUG getFilterType: result for multi-region user (without –ó–∞–≥–∞–ª—å–Ω–∏–π) =', result);
          return result;
        }
        
        // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–∞—î –¥–æ—Å—Ç—É–ø –¥–æ –≤—Å—ñ—Ö —Ä–µ–≥—ñ–æ–Ω—ñ–≤ –∞–±–æ –æ–¥–∏–Ω —Ä–µ–≥—ñ–æ–Ω
        const result = ['', ...regions.map(r => r.name)];
        console.log('DEBUG getFilterType: result for single-region user =', result);
        return result;
      })()
    };
    
    return selectFields[colKey] || null;
  }

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è, —á–∏ –ø–æ–ª–µ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–µ
  function isFieldDisabled(colKey) {
    if (colKey === 'serviceRegion') {
      // –†–æ–∑–±–ª–æ–∫–æ–≤—É—î–º–æ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –º–Ω–æ–∂–∏–Ω–Ω–∏–º–∏ —Ä–µ–≥—ñ–æ–Ω–∞–º–∏ –∞–±–æ –∑ —Ä–µ–≥—ñ–æ–Ω–æ–º "–£–∫—Ä–∞—ó–Ω–∞"
      if (user?.region === '–£–∫—Ä–∞—ó–Ω–∞') return false;
      if (user?.region && user.region.includes(',')) return false;
      // –ë–ª–æ–∫—É—î–º–æ –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑ –æ–¥–Ω–∏–º —Ä–µ–≥—ñ–æ–Ω–æ–º
      return true;
    }
    return false;
  }

  // –í–∏–±—ñ—Ä —ñ—Å—Ç–æ—Ä—ñ—ó –ø–æ –∑–∞–º–æ–≤–Ω–∏–∫—É
  const getClientHistory = (client) => (allTasks.length ? allTasks : tasks).filter(t => t.client === client);

  // –ú–æ–¥–∞–ª–∫–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó
  function InfoModal({task, onClose, history}) {
    if (!task || !task.requestDate) return null;
    return (
      <div style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'#000a',zIndex:3000,display:'flex',alignItems:'center',justifyContent:'center'}}>
        <div style={{background:'#fff',color:'#111',padding:48,borderRadius:0,width:'100vw',height:'100vh',overflowY:'auto',fontSize:'1.15rem',boxSizing:'border-box',display:'flex',flexDirection:'column'}}>
          <h2 style={{marginTop:0,marginBottom:24}}>–Ü—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç –ø–æ –∑–∞–º–æ–≤–Ω–∏–∫—É: {task.client}</h2>
          <div style={{flex:1,overflowY:'auto',background:'#f7f7fa',padding:16,borderRadius:8}}>
            {history.length === 0 ? <div>–Ü—Å—Ç–æ—Ä—ñ—è –≤—ñ–¥—Å—É—Ç–Ω—è</div> :
              <ul style={{margin:0,padding:0,listStyle:'none'}}>
                {history.map(h => (
                  <li key={h.id} style={{marginBottom:16,paddingBottom:16,borderBottom:'1px solid #eee'}}>
                    <b>–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏:</b> {h.requestDate} <b>–°—Ç–∞—Ç—É—Å:</b> {h.status}<br/>
                    <b>–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —Ä–æ–±—ñ—Ç:</b> {h.work}<br/>
                    <b>–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç:</b> {h.date}<br/>
                    <b>–†–µ–≥—ñ–æ–Ω —Å–µ—Ä–≤—ñ—Å–Ω–æ–≥–æ –≤—ñ–¥–¥—ñ–ª—É:</b> {h.serviceRegion}<br/>
                    <b>–°–µ—Ä–≤—ñ—Å–Ω–∏–π —ñ–Ω–∂–µ–Ω–µ—Ä ‚Ññ1:</b> {h.engineer1}<br/>
                    <b>–°–µ—Ä–≤—ñ—Å–Ω–∏–π —ñ–Ω–∂–µ–Ω–µ—Ä ‚Ññ2:</b> {h.engineer2}<br/>
                    <b>–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –ø–æ—Å–ª—É–≥–∏:</b> {h.serviceTotal}<br/>
                    <b>–í–∏–¥ –æ–ø–ª–∞—Ç–∏:</b> {h.paymentType}<br/>
                    <b>–ù–æ–º–µ—Ä —Ä–∞—Ö—É–Ω–∫—É:</b> {h.invoice}<br/>
                    <b>–ê–¥—Ä–µ—Å–∞:</b> {h.address}<br/>
                    <b>–ó–∞–≤–æ–¥—Å—å–∫–∏–π –Ω–æ–º–µ—Ä –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è:</b> {h.equipmentSerial}<br/>
                    <b>–¢–∏–ø –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è:</b> {h.equipment}<br/>
                    <b>–û–ø–∏—Å:</b> {h.requestDesc}
                  </li>
                ))}
              </ul>
            }
          </div>
          <div style={{display:'flex',gap:12,marginTop:32}}>
            <button onClick={onClose} style={{flex:1,fontSize:'1.1rem',padding:'16px 0'}}>–ó–∞–∫—Ä–∏—Ç–∏</button>
          </div>
        </div>
      </div>
    );
  }

  // --- –î–æ–¥–∞—é —Ñ—É–Ω–∫—Ü—ñ—é –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤—ñ–¥–º–æ–≤–∏ ---
  const handleRejectConfirm = () => {
    if (rejectModal.taskId && onApprove) {
      // –õ–æ–≥—É—î–º–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏
      const task = tasks.find(t => t.id === rejectModal.taskId);
      if (task) {
        const action = rejectModal.comment ? EVENT_ACTIONS.REJECT : EVENT_ACTIONS.APPROVE;
        const description = rejectModal.comment ? 
          `–í—ñ–¥—Ö–∏–ª–µ–Ω–æ –∑–∞—è–≤–∫—É: ${task.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${task.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}` :
          `–ó–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –∑–∞—è–≤–∫—É: ${task.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${task.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`;
        
        logUserAction(user, action, ENTITY_TYPES.TASK, rejectModal.taskId, description, {
          requestNumber: task.requestNumber,
          client: task.client,
          work: task.work,
          comment: rejectModal.comment,
          status: task.status
        });
      }
      
      onApprove(rejectModal.taskId, '–í—ñ–¥–º–æ–≤–∞', rejectModal.comment);
    }
    setRejectModal({ open: false, taskId: null, comment: '' });
  };

  const handleRejectCancel = () => {
    setRejectModal({ open: false, taskId: null, comment: '' });
  };

  // --- –î–æ–¥–∞—é —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è ---
  const handleDeleteConfirm = () => {
    if (deleteConfirmModal.taskId && onDelete) {
      // –õ–æ–≥—É—î–º–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏
      const taskInfo = deleteConfirmModal.taskInfo;
      logUserAction(user, EVENT_ACTIONS.DELETE, ENTITY_TYPES.TASK, deleteConfirmModal.taskId, 
        `–í–∏–¥–∞–ª–µ–Ω–æ –∑–∞—è–≤–∫—É: ${taskInfo?.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${taskInfo?.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'} - ${taskInfo?.work || '–ë–µ–∑ —Ä–æ–±—ñ—Ç'}`, {
          requestNumber: taskInfo?.requestNumber,
          client: taskInfo?.client,
          work: taskInfo?.work,
          date: taskInfo?.date,
          status: taskInfo?.status
        });
      
      onDelete(deleteConfirmModal.taskId);
    }
    setDeleteConfirmModal({ open: false, taskId: null, taskInfo: null });
  };

  const handleDeleteCancel = () => {
    setDeleteConfirmModal({ open: false, taskId: null, taskInfo: null });
  };

  const showDeleteConfirmation = (task) => {
    setDeleteConfirmModal({ 
      open: true, 
      taskId: task.id, 
      taskInfo: {
        requestNumber: task.requestNumber,
        client: task.client,
        work: task.work,
        date: task.date,
        status: task.status
      }
    });
  };

  // --- Drag and drop –¥–ª—è –∫–æ–ª–æ–Ω–æ–∫ ---
  const handleDragStart = (e, idx) => {
    e.dataTransfer.effectAllowed = 'move';
    e.dataTransfer.setData('colIdx', idx);
  };
  
  const handleDrop = async (e, idx) => {
    const fromIdx = +e.dataTransfer.getData('colIdx');
    if (fromIdx === idx) return;
    
    const newOrder = [...selected];
    const [removed] = newOrder.splice(fromIdx, 1);
    newOrder.splice(idx, 0, removed);
    setSelected(newOrder);
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π –ø–æ—Ä—è–¥–æ–∫ —á–µ—Ä–µ–∑ API
    if (user?.login && areaRef.current) {
      try {
        console.log('[DEBUG] –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π –ø–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫:', newOrder);
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–æ–≤–∏–π –ø–æ—Ä—è–¥–æ–∫ —è–∫ —ñ visible, —ñ —è–∫ order
        const success = await columnsSettingsAPI.saveSettings(userLoginRef.current, areaRef.current, newOrder, newOrder, columnWidths);
        if (!success) {
          console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ—Ä—è–¥–∫—É –∫–æ–ª–æ–Ω–æ–∫');
        } else {
          console.log('[DEBUG] –ü–æ—Ä—è–¥–æ–∫ –∫–æ–ª–æ–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ');
          // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –∑ –Ω–æ–≤–∏–º –ø–æ—Ä—è–¥–∫–æ–º
          cacheSettings({ visible: newOrder, order: newOrder, widths: columnWidths });
        }
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø–æ—Ä—è–¥–∫—É –∫–æ–ª–æ–Ω–æ–∫:', error);
      }
    }
  };
  
  const handleDragOver = e => e.preventDefault();

  // --- –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ —à–∏—Ä–∏–Ω–∏ –∫–æ–ª–æ–Ω–∫–∏ ---
  const handleColumnResize = (columnKey, newWidth) => {
    console.log('[DEBUG] –ó–º—ñ–Ω–∞ —à–∏—Ä–∏–Ω–∏ –∫–æ–ª–æ–Ω–∫–∏:', { columnKey, newWidth });
    const clampedWidth = Math.max(80, Math.min(500, newWidth)); // –ú—ñ–Ω—ñ–º—É–º 80px, –º–∞–∫—Å–∏–º—É–º 500px
    setColumnWidths(prev => ({
      ...prev,
      [columnKey]: clampedWidth
    }));
    
    // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑ debounce
    clearTimeout(window.columnResizeTimeout);
    window.columnResizeTimeout = setTimeout(() => {
      // –û—Ç—Ä–∏–º—É—î–º–æ –∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω columnWidths
      setColumnWidths(currentWidths => {
        const newWidths = { ...currentWidths, [columnKey]: clampedWidth };
        saveColumnWidths(newWidths);
        return currentWidths; // –ù–µ –∑–º—ñ–Ω—é—î–º–æ —Å—Ç–∞–Ω —Ç—É—Ç, –≤—ñ–Ω –≤–∂–µ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –≤–∏—â–µ
      });
    }, 500);
  };

  // --- –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —à–∏—Ä–∏–Ω–∏ –∫–æ–ª–æ–Ω–æ–∫ ---
  const saveColumnWidths = async (widths) => {
    if (user?.login && areaRef.current) {
      try {
        console.log('[DEBUG] üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —à–∏—Ä–∏–Ω—É –∫–æ–ª–æ–Ω–æ–∫:', widths);
        console.log('[DEBUG] üíæ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:', userLoginRef.current);
        console.log('[DEBUG] üíæ –û–±–ª–∞—Å—Ç—å:', areaRef.current);
        console.log('[DEBUG] üíæ –í–∏–¥–∏–º—ñ –∫–æ–ª–æ–Ω–∫–∏:', selected);
        
        const success = await columnsSettingsAPI.saveSettings(userLoginRef.current, areaRef.current, selected, selected, widths);
        if (!success) {
          console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —à–∏—Ä–∏–Ω–∏ –∫–æ–ª–æ–Ω–æ–∫');
        } else {
          console.log('[DEBUG] ‚úÖ –®–∏—Ä–∏–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–∞ –≤ –±–∞–∑—ñ');
          // –û–Ω–æ–≤–ª—é—î–º–æ –∫–µ—à –∑ –Ω–æ–≤–æ—é —à–∏—Ä–∏–Ω–æ—é
          cacheSettings({ visible: selected, order: selected, widths: widths });
          console.log('[DEBUG] ‚úÖ –ö–µ—à –æ–Ω–æ–≤–ª–µ–Ω–æ –∑ –Ω–æ–≤–æ—é —à–∏—Ä–∏–Ω–æ—é');
        }
      } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —à–∏—Ä–∏–Ω–∏ –∫–æ–ª–æ–Ω–æ–∫:', error);
      }
    } else {
      console.log('[DEBUG] ‚ö†Ô∏è –ù–µ –º–æ–∂—É –∑–±–µ—Ä–µ–≥—Ç–∏ —à–∏—Ä–∏–Ω—É - –Ω–µ–º–∞—î user.login –∞–±–æ areaRef.current');
      console.log('[DEBUG] ‚ö†Ô∏è user?.login:', user?.login);
      console.log('[DEBUG] ‚ö†Ô∏è areaRef.current:', areaRef.current);
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –∫–ª—ñ–∫—ñ–≤ –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
  const handleColumnClick = (field) => {
    console.log('[DEBUG] –ö–ª—ñ–∫ –ø–æ –∫–æ–ª–æ–Ω—Ü—ñ:', field);
    setSortConfig(prevConfig => {
      if (prevConfig.field === field) {
        // –Ø–∫—â–æ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ —Ç—É —Å–∞–º—É –∫–æ–ª–æ–Ω–∫—É, –∑–º—ñ–Ω—é—î–º–æ –Ω–∞–ø—Ä—è–º–æ–∫
        return {
          field,
          direction: prevConfig.direction === 'asc' ? 'desc' : 'asc'
        };
      } else {
        // –Ø–∫—â–æ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ –Ω–æ–≤—É –∫–æ–ª–æ–Ω–∫—É, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ asc –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        return {
          field,
          direction: 'asc'
        };
      }
    });
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ –∫–ª—ñ–∫—É –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö –∫–æ–ª–æ–Ω–æ–∫
  const handleColumnDoubleClick = (field) => {
    console.log('[DEBUG] –ü–æ–¥–≤—ñ–π–Ω–∏–π –∫–ª—ñ–∫ –ø–æ –∫–æ–ª–æ–Ω—Ü—ñ:', field);
    setSortConfig(prevConfig => {
      if (prevConfig.field === field) {
        // –Ø–∫—â–æ –ø–æ–¥–≤—ñ–π–Ω–æ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ —Ç—É —Å–∞–º—É –∫–æ–ª–æ–Ω–∫—É, –∑–º—ñ–Ω—é—î–º–æ –Ω–∞–ø—Ä—è–º–æ–∫
        return {
          field,
          direction: prevConfig.direction === 'asc' ? 'desc' : 'asc'
        };
      } else {
        // –Ø–∫—â–æ –ø–æ–¥–≤—ñ–π–Ω–æ –∫–ª—ñ–∫–Ω—É–ª–∏ –Ω–∞ –Ω–æ–≤—É –∫–æ–ª–æ–Ω–∫—É, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ asc –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        return {
          field,
          direction: 'asc'
        };
      }
    });
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É —Ä–∞—Ö—É–Ω–∫—É
  const getInvoiceStatus = (task) => {
    // –õ–æ–≥—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –ø–µ—Ä—à–∏—Ö 3 –∑–∞—è–≤–æ–∫ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    if (task.id && (task.id.includes('0000173') || task.id.includes('0000174') || task.id.includes('0000175'))) {
      console.log('[DEBUG] getInvoiceStatus - –ø–æ–ª—è –∑–∞—è–≤–∫–∏:', {
        id: task.id,
        requestNumber: task.requestNumber,
        invoiceRequested: task.invoiceRequested,
        invoiceRequestId: task.invoiceRequestId,
        invoiceStatus: task.invoiceStatus,
        invoiceFile: task.invoiceFile,
        invoiceFileName: task.invoiceFileName,
        allFields: Object.keys(task).filter(key => 
          key.toLowerCase().includes('invoice') || 
          key.toLowerCase().includes('—Ä–∞—Ö—É–Ω–æ–∫') ||
          key.toLowerCase().includes('request')
        )
      });
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –∑–∞–ø–∏—Ç –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫
    const hasInvoiceRequest = task.invoiceRequested === true || 
                             task.invoiceRequestId || 
                             task.invoiceStatus;
    
    // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–∞–ø–∏—Ç—É –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫
    if (!hasInvoiceRequest) {
      return { status: 'not_requested', color: '#dc3545', label: '–ù–µ –ø–æ–¥–∞–Ω–∞' }; // –ß–µ—Ä–≤–æ–Ω–∏–π
    }
    
    // –î–û–î–ê–¢–ö–û–í–ê –õ–û–ì–Ü–ö–ê: –Ø–∫—â–æ —î —Ñ–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É, –ø–æ–∫–∞–∑—É—î–º–æ "–í–∏–∫–æ–Ω–∞–Ω–æ"
    if (task.invoiceFile && task.invoiceFile.trim() !== '') {
      console.log('[DEBUG] getInvoiceStatus - –∑–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É –¥–ª—è –∑–∞—è–≤–∫–∏:', task.id, '—Ñ–∞–π–ª:', task.invoiceFile);
      return { status: 'completed', color: '#28a745', label: '–í–∏–∫–æ–Ω–∞–Ω–æ' }; // –ó–µ–ª–µ–Ω–∏–π
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Ç—É –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫
    if (task.invoiceStatus) {
      switch (task.invoiceStatus) {
        case 'completed':
          return { status: 'completed', color: '#28a745', label: '–í–∏–∫–æ–Ω–∞–Ω–æ' }; // –ó–µ–ª–µ–Ω–∏–π
        case 'rejected':
          return { status: 'rejected', color: '#dc3545', label: '–í—ñ–¥—Ö–∏–ª–µ–Ω–∞' }; // –ß–µ—Ä–≤–æ–Ω–∏–π
        case 'processing':
          return { status: 'processing', color: '#ffc107', label: '–í –æ–±—Ä–æ–±—Ü—ñ' }; // –ñ–æ–≤—Ç–∏–π
        case 'pending':
        default:
          return { status: 'pending', color: '#ffc107', label: '–û—á—ñ–∫—É—î' }; // –ñ–æ–≤—Ç–∏–π
      }
    }
    
    // –Ø–∫—â–æ —î –∑–∞–ø–∏—Ç, –∞–ª–µ –Ω–µ–º–∞—î —Å—Ç–∞—Ç—É—Å—É - –≤–≤–∞–∂–∞—î–º–æ –æ—á—ñ–∫—É—é—á–∏–º
    return { status: 'pending', color: '#ffc107', label: '–û—á—ñ–∫—É—î' }; // –ñ–æ–≤—Ç–∏–π
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É –ø–æ–ª—è
  const getFieldType = (field) => {
    // –ü–æ–ª—è –¥–∞—Ç
    const dateFields = ['requestDate', 'date', 'paymentDate', 'approvalDate', 'bonusApprovalDate'];
    if (dateFields.includes(field)) return 'date';
    
    // –ß–∏—Å–ª–æ–≤—ñ –ø–æ–ª—è
    const numericFields = [
      'serviceTotal', 'oilUsed', 'oilPrice', 'oilTotal', 'filterCount', 'filterPrice', 'filterSum',
      'fuelFilterCount', 'fuelFilterPrice', 'fuelFilterSum', 'airFilterCount', 'airFilterPrice', 'airFilterSum',
      'antifreezeL', 'antifreezePrice', 'antifreezeSum', 'otherSum', 'workPrice', 'perDiem', 'living',
      'otherExp', 'transportKm', 'transportSum', 'serviceBonus'
    ];
    if (numericFields.includes(field)) return 'numeric';
    
    // –¢–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–ª—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
    return 'text';
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ–¥–≤—ñ–π–Ω–æ–≥–æ –∫–ª—ñ–∫—É –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∫–æ–ª–æ–Ω–∫–∏
  const handleSort = (field) => {
    console.log('[DEBUG] –ü–æ–¥–≤—ñ–π–Ω–∏–π –∫–ª—ñ–∫ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫:', field);
    
    setSortConfig(prevConfig => {
      // –Ø–∫—â–æ –∫–ª—ñ–∫–∞—î–º–æ –Ω–∞ —Ç—É –∂ –∫–æ–ª–æ–Ω–∫—É, –∑–º—ñ–Ω—é—î–º–æ –Ω–∞–ø—Ä—è–º–æ–∫
      if (prevConfig.field === field) {
        return {
          field: field,
          direction: prevConfig.direction === 'asc' ? 'desc' : 'asc'
        };
      } else {
        // –Ø–∫—â–æ –∫–ª—ñ–∫–∞—î–º–æ –Ω–∞ –Ω–æ–≤—É –∫–æ–ª–æ–Ω–∫—É, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ asc
        return {
          field: field,
          direction: 'asc'
        };
      }
    });
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö
  const sortData = (data, field, direction) => {
    if (!field) return data;
    
    console.log('[DEBUG] –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è:', { field, direction, dataLength: data.length });
    
    const fieldType = getFieldType(field);
    
    return [...data].sort((a, b) => {
      let aValue = a[field];
      let bValue = b[field];
      
      // –û–±—Ä–æ–±–∫–∞ null/undefined –∑–Ω–∞—á–µ–Ω—å
      if (aValue === null || aValue === undefined) aValue = '';
      if (bValue === null || bValue === undefined) bValue = '';
      
      let comparison = 0;
      
      switch (fieldType) {
        case 'date':
          // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –¥–∞—Ç
          const dateA = new Date(aValue || '1900-01-01');
          const dateB = new Date(bValue || '1900-01-01');
          comparison = dateA - dateB;
          break;
          
        case 'numeric':
          // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —á–∏—Å–µ–ª
          const numA = parseFloat(aValue) || 0;
          const numB = parseFloat(bValue) || 0;
          comparison = numA - numB;
          break;
          
        case 'text':
        default:
          // –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É (—É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞)
          const ukrainianCollator = new Intl.Collator('uk', { sensitivity: 'base' });
          comparison = ukrainianCollator.compare(String(aValue), String(bValue));
          break;
      }
      
      return direction === 'asc' ? comparison : -comparison;
    });
  };

  // --- –§–£–ù–ö–¶–Ü–Ø –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –¥–∞—Ç–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è ---
  const handleSaveBonusDate = () => {
    if (!editDateModal.taskId || !editDateModal.month || !editDateModal.year) return;
    const newDate = `${editDateModal.month.padStart(2, '0')}-${editDateModal.year}`;
    if (onSaveBonusDate) {
      // –í–∏–∫–ª–∏–∫–∞—î–º–æ onSaveBonusDate –∑ taskId —Ç–∞ –Ω–æ–≤–æ—é –¥–∞—Ç–æ—é
      onSaveBonusDate(editDateModal.taskId, newDate);
    }
    setEditDateModal({ open: false, taskId: null, month: '', year: '' });
  };

  // --- –ú–ê–°–ò–í–ò –¥–ª—è –≤–∏–±–æ—Ä—É –º—ñ—Å—è—Ü—è —Ç–∞ —Ä–æ–∫—É ---
  const months = [
    '01','02','03','04','05','06','07','08','09','10','11','12'
  ];
  const years = [];
  const now = new Date();
  for (let y = now.getFullYear() - 2; y <= now.getFullYear() + 1; y++) years.push(String(y));

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –Ω–∞—Ä—è–¥—É
  const generateWorkOrder = (task) => {
    // –§–æ—Ä–º—É—î–º–æ –¥–∞–Ω—ñ –¥–ª—è –Ω–∞—Ä—è–¥—É
    const workOrderData = {
      client: task.client || '',
      address: task.address || '',
      equipment: task.equipment || task.equipmentType || '',
      serialNumber: task.equipmentSerial || task.serialNumber || '',
      engineer1: task.engineer1 || '',
      engineer2: task.engineer2 || '',
      engineer3: task.engineer3 || '',
      engineer4: task.engineer4 || '',
      engineer5: task.engineer5 || '',
      engineer6: task.engineer6 || '',
      requestDate: task.requestDate || '',
      workDescription: task.requestDesc || task.work || '',
      workType: task.workType || '—Ä–µ–º–æ–Ω—Ç',
      technicalCondition: task.technicalCondition || '',
      operatingHours: task.operatingHours || '',
      performedWork: task.performedWork || '',
      testResults: task.testResults || '–í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –¥–∏–∑–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∑ —Ä–æ–±–æ—á–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±–µ–∑ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø—ñ–¥ —á–∞—Å –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è',
      materialsCost: task.materialsCost || '0',
      defectCost: task.defectCost || '0',
      repairCost: task.repairCost || '0',
      travelCost: task.travelCost || '0',
      totalCost: task.totalCost || '0',
      paymentMethod: task.paymentType || '–±–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫',
      recommendations: task.recommendations || '',
      // –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–ª—è –¥–ª—è –Ω–æ–≤–∏—Ö —à–∞–±–ª–æ–Ω—ñ–≤
      requestNumber: task.requestNumber || '',
      workDate: task.date || '',
      engineModel: task.engineModel || '',
      engineSerial: task.engineSerial || ''
    };

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —É–º–æ–≤—É –¥–ª—è –Ω–æ–º–µ—Ä–∞ –Ω–∞—Ä—è–¥—É
    const hasRequestNumber = task.requestNumber && task.requestNumber.trim() !== '';
    const hasWorkDate = task.date && task.date.trim() !== '';
    const workOrderNumber = hasRequestNumber ? task.requestNumber : '____';
    const workOrderDate = hasWorkDate ? task.date : '____';

    // –§–æ—Ä–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —ñ–Ω–∂–µ–Ω–µ—Ä—ñ–≤
    const engineers = [
      workOrderData.engineer1,
      workOrderData.engineer2,
      workOrderData.engineer3,
      workOrderData.engineer4,
      workOrderData.engineer5,
      workOrderData.engineer6
    ].filter(eng => eng && eng.trim() !== '').join(', ');

    // –í–∏–∑–Ω–∞—á–∞—î–º–æ –∫–æ–º–ø–∞–Ω—ñ—é —Ç–∞ –≤–∏–±–∏—Ä–∞—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —à–∞–±–ª–æ–Ω
    const company = task.company || '';
    let workOrderHTML = '';

    if (company === '–î–¢–°' || company === '–î–∞—Ä–µ–∫—Å –¢—Ä–µ–π–¥—ñ–Ω–≥ –°–æ–ª—é—à–Ω—Å') {
      // –®–∞–±–ª–æ–Ω –¥–ª—è –∫–æ–º–ø–∞–Ω—ñ—ó –î–¢–°
      workOrderHTML = generateDTSTemplate(workOrderData, workOrderNumber, workOrderDate, engineers);
    } else {
      // –®–∞–±–ª–æ–Ω –¥–ª—è –∫–æ–º–ø–∞–Ω—ñ—ó –î–∞—Ä–µ–∫—Å –ï–Ω–µ—Ä–≥–æ (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)
      workOrderHTML = generateDarexEnergyTemplate(workOrderData, workOrderNumber, workOrderDate, engineers);
    }

    // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –Ω–æ–≤–µ –≤—ñ–∫–Ω–æ –∑ –Ω–∞—Ä—è–¥–æ–º
    const newWindow = window.open('', '_blank', 'width=1200,height=900,scrollbars=yes,resizable=yes');
    newWindow.document.write(workOrderHTML);
    newWindow.document.close();
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —à–∞–±–ª–æ–Ω—É –î–¢–°
  const generateDTSTemplate = (workOrderData, workOrderNumber, workOrderDate, engineers) => {
    return `
      <!DOCTYPE html>
      <html lang="uk">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–ù–∞—Ä—è–¥ –î–¢–°-2</title>
        <style>
          body {
            font-family: 'Times New Roman', serif;
            margin: 0;
            padding: 20px;
            background: white;
            color: black;
            line-height: 1.4;
            font-size: 12px;
          }
          .header {
            margin-bottom: 20px;
            border-bottom: 2px solid #000;
            padding-bottom: 15px;
          }
          .qr-code {
            position: absolute;
            top: 20px;
            right: 20px;
            width: 60px;
            height: 60px;
            background: #f0f0f0;
            border: 1px solid #ccc;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 8px;
          }
          .page {
            width: 100%;
            max-width: 800px;
            margin: 0 auto 30px auto;
            border: 1px solid #000;
            padding: 20px;
            min-height: 1000px;
            page-break-after: always;
          }
          .page:last-child {
            page-break-after: avoid;
          }
          .work-order-title {
            text-align: center;
            font-size: 14px;
            font-weight: bold;
            margin-bottom: 20px;
            border-bottom: 1px solid #000;
            padding-bottom: 10px;
          }
          .form-row {
            margin-bottom: 12px;
            display: flex;
            align-items: flex-start;
          }
          .form-label {
            font-weight: bold;
            min-width: 120px;
            flex-shrink: 0;
            font-size: 11px;
          }
          .form-value {
            flex: 1;
            border-bottom: 1px dotted #000;
            min-height: 16px;
            padding-left: 5px;
          }
          .form-value:empty::after {
            content: "_________________";
            color: #999;
          }
          .section-title {
            font-weight: bold;
            margin: 15px 0 8px 0;
            font-size: 11px;
          }
          .materials-table {
            width: 100%;
            border-collapse: collapse;
            margin: 10px 0;
            font-size: 9px;
          }
          .materials-table th,
          .materials-table td {
            border: 1px solid #000;
            padding: 3px;
            text-align: center;
          }
          .materials-table th {
            background: #f0f0f0;
            font-weight: bold;
            font-size: 10px;
          }
          .signature-section {
            margin-top: 30px;
            display: flex;
            justify-content: space-between;
          }
          .signature-box {
            text-align: center;
            width: 150px;
          }
          .signature-line {
            border-bottom: 1px solid #000;
            height: 25px;
            margin-bottom: 5px;
          }
          .signature-text {
            font-size: 9px;
            color: #666;
          }
          .footer {
            margin-top: 20px;
            text-align: center;
            font-size: 10px;
            color: #666;
          }
          .no-print {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
          }
          @media print {
            body {
              padding: 0;
            }
            .no-print {
              display: none;
            }
            .page {
              max-width: none;
              margin: 0;
              border: none;
              padding: 20px;
            }
          }
        </style>
      </head>
      <body>
        <div class="header">
          <!-- –í–µ—Ä—Ö–Ω—è —Å–µ–∫—Ü—ñ—è —à–∞–ø–∫–∏ - –ø–µ—Ä—à–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è -->
          <div style="width: 100%; margin-bottom: 15px;">
            <img src="/images/–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è1.png" alt="–®–∞–ø–∫–∞ –∫–æ–º–ø–∞–Ω—ñ—ó" style="width: 100%; height: auto; max-width: 100%;" />
          </div>
          
          <!-- –ù–∏–∂–Ω—è —Å–µ–∫—Ü—ñ—è —à–∞–ø–∫–∏ - –¥—Ä—É–≥–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è -->
          <div style="width: 100%;">
            <img src="/images/–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è2.png" alt="–Æ—Ä–∏–¥–∏—á–Ω–∞ –∞–¥—Ä–µ—Å–∞" style="width: 100%; height: auto; max-width: 100%;" />
          </div>
        </div>

        <div class="work-order-container">
          <div class="work-order-title">
            –ù–∞—Ä—è–¥ –Ω–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ä–æ–±—ñ—Ç ‚Ññ ${workOrderNumber} –≤—ñ–¥ ${workOrderDate} —Ä.)
          </div>
          
          <div class="form-row">
            <div class="form-label">–ó–ê–ú–û–í–ù–ò–ö:</div>
            <div class="form-value">${workOrderData.client}</div>
          </div>
          
          <div class="form-row">
            <div class="form-label">–ê–¥—Ä–µ—Å–∞:</div>
            <div class="form-value">${workOrderData.address}</div>
          </div>
          
          <div class="form-row">
            <div class="form-label">–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è:</div>
            <div class="form-value">${workOrderData.equipment}</div>
          </div>
          
          <div class="form-row">
            <div class="form-label">–ó–∞–≤. ‚Ññ</div>
            <div class="form-value">${workOrderData.serialNumber}</div>
          </div>
          
          <div class="section-title">1. –í–∏–¥ —Ä–æ–±—ñ—Ç (–≤–∏–±—Ä–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ) –≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π —Ä–µ–º–æ–Ω—Ç, —Ä–µ–º–æ–Ω—Ç, —Ç–µ—Ö–Ω—ñ—á–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è, —ñ–Ω—à–µ.</div>
          <div class="form-row">
            <div class="form-value">${workOrderData.workType}</div>
          </div>
          
          <div class="section-title">2. –¢–µ—Ö–Ω—ñ—á–Ω–∏–π —Å—Ç–∞–Ω –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è:</div>
          <div class="form-row">
            <div class="form-label">–ù–∞–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è –º/–≥:</div>
            <div class="form-value">${workOrderData.operatingHours}</div>
          </div>
          <div class="form-row">
            <div class="form-label">–ó–≥—ñ–¥–Ω–æ —ñ–∑ –∑–∞—è–≤–∫–æ—é:</div>
            <div class="form-value">${workOrderData.technicalCondition}</div>
          </div>
          <div class="form-row">
            <div class="form-label">–ü—ñ—Å–ª—è —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –æ–≥–ª—è–¥—É (–ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç/–ø–æ—Å–ª—É–≥)</div>
            <div class="form-value"></div>
          </div>
          
          <div class="section-title">3. –ü–µ—Ä–µ–ª—ñ–∫ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç/–ø–æ—Å–ª—É–≥:</div>
          <div class="form-row">
            <div class="form-value">${workOrderData.performedWork}</div>
          </div>
          
          <div class="section-title">4. –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –≤–∏–ø—Ä–æ–±—É–≤–∞–Ω—å: –í—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –¥–∏–∑–µ–ª—å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∑ —Ä–æ–±–æ—á–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –±–µ–∑ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∞ –ø—ñ–¥ —á–∞—Å –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è.</div>
          <div class="form-row">
            <div class="form-value"></div>
          </div>
          
          <div class="section-title">5. –†–æ–∑—Ä–∞—Ö—É–Ω–∫–æ–≤–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ä–æ–±—ñ—Ç:</div>
          <div class="section-title">7.1. –ü–ï–†–ï–õ–Ü–ö –ú–ê–¢–ï–†–Ü–ê–õ–Ü–í –¢–ê –ó–ê–ü–ß–ê–°–¢–ò–ù, –í–ò–ö–û–†–ò–°–¢–ê–ù–ò–• –ü–Ü–î –ß–ê–° –†–û–ë–Ü–¢</div>
          <table class="materials-table">
            <thead>
              <tr>
                <th style="width: 8%;">‚Ññ –ø/–ø</th>
                <th style="width: 45%;">–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è</th>
                <th style="width: 12%;">–û–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É</th>
                <th style="width: 12%;">–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th>
                <th style="width: 12%;">–¶—ñ–Ω–∞ –∑ –ü–î–í, –≥—Ä–Ω</th>
                <th style="width: 11%;">–°—É–º–∞ –∑ –ü–î–í, –≥—Ä–Ω</th>
              </tr>
            </thead>
            <tbody>
              ${(() => {
                const materials = [];
                let rowNumber = 1;
                
                // –î–æ–¥–∞—î–º–æ –æ–ª–∏–≤—É
                if (task.oilType && task.oilUsed) {
                  materials.push({
                    number: rowNumber++,
                    name: `–û–ª–∏–≤–∞ ${task.oilType}`,
                    unit: '–ª',
                    quantity: task.oilUsed,
                    price: task.oilPrice || 0,
                    sum: (parseFloat(task.oilUsed) || 0) * (parseFloat(task.oilPrice) || 0)
                  });
                }
                
                // –î–æ–¥–∞—î–º–æ –º–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä
                if (task.filterName && task.filterCount) {
                  materials.push({
                    number: rowNumber++,
                    name: `–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä ${task.filterName}`,
                    unit: '—à—Ç',
                    quantity: task.filterCount,
                    price: task.filterPrice || 0,
                    sum: (parseFloat(task.filterCount) || 0) * (parseFloat(task.filterPrice) || 0)
                  });
                }
                
                // –î–æ–¥–∞—î–º–æ –ø–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä
                if (task.fuelFilterName && task.fuelFilterCount) {
                  materials.push({
                    number: rowNumber++,
                    name: `–ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä ${task.fuelFilterName}`,
                    unit: '—à—Ç',
                    quantity: task.fuelFilterCount,
                    price: task.fuelFilterPrice || 0,
                    sum: (parseFloat(task.fuelFilterCount) || 0) * (parseFloat(task.fuelFilterPrice) || 0)
                  });
                }
                
                // –î–æ–¥–∞—î–º–æ –ø–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä
                if (task.airFilterName && task.airFilterCount) {
                  materials.push({
                    number: rowNumber++,
                    name: `–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä ${task.airFilterName}`,
                    unit: '—à—Ç',
                    quantity: task.airFilterCount,
                    price: task.airFilterPrice || 0,
                    sum: (parseFloat(task.airFilterCount) || 0) * (parseFloat(task.airFilterPrice) || 0)
                  });
                }
                
                // –î–æ–¥–∞—î–º–æ –∞–Ω—Ç–∏—Ñ—Ä–∏–∑
                if (task.antifreezeType && task.antifreezeL) {
                  materials.push({
                    number: rowNumber++,
                    name: `–ê–Ω—Ç–∏—Ñ—Ä–∏–∑ ${task.antifreezeType}`,
                    unit: '–ª',
                    quantity: task.antifreezeL,
                    price: task.antifreezePrice || 0,
                    sum: (parseFloat(task.antifreezeL) || 0) * (parseFloat(task.antifreezePrice) || 0)
                  });
                }
                
                // –î–æ–¥–∞—î–º–æ —ñ–Ω—à—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏
                if (task.otherMaterials && task.otherSum) {
                  materials.push({
                    number: rowNumber++,
                    name: task.otherMaterials,
                    unit: '—à—Ç',
                    quantity: '',
                    price: '',
                    sum: task.otherSum
                  });
                }
                
                // –ì–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è –∑–∞–ø–æ–≤–Ω–µ–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤
                const filledRows = materials.map(material => `
                  <tr style="height: 30px;">
                    <td style="font-size: 10px;">${material.number}</td>
                    <td style="font-size: 10px;">${material.name}</td>
                    <td style="font-size: 10px;">${material.unit}</td>
                    <td style="font-size: 10px;">${material.quantity}</td>
                    <td style="font-size: 10px;">${material.price}</td>
                    <td style="font-size: 10px;">${material.sum}</td>
                  </tr>
                `).join('');
                
                // –î–æ–¥–∞—î–º–æ 5 –ø–æ—Ä–æ–∂–Ω—ñ—Ö —Ä—è–¥–∫—ñ–≤ –∑ –∑–±—ñ–ª—å—à–µ–Ω–æ—é –≤–∏—Å–æ—Ç–æ—é
                const emptyRows = Array(5).fill().map(() => `
                  <tr style="height: 30px;">
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                  </tr>
                `).join('');
                
                return filledRows + emptyRows;
              })()}
            </tbody>
          </table>
          
          <div class="form-row">
            <div class="form-label">–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ —Ç–∞ –∑–∞–ø—á–∞—Å—Ç–∏–Ω:</div>
            <div class="form-value"></div>
          </div>
          
          <div class="form-row">
            <div class="form-label">7.2 –í–∞—Ä—Ç—ñ—Å—Ç—å –¥–µ—Ñ–µ–∫—Ç–∞—Ü—ñ—ó:</div>
            <div class="form-value">–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥/–≥–æ–¥–∏–Ω ____ ; —Ç–∞—Ä–∏—Ñ ____ –≥—Ä–Ω; —Ä–∞–∑–æ–º ${workOrderData.defectCost} –≥—Ä–Ω.</div>
          </div>
          
          <div class="form-row">
            <div class="form-label">7.3 –í–∞—Ä—Ç—ñ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç—É:</div>
            <div class="form-value">–∫—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥/–≥–æ–¥–∏–Ω ____ ; —Ç–∞—Ä–∏—Ñ: ____ –≥—Ä–Ω; —Ä–∞–∑–æ–º ${workOrderData.repairCost} –≥—Ä–Ω.</div>
          </div>
          
          <div class="form-row">
            <div class="form-label">7.4 –í–∏—ó–∑–¥ –Ω–∞ –æ–±'—î–∫—Ç –ó–∞–º–æ–≤–Ω–∏–∫–∞:</div>
            <div class="form-value">—Ç–∞—Ä–∏—Ñ: –ø–æ –º—ñ—Å—Ç—É ____ –≥—Ä–Ω. –í–∏—ó–∑–¥ –∑–∞ –º—ñ—Å—Ç–æ ____ –∫–º ____ –≥—Ä–Ω/–∫–º; —Ä–∞–∑–æ–º ${workOrderData.travelCost} –≥—Ä–Ω.</div>
          </div>
          
          <div class="form-row">
            <div class="form-label">–ó–ê–ì–ê–õ–¨–ù–ê –í–ê–†–¢–Ü–°–¢–¨ –†–û–ë–Ü–¢ –∑ –ü–î–í (—É—Å—å–æ–≥–æ –ø–æ –ø.7.1; 7.2; 7.3; 7.4)</div>
            <div class="form-value">${workOrderData.totalCost} –≥—Ä–Ω.</div>
          </div>
        </div>
        
        <div class="form-row">
          <div class="form-label">–°—É–º–∞ –ø—Ä–æ–ø–∏—Å–æ–º:</div>
          <div class="form-value"></div>
        </div>
        
        <div class="form-row">
          <div class="form-label">–í—ñ–¥–º—ñ—Ç–∫–∞ –ø—Ä–æ –æ–ø–ª–∞—Ç—É (–≤–∏–±—Ä–∞—Ç–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–µ), –±–µ–∑–≥–æ—Ç—ñ–≤–∫–æ–≤–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫, –Ω–∞ –±–∞–Ω–∫—ñ–≤—Å—å–∫—É –∫–∞—Ä—Ç–∫—É, –≥–æ—Ç—ñ–≤–∫–æ–≤—ñ –∫–æ—à—Ç–∏, —ñ–Ω—à–µ (–∑–∞–∑–Ω–∞—á–∏—Ç–∏):</div>
          <div class="form-value">${(() => {
            const paymentMethod = task.paymentType || '';
            if (paymentMethod && paymentMethod.trim() !== '' && paymentMethod !== '–Ω–µ –≤–∏–±—Ä–∞–Ω–æ') {
              return paymentMethod;
            }
            return '';
          })()}</div>
        </div>
        
        <div class="form-row">
          <div class="form-label">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –≤–∏–∫–æ–Ω—É–≤–∞—á–∞ —Ä–æ–±—ñ—Ç:</div>
          <div class="form-value">${workOrderData.recommendations}</div>
        </div>
        
        <div class="form-row">
          <div class="form-label">–†–æ–±–æ—Ç—É –≤–∏–∫–æ–Ω–∞–≤: (–ü–Ü–ë), (–ø–æ—Å–∞–¥–∞)</div>
          <div class="form-value">${workOrderData.engineer1}${workOrderData.engineer2 ? ', ' + workOrderData.engineer2 : ''}</div>
        </div>
        
        <div class="form-row">
          <div class="form-label">–†–æ–±–æ—Ç—É –ø—Ä–∏–π–Ω—è–≤: (–ü–Ü–ë), (–ø–æ—Å–∞–¥–∞)</div>
          <div class="form-value"></div>
        </div>

        <div class="no-print">
          <button onclick="window.print()" style="
            background: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
          ">üñ®Ô∏è –î—Ä—É–∫—É–≤–∞—Ç–∏</button>
          <button onclick="window.close()" style="
            background: #f44336;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            margin-left: 10px;
          ">‚úï –ó–∞–∫—Ä–∏—Ç–∏</button>
        </div>
      </body>
      </html>
    `;
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —à–∞–±–ª–æ–Ω—É –î–∞—Ä–µ–∫—Å –ï–Ω–µ—Ä–≥–æ (2-—Å—Ç–æ—Ä—ñ–Ω–∫–æ–≤–∏–π)
  const generateDarexEnergyTemplate = (workOrderData, workOrderNumber, workOrderDate, engineers) => {
    return `
      <!DOCTYPE html>
      <html lang="uk">
      <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>–ù–∞—Ä—è–¥ –î–∞—Ä–µ–∫—Å –ï–Ω–µ—Ä–≥–æ</title>
        <style>
          @page {
            size: A4;
            margin: 1.5cm;
          }
          
          body {
            font-family: 'Times New Roman', serif;
            font-size: 11pt;
            line-height: 1.2;
            margin: 0;
            padding: 0;
            color: #000;
          }
          
          .page {
            width: 21cm;
            min-height: 29.7cm;
            margin: 0 auto;
            padding: 1.5cm;
            box-sizing: border-box;
            position: relative;
          }
          
          .page:last-child {
            page-break-after: avoid;
          }
          
          .header {
            margin-bottom: 15px;
            text-align: center;
          }
          
          .header-image {
            max-width: 100%;
            height: auto;
            margin-bottom: 10px;
            display: block;
            margin-left: auto;
            margin-right: auto;
          }
          
          .title {
            text-align: center;
            font-size: 14pt;
            font-weight: bold;
            margin: 15px 0;
            text-transform: uppercase;
          }
          
          .field {
            margin-bottom: 6px;
            display: flex;
            align-items: center;
            font-size: 11pt;
          }
          
          .field-label {
            font-weight: normal;
            min-width: 180px;
            margin-right: 8px;
          }
          
          .field-value {
            flex: 1;
            border-bottom: 1px solid #000;
            min-height: 18px;
            padding: 1px 3px;
          }
          
          .checkbox-group {
            display: flex;
            gap: 15px;
            margin: 8px 0;
            flex-wrap: wrap;
          }
          
          .checkbox-item {
            display: flex;
            align-items: center;
            gap: 3px;
            font-size: 11pt;
          }
          
          .checkbox {
            width: 12px;
            height: 12px;
            border: 1px solid #000;
            display: inline-block;
          }
          
          .materials-table {
            width: 100%;
            border-collapse: collapse;
            margin: 10px 0;
            font-size: 9pt;
          }
          
          .materials-table th,
          .materials-table td {
            border: 1px solid #000;
            padding: 3px;
            text-align: center;
            vertical-align: middle;
          }
          
          .materials-table th {
            background-color: #f8f8f8;
            font-weight: bold;
          }
          
          .cost-section {
            margin: 10px 0;
          }
          
          .cost-item {
            display: flex;
            justify-content: space-between;
            margin: 3px 0;
            padding: 2px 0;
            font-size: 11pt;
          }
          
          .signature-section {
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
          }
          
          .signature-block {
            width: 45%;
            text-align: center;
            font-size: 10pt;
          }
          
          .signature-line {
            border-bottom: 1px solid #000;
            margin: 15px 0 3px 0;
            min-height: 18px;
          }
          
          .text-area {
            border: 1px solid #000;
            min-height: 50px;
            padding: 3px;
            margin: 3px 0;
            font-size: 11pt;
          }
          
          .text-line {
            border-bottom: 1px solid #000;
            min-height: 18px;
            margin: 3px 0;
            padding: 1px 3px;
          }
          
          .checkbox-section {
            margin: 8px 0;
          }
          
          .checkbox-row {
            display: flex;
            align-items: center;
            margin: 3px 0;
            font-size: 10pt;
          }
          
          .checkbox-label {
            margin-left: 8px;
          }
          
          .total-cost {
            font-weight: bold;
            font-size: 12pt;
            text-align: center;
            margin: 15px 0;
            padding: 8px;
            border: 1px solid #000;
          }
          
          .coefficient-note {
            font-style: italic;
            font-size: 9pt;
            margin: 8px 0;
            line-height: 1.1;
          }
          
          .section-title {
            font-weight: bold;
            font-size: 11pt;
            margin: 10px 0 5px 0;
          }
          
          .two-column {
            display: flex;
            gap: 20px;
          }
          
          .column {
            flex: 1;
          }
          
          .no-print {
            display: block;
            position: fixed;
            top: 10px;
            right: 10px;
            z-index: 1000;
            background: rgba(255, 255, 255, 0.9);
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
          }
          
          .print-button, .save-button {
            background: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            margin: 0 5px;
            transition: background 0.3s;
          }
          
          .print-button:hover, .save-button:hover {
            background: #45a049;
          }
          
          .save-button {
            background: #2196F3;
          }
          
          .save-button:hover {
            background: #1976D2;
          }
          
          @media print {
            .no-print {
              display: none !important;
            }
            body {
              margin: 0;
              padding: 0;
            }
            .page {
              margin: 0;
              box-shadow: none;
            }
          }
        </style>
      </head>
      <body>
        <!-- –ü–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞ -->
        <div class="page">
          <div class="header">
            <img src="/header.png" alt="–®–∞–ø–∫–∞ –î–∞—Ä–µ–∫—Å –ï–Ω–µ—Ä–≥–æ" class="header-image" style="width: 100%; max-width: 680px; height: auto;" />
          </div>
          
          <div class="title">–ù–ê–†–Ø–î –ù–ê –í–ò–ö–û–ù–ê–ù–ù–Ø –†–û–ë–Ü–¢</div>
          
          <div class="field">
            <span class="field-label">‚Ññ –Ω–∞—Ä—è–¥—É:</span>
            <span class="field-value">${workOrderNumber}</span>
          </div>
          
          <div class="field">
            <span class="field-label">–≤—ñ–¥ ¬´___¬ª ________ 202____ —Ä.):</span>
            <span class="field-value">${workOrderDate}</span>
          </div>
          
          <div class="field">
            <span class="field-label">1. –†–æ–±–æ—Ç–∏ –≤–∏–∫–æ–Ω—É—î:</span>
            <span class="field-value">${engineers}</span>
          </div>
          
          <div class="field">
            <span class="field-label">2. –ó–∞–º–æ–≤–Ω–∏–∫:</span>
            <span class="field-value">${workOrderData.client}</span>
          </div>
          
          <div class="field">
            <span class="field-label">3. –ê–¥—Ä–µ—Å–∞ –æ–±'—î–∫—Ç–∞:</span>
            <span class="field-value">${workOrderData.address}</span>
          </div>
          
          <div class="field">
            <span class="field-label">4. –ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è:</span>
            <span class="field-value">${workOrderData.equipment}</span>
          </div>
          
          <div class="field">
            <span class="field-label">–ó–∞–≤. ‚Ññ:</span>
            <span class="field-value">${workOrderData.serialNumber}</span>
          </div>
          
          <div class="field">
            <span class="field-label">5. –¢–∏–ø –¥–≤–∏–≥—É–Ω–∞:</span>
            <span class="field-value">${workOrderData.engineModel}</span>
          </div>
          
          <div class="field">
            <span class="field-label">–ó–∞–≤. ‚Ññ:</span>
            <span class="field-value">${workOrderData.engineSerial}</span>
          </div>
          
          <div class="field">
            <span class="field-label">6. –¢–∏–ø –ø–∞–Ω–µ–ª—ñ –∫–µ—Ä—É–≤–∞–Ω–Ω—è:</span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label">7. –í–∏–¥ —Ä–æ–±—ñ—Ç:</span>
            <div class="checkbox-group">
              <div class="checkbox-item">
                <div class="checkbox"></div>
                <span>–≥–∞—Ä–∞–Ω—Ç—ñ–π–Ω–∏–π —Ä–µ–º–æ–Ω—Ç</span>
              </div>
              <div class="checkbox-item">
                <div class="checkbox"></div>
                <span>—Ä–µ–º–æ–Ω—Ç</span>
              </div>
              <div class="checkbox-item">
                <div class="checkbox"></div>
                <span>—Ç–µ—Ö–Ω—ñ—á–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è</span>
              </div>
              <div class="checkbox-item">
                <div class="checkbox"></div>
                <span>—ñ–Ω—à–µ</span>
              </div>
              <div class="checkbox-item">
                <div class="checkbox"></div>
                <span>–ü–ù–†</span>
              </div>
            </div>
          </div>
          
          <div class="field">
            <span class="field-label">8. –¢–µ—Ö–Ω—ñ—á–Ω–∏–π —Å—Ç–∞–Ω –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è–º —Ä–æ–±—ñ—Ç:</span>
            <div class="checkbox-group">
              <div class="checkbox-item">
                <div class="checkbox"></div>
                <span>–ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–µ</span>
              </div>
              <div class="checkbox-item">
                <div class="checkbox"></div>
                <span>–Ω–µ–ø—Ä–∞—Ü–µ–∑–¥–∞—Ç–Ω–µ</span>
              </div>
            </div>
          </div>
          
          <div class="field">
            <span class="field-label">9. –ü–µ—Ä–µ–ª—ñ–∫ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç/–ø–æ—Å–ª—É–≥:</span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label"></span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label"></span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label">10. –ü—ñ—Å–ª—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç —Ç–∞ –≤–∏–ø—Ä–æ–±—É–≤–∞–Ω—å, –î–ì–£ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–±–æ—á–æ–º—É / –Ω–µ—Ä–æ–±–æ—á–æ–º—É —Å—Ç–∞–Ω—ñ, –≤ —Ä–µ–∂–∏–º—ñ —Ä—É—á–Ω–µ –∞–≤—Ç–æ, –Ω–∞–ø—Ä–∞—Ü—é–≤–∞–Ω–Ω—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—å ____ –º–æ—Ç–æ–≥–æ–¥–∏–Ω.</span>
          </div>
          
          <div class="field">
            <span class="field-label">11. –ù–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: L1 ____, L2 ____, L3 ____, U1 ____, U2 ____, U3 ____, V.</span>
          </div>
          
          <div class="section-title">6.1. –ü–ï–†–ï–õ–Ü–ö –ú–ê–¢–ï–†–Ü–ê–õ–Ü–í –¢–ê –ó–ê–ü–ß–ê–°–¢–ò–ù, –í–ò–ö–û–†–ò–°–¢–ê–ù–ò–• –ü–Ü–î –ß–ê–° –†–û–ë–Ü–¢:</div>
          
          <table class="materials-table">
            <thead>
              <tr>
                <th>‚Ññ</th>
                <th>–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è</th>
                <th>–û–¥–∏–Ω. –≤–∏–º—ñ—Ä—É</th>
                <th>–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th>
                <th>–¶—ñ–Ω–∞ –∑ –ü–î–í, –≥—Ä–Ω</th>
                <th>–í–∞—Ä—Ç—ñ—Å—Ç—å –∑ –ü–î–í, –≥—Ä–Ω</th>
              </tr>
            </thead>
            <tbody>
              ${Array.from({length: 10}, (_, i) => `
                <tr>
                  <td>${i + 1}</td>
                  <td></td>
                  <td></td>
                  <td></td>
                  <td></td>
                  <td></td>
                </tr>
              `).join('')}
            </tbody>
          </table>
          
          <div class="field">
            <span class="field-label">–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ —Ç–∞ –∑–∞–ø—á–∞—Å—Ç–∏–Ω:</span>
            <span class="field-value">____ –≥—Ä–Ω.</span>
          </div>
          
          <div class="section-title">6.2. –í–∞—Ä—Ç—ñ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç—É/—Ä–æ–±—ñ—Ç:</div>
          
          <div class="cost-item">
            <span>–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ</span>
            <span>_____</span>
          </div>
          
          <div class="cost-item">
            <span>–î—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</span>
            <span>_____ –≥—Ä–Ω.</span>
          </div>
          
          <div class="cost-item">
            <span>–í–∞—Ä—Ç—ñ—Å—Ç—å —Ç–µ—Ö–Ω—ñ—á–Ω–æ–≥–æ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è</span>
            <span>_____ –≥—Ä–Ω.</span>
          </div>
          
          <div class="cost-item">
            <span>–í–∞—Ä—Ç—ñ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç—É (1–ª—é–¥–∏–Ω–æ-–≥–æ–¥–∏–Ω–∞*1200 –≥—Ä–Ω.)</span>
            <span>_____ –≥—Ä–Ω.</span>
          </div>
          
          <div class="cost-item">
            <span>–í–∞—Ä—Ç—ñ—Å—Ç—å –ø—É—Å–∫–æ–Ω–∞–ª–∞–≥–æ–¥–∂—É–≤–∞–ª—å–Ω–∏—Ö —Ä–æ–±—ñ—Ç</span>
            <span>_____ –≥—Ä–Ω.</span>
          </div>
          
          <div class="cost-item">
            <span>–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç–∞ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ</span>
            <span>_____ –≥—Ä–Ω.</span>
          </div>
          
          <div class="section-title">6.3. –í–∏—ó–∑–¥ –Ω–∞ –æ–±'—î–∫—Ç –ó–∞–º–æ–≤–Ω–∏–∫–∞: —Ç–∞—Ä–∏—Ñ: –ø–æ –º—ñ—Å—Ç—É 600.00 –≥—Ä–Ω.</div>
          <div class="field">
            <span class="field-label">–í–∏—ó–∑–¥ –∑–∞ –º—ñ—Å—Ç–æ ____ –∫–º * 15,00 –≥—Ä–Ω/–∫–º; —Ä–∞–∑–æ–º ____ –≥—Ä–Ω.</span>
          </div>
          
          <div class="section-title">6.4. –î–æ–±–æ–≤—ñ —É –≤—ñ–¥—Ä—è–¥–∂–µ–Ω–Ω—ñ: 600.00 –≥—Ä–Ω. ____ –¥—ñ–± ____ –ª—é–¥. —Ä–∞–∑–æ–º ____ –≥—Ä–Ω.</div>
          
          <div class="section-title">6.5. –ü—Ä–æ–∂–∏–≤–∞–Ω–Ω—è: ____ –≥—Ä–Ω. —Ä–∞–∑–æ–º ____ –≥—Ä–Ω.</div>
          
          <div class="total-cost">
            –ó–ê–ì–ê–õ–¨–ù–ê –í–ê–†–¢–Ü–°–¢–¨ –†–û–ë–Ü–¢ –∑ –ü–î–í (—É—Å—å–æ–≥–æ –ø–æ –ø–ø.6.1-6.5) ____ –≥—Ä–Ω.
          </div>
          
          <div class="field">
            <span class="field-label">–†–æ–±–æ—Ç–∏ –≤–∏–∫–æ–Ω–∞–≤:</span>
            <span class="field-value">${engineers}</span>
          </div>
          
          <div class="field">
            <span class="field-label">–ó–∞–º–æ–≤–Ω–∏–∫:</span>
            <span class="field-value">${workOrderData.client}</span>
          </div>
          
          <div class="field">
            <span class="field-label">–ê–¥—Ä–µ—Å–∞ –æ–±'—î–∫—Ç–∞:</span>
            <span class="field-value">${workOrderData.address}</span>
          </div>
          
          <div class="field">
            <span class="field-label">–í—ñ–¥–º—ñ—Ç–∫–∞ –ø—Ä–æ –æ–ø–ª–∞—Ç—É:</span>
            <span class="field-value"></span>
          </div>
          
          <div class="title" style="font-size: 12pt; margin: 20px 0;">
            –ù–ê–°–¢–£–ü–ù–ï –¢–ï–•–ù–Ü–ß–ù–ï –û–ë–°–õ–£–ì–û–í–£–í–ê–ù–ù–Ø –ü–†–û–í–ï–°–¢–ò –ü–†–ò –ù–ê–ü–†–ê–¶–Æ–í–ê–ù–ù–Ü
          </div>
          
          <div class="field">
            <span class="field-label">–ú–û–¢–û–ì–û–î–ò–ù, –ê–ë–û ¬´___¬ª ___ 20___ –†–û–ö–£.</span>
          </div>
          
          <div class="two-column">
            <div class="column">
              <div class="field">
                <span class="field-label">–î–∞—Ç–∞ —Ç–∞ —á–∞—Å –ø–æ—á–∞—Ç–∫—É —Ä–æ–±—ñ—Ç:</span>
                <span class="field-value"></span>
              </div>
            </div>
            <div class="column">
              <div class="field">
                <span class="field-label">–î–∞—Ç–∞ —Ç–∞ —á–∞—Å –∑–∞–∫—ñ–Ω—á–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç:</span>
                <span class="field-value"></span>
              </div>
            </div>
          </div>
          
          <div class="two-column">
            <div class="column">
              <div class="field">
                <span class="field-label">–ê–≤—Ç–æ ‚Ññ:</span>
                <span class="field-value"></span>
              </div>
            </div>
            <div class="column">
              <div class="field">
                <span class="field-label">–ü–µ—Ä–µ—Ä–æ–±–∫–∞, –≥–æ–¥.:</span>
                <span class="field-value"></span>
              </div>
            </div>
          </div>
          
          <div class="field">
            <span class="field-label">–§–æ—Ç–æ –∑—Ä–æ–±–ª–µ–Ω—ñ, –Ω–µ –∑—Ä–æ–±–ª–µ–Ω—ñ:</span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –≤–∏–∫–æ–Ω—É–≤–∞—á–∞ —Ä–æ–±—ñ—Ç:</span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label"></span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label"></span>
            <span class="field-value"></span>
          </div>
          
          <div class="field">
            <span class="field-label">–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ —Ä–æ–±—ñ—Ç:</span>
          </div>
          
          <div class="checkbox-section">
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–†–æ–±–æ—Ç–∞ –∑–∞ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–∏—Ö —É–º–æ–≤, –¥–æ–±—Ä–æ–∑–∏—á–ª–∏–≤—ñ—Å—Ç—å –∑–∞–º–æ–≤–Ω–∏–∫–∞ - 1.0</span>
            </div>
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–†–æ–±–æ—Ç–∞ –Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–æ–º—É –ø–æ–≤—ñ—Ç—Ä—ñ, –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ñ –Ω–∏–∂—á–µ 0 –≥—Ä–∞–¥, (–≤–∏—â–µ 27) —Å—É—Ö–æ - 1.1</span>
            </div>
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–†–æ–±–æ—Ç–∞ –≤ –¥–æ—â, —Å–Ω—ñ–≥, —Å–∏–ª—å–Ω–∏–π –≤—ñ—Ç–µ—Ä - 1.2</span>
            </div>
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–†–æ–±–æ—Ç–∞ –≤ –ø—ñ–¥–≤–∞–ª—å–Ω–∏—Ö –ø—Ä–∏–º—ñ—â–µ–Ω–Ω—è—Ö, –Ω–∞ –¥–∞—Ö–∞—Ö - 1.3</span>
            </div>
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–†–æ–±–æ—Ç–∞ –≤ –∞–≥—Ä–µ—Å–∏–≤–Ω–æ–º—É —Å–µ—Ä–µ–¥–æ–≤–∏—â—ñ - 1.4</span>
            </div>
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–†–æ–±–æ—Ç–∞ –≤ –Ω—ñ—á–Ω–∏–π —á–∞—Å (–∑ 22:00 –¥–æ 06:00) - 1.5</span>
            </div>
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–†–æ–±–æ—Ç–∞ —É –≤–∏—Ö—ñ–¥–Ω—ñ —Ç–∞ —Å–≤—è—Ç–∫–æ–≤—ñ –¥–Ω—ñ - 1.6</span>
            </div>
            <div class="checkbox-row">
              <div class="checkbox"></div>
              <span class="checkbox-label">–¢–µ—Ä–º—ñ–Ω–æ–≤–∏–π –≤–∏–∫–ª–∏–∫ - 2.0</span>
            </div>
          </div>
          
          <div class="coefficient-note">
            *–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ —Ä–æ–±—ñ—Ç —Ü–µ –≤–µ–ª–∏—á–∏–Ω–∞, —â–æ –∑–±—ñ–ª—å—à—É—î –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ä–æ–±—ñ—Ç —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ, —â–æ –Ω–µ –∑–∞–ª–µ–∂–∞—Ç—å –≤—ñ–¥ –≤–∏–∫–æ–Ω–∞–≤—Ü—è —É–º–æ–≤ —ñ –Ω–µ –¥–æ–∑–≤–æ–ª—è—é—Ç—å —è–∫—ñ—Å–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ —Ä–æ–±–æ—Ç–∏ –±–µ–∑ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö –Ω–∞–≤–∏—á–æ–∫, –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è —á–µ—Ä–µ–∑ –ø–æ–≥–æ–¥–Ω—ñ —É–º–æ–≤–∏, —ñ —Ç.–¥.
          </div>
          
          <div class="coefficient-note">
            *–∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç –º–æ–∂–µ –±—É—Ç–∏ —Å—É–º–æ–≤–∞–Ω–∏–π.
          </div>
          
          <div class="signature-section">
            <div class="signature-block">
              <div><strong>–†–û–ë–û–¢–£ –ü–†–ò–ô–ù–Ø–í</strong></div>
              <div>–ø—Ä–µ—Ç–µ–Ω–∑—ñ–π –Ω–µ –º–∞—é</div>
              <div class="signature-line">(–ü–Ü–ë –ó–∞–º–æ–≤–Ω–∏–∫–∞ –∞–±–æ –π–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∞)</div>
              <div class="signature-line">(–¥–∞—Ç–∞, –ø—ñ–¥–ø–∏—Å)</div>
            </div>
            
            <div class="signature-block">
              <div><strong>–†–û–ë–û–¢–£ –ó–î–ê–í</strong></div>
              <div class="signature-line">(–ü–Ü–ë –í–∏–∫–æ–Ω–∞–≤—Ü—è –∞–±–æ –π–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–Ω–∏–∫–∞)</div>
              <div class="signature-line">(–¥–∞—Ç–∞, –ø—ñ–¥–ø–∏—Å)</div>
            </div>
          </div>
        </div>
        
        <div class="no-print">
          <button class="print-button" onclick="printDocument()">üñ®Ô∏è –î—Ä—É–∫—É–≤–∞—Ç–∏</button>
          <button class="save-button" onclick="saveDocument()">üíæ –ó–±–µ—Ä–µ–≥—Ç–∏</button>
          <button onclick="window.close()" style="
            background: #f44336;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            margin-left: 5px;
            transition: background 0.3s;
          " onmouseover="this.style.background='#d32f2f'" onmouseout="this.style.background='#f44336'">‚úï –ó–∞–∫—Ä–∏—Ç–∏</button>
        </div>
        
        <script>
          function printDocument() {
            window.print();
          }
          
          function saveDocument() {
            // –°—Ç–≤–æ—Ä—é—î–º–æ HTML –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
            const htmlContent = document.documentElement.outerHTML;
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ Blob –∑ HTML –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
            const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' });
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ URL –¥–ª—è blob
            const url = URL.createObjectURL(blob);
            
            // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            const link = document.createElement('a');
            link.href = url;
            link.download = '–ù–∞—Ä—è–¥_–î–∞—Ä–µ–∫—Å_–ï–Ω–µ—Ä–≥–æ_' + new Date().toISOString().slice(0,10) + '.html';
            
            // –î–æ–¥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –¥–æ DOM, –∫–ª—ñ–∫–∞—î–º–æ —ñ –≤–∏–¥–∞–ª—è—î–º–æ
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            // –û—á–∏—â—É—î–º–æ URL
            URL.revokeObjectURL(url);
          }
        </script>
      </body>
      </html>
    `;
  };

  return (
    <>
      {/* –í–∫–ª–∞–¥–∫–∏, —Ñ—ñ–ª—å—Ç—Ä–∏, –∫–Ω–æ–ø–∫–∏ ‚Äî –æ–∫—Ä–µ–º–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
      <div style={{marginBottom: 24}}>
        <div style={{display:'flex',gap:8,alignItems:'center',marginBottom:16}}>
          <button 
            onClick={()=>setShowSettings(true)}
            style={{
              background:'#1976d2',
              color:'#fff',
              border:'none',
              padding:'8px 16px',
              borderRadius:'4px',
              cursor:'pointer',
              fontSize:'14px'
            }}
          >
            ‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫–æ–ª–æ–Ω–∫–∏
          </button>
        </div>
        {showSettings && (
          <ColumnSettings
            allColumns={allColumns}
            selected={selected}
            onChange={setSelected}
            onClose={()=>setShowSettings(false)}
            onSave={saveSettings}
          />
        )}
        {/* –°–ü–Ü–õ–¨–ù–ò–ô –ö–û–ù–¢–ï–ô–ù–ï–† –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —ñ —Ç–∞–±–ª–∏—Ü—ñ */}
        <div style={{width:'97vw',maxWidth:'none',margin:'0 auto', background:'#fff', borderRadius:'8px', padding:'16px', position:'relative', zIndex:10}}>
          {/* –û–∫—Ä–µ–º–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ç–∞–±–ª–∏—Ü—ñ –∑ sticky-–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏ */}
          <style>{`
            .table-scroll {
              max-height: 70vh;
              min-height: 400px;
              overflow: scroll;
              width: 100%;
              background: #fff !important;
              border-radius: 8px;
              position: relative;
              z-index: 5;
            }
            .sticky-table {
              min-width: 2000px;
              width: 100%;
              background: transparent;
              color: #333;
              border-radius: 8px;
              border-spacing: 0;
              table-layout: auto;
            }
            .sticky-table thead th {
              position: sticky !important;
              top: 0 !important;
              z-index: 2;
              background: #1976d2;
              white-space: nowrap;
              padding: 8px 4px;
              vertical-align: top;
              min-width: 120px;
              transition: background-color 0.2s ease;
            }
            .sticky-table thead th:hover {
              background: #1565c0 !important;
            }
            .sticky-table thead th input {
              background: #fff;
              color: #333;
              border: 1px solid #ccc;
              border-radius: 2px;
              font-size: 10px;
              padding: 2px;
            }
            .sticky-table thead th input:focus {
              outline: none;
              border-color: #00bfff;
              box-shadow: 0 0 2px #00bfff;
            }
            .sticky-table th, .sticky-table td {
              white-space: normal;
              border: 1px solid #000 !important;
              border-collapse: collapse;
            }
            .sticky-table {
              border-collapse: collapse !important;
            }
            .sticky-table tbody tr {
              background: #fff;
              color: #333;
            }
            .sticky-table tbody tr:nth-child(even) {
              background: #f8f9fa;
            }
            .sticky-table tbody tr:hover {
              background: #e3f2fd;
            }
            /* –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è –∑–∞–≤–¥–∞–Ω—å –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏ */
            .sticky-table tbody tr.rejected {
              background: #ff9999 !important;
              color: #111 !important;
            }
            .sticky-table tbody tr.rejected:hover {
              background: #ff7777 !important;
            }
            .sticky-table tbody tr.accountant-approved {
              background: #ffb6e6 !important;
              color: #111 !important;
            }
            .sticky-table tbody tr.warehouse-approved {
              background: #ffe066 !important;
              color: #111 !important;
            }
            .sticky-table tbody tr.regional-approved {
              background: #66d9ff !important;
              color: #111 !important;
            }
            .sticky-table tbody tr.accountant-warehouse {
              background: linear-gradient(90deg, #ffb6e6 50%, #ffe066 50%) !important;
              color: #111 !important;
            }
            .sticky-table tbody tr.accountant-regional {
              background: linear-gradient(90deg, #ffb6e6 50%, #66d9ff 50%) !important;
              color: #111 !important;
            }
            .sticky-table tbody tr.warehouse-regional {
              background: linear-gradient(90deg, #ffe066 50%, #66d9ff 50%) !important;
              color: #111 !important;
            }
            .sticky-table tbody tr.all-approved {
              background: linear-gradient(90deg, #ffb6e6 33%, #ffe066 33%, #66d9ff 66%) !important;
              color: #111 !important;
            }
            .table-scroll::-webkit-scrollbar {
              height: 12px;
              background: #f0f0f0;
            }
            .table-scroll::-webkit-scrollbar-thumb {
              background: #00bfff;
              border-radius: 6px;
            }
            .table-scroll::-webkit-scrollbar-track {
              background: #f0f0f0;
            }
            .table-scroll {
              scrollbar-color: #00bfff #f0f0f0;
              scrollbar-width: thin;
            }
            
            .resize-handle {
              position: absolute;
              top: 0;
              right: 0;
              width: 4px;
              height: 100%;
              background: transparent;
              cursor: col-resize;
              z-index: 10;
            }
            
            .resize-handle:hover {
              background: #00bfff;
            }
            
            .th-resizable {
              position: relative;
            }
            
            
            .td-auto-height {
              height: auto !important;
              min-height: 40px !important;
              max-height: 120px !important; /* –ú–∞–∫—Å–∏–º—É–º –≤ 3 —Ä–∞–∑–∏ –±—ñ–ª—å—à–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ—ó –≤–∏—Å–æ—Ç–∏ (40px) */
              overflow: hidden !important;
              word-wrap: break-word !important;
              white-space: normal !important;
              line-height: 1.2 !important;
              padding: 8px 4px !important;
              vertical-align: top !important;
            }
            
            .th-auto-height {
              height: auto !important;
              min-height: 40px !important;
              max-height: 120px !important;
              overflow: hidden !important;
              word-wrap: break-word !important;
              white-space: normal !important;
              line-height: 1.2 !important;
              vertical-align: top !important;
            }
            
            .action-buttons {
              display: flex !important;
              flex-wrap: nowrap !important;
              gap: 4px !important;
              align-items: center !important;
              justify-content: flex-start !important;
            }
            
            .action-buttons button {
              font-size: 10px !important;
              padding: 4px 6px !important;
              border-radius: 3px !important;
              border: none !important;
              cursor: pointer !important;
              white-space: nowrap !important;
              min-width: auto !important;
              height: 24px !important;
              line-height: 1 !important;
              margin-right: 0 !important;
            }
          `}</style>
          <div className="table-scroll">
            <table className="sticky-table">
              <thead>
                <tr>
                  <th>–î—ñ—è</th>
                  {visibleColumns.map((col, idx) => {
                    // –ó–Ω–∞—Ö–æ–¥–∏–º–æ —ñ–Ω–¥–µ–∫—Å —Ü—ñ—î—ó –∫–æ–ª–æ–Ω–∫–∏ –≤ selected –º–∞—Å–∏–≤—ñ
                    const selectedIdx = selected.findIndex(key => key === col.key);
                    return (
                    <th
                      key={col.key}
                      className="th-resizable th-auto-height"
                      draggable
                      onDragStart={e => handleDragStart(e, selectedIdx)}
                      onDrop={e => handleDrop(e, selectedIdx)}
                      onDragOver={handleDragOver}
                      onDoubleClick={() => handleSort(col.key)}
                      style={{
                        width: columnWidths[col.key] || 120,
                        minWidth: columnWidths[col.key] || 120,
                        maxWidth: columnWidths[col.key] || 120,
                        cursor: 'pointer',
                        background: sortConfig.field === col.key ? '#1565c0' : '#1976d2'
                      }}
                    >
                      <div style={{marginBottom:4, display:'flex', alignItems:'center', justifyContent:'space-between'}}>
                        <span title="–ü–æ–¥–≤—ñ–π–Ω–∏–π –∫–ª—ñ–∫ –¥–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è">{col.label}</span>
                        {sortConfig.field === col.key && (
                          <span style={{fontSize:'12px', marginLeft:'4px'}} title={`–°–æ—Ä—Ç–æ–≤–∞–Ω–æ ${sortConfig.direction === 'asc' ? '–≤—ñ–¥ –ê –¥–æ –Ø' : '–≤—ñ–¥ –Ø –¥–æ –ê'}`}>
                            {sortConfig.direction === 'asc' ? '‚Üë' : '‚Üì'}
                          </span>
                        )}
                      </div>
                      {col.filter && (
                          col.key === 'date' || col.key === 'requestDate' || col.key === 'paymentDate' ? (
                            <div style={{display:'flex',flexDirection:'column',minWidth:120, background:'#fff'}}>
                              <input type="date" name={col.key+"From"} value={filters[col.key+"From"] || ''} onChange={onFilterChange} style={{marginBottom:2, background:'#fff'}} />
                              <input type="date" name={col.key+"To"} value={filters[col.key+"To"] || ''} onChange={onFilterChange} style={{background:'#fff'}} />
                            </div>
                          ) : getFilterType(col.key) ? (
                            <select
                              name={col.key}
                              value={filters[col.key] || ''}
                              onChange={(e) => {
                                console.log('[DEBUG] TaskTable filter select changed:', col.key, e.target.value);
                                console.log('[DEBUG] Current filters state:', filters);
                                console.log('[DEBUG] TaskTable calling onFilterChange with:', e.target.name, e.target.value);
                                console.log('[DEBUG] TaskTable onFilterChange function:', onFilterChange);
                                console.log('[DEBUG] TaskTable onFilterChange type:', typeof onFilterChange);
                                if (typeof onFilterChange === 'function') {
                                  console.log('[DEBUG] TaskTable calling onFilterChange function');
                                  onFilterChange(e);
                                } else {
                                  console.error('[ERROR] TaskTable onFilterChange is not a function!');
                                }
                              }}
                              disabled={isFieldDisabled(col.key)}
                              style={{
                                width:'100%', 
                                background:'#fff',
                                border:'1px solid #ccc',
                                borderRadius:'2px',
                                padding:'2px',
                                fontSize:'10px'
                              }}
                            >
                              {getFilterType(col.key).map(option => (
                                <option key={option} value={option}>
                                  {option || '–í—Å—ñ'}
                                </option>
                              ))}
                            </select>
                          ) : (
                            <input
                              name={col.key}
                              placeholder={col.label}
                              value={filters[col.key] || ''}
                              onChange={(e) => {
                                console.log('[DEBUG] TaskTable filter input changed:', col.key, e.target.value);
                                console.log('[DEBUG] Current filters state:', filters);
                                console.log('[DEBUG] TaskTable calling onFilterChange with:', e.target.name, e.target.value);
                                console.log('[DEBUG] TaskTable onFilterChange function:', onFilterChange);
                                console.log('[DEBUG] TaskTable onFilterChange type:', typeof onFilterChange);
                                if (typeof onFilterChange === 'function') {
                                  console.log('[DEBUG] TaskTable calling onFilterChange function');
                                  onFilterChange(e);
                                } else {
                                  console.error('[ERROR] TaskTable onFilterChange is not a function!');
                                }
                              }}
                              style={{width:'100%', background:'#fff'}}
                            />
                          )
                      )}
                      <div
                        className="resize-handle"
                        onMouseDown={(e) => {
                          e.preventDefault();
                          e.stopPropagation();
                          const startX = e.clientX;
                          const startWidth = columnWidths[col.key] || 120;
                          
                          const handleMouseMove = (e) => {
                            const newWidth = startWidth + (e.clientX - startX);
                            handleColumnResize(col.key, newWidth);
                          };
                          
                          const handleMouseUp = () => {
                            document.removeEventListener('mousemove', handleMouseMove);
                            document.removeEventListener('mouseup', handleMouseUp);
                          };
                          
                          document.addEventListener('mousemove', handleMouseMove);
                          document.addEventListener('mouseup', handleMouseUp);
                        }}
                      />
                      </th>
                    );
                  })}
                  <th>–°—Ç–∞—Ç—É—Å</th>
                  {role === 'admin' && <th>–î–∞—Ç–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è</th>}
                  {commentField && <th>–ö–æ–º–µ–Ω—Ç–∞—Ä</th>}
                </tr>
              </thead>
              <tbody>
                {sortData(tasks, sortConfig.field, sortConfig.direction).map(t => (
                  <tr key={t.id} className={getRowClass(t)} style={getRowColor(t) ? {background:getRowColor(t)} : {}}>
                    <td className="action-buttons" style={getRowColor(t) ? {color:'#111'} : {}}>
                      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞–Ω—É —Ä–∞—Ö—É–Ω–∫—É */}
                      <div style={{
                        display: 'flex',
                        flexDirection: 'column',
                        alignItems: 'center',
                        marginBottom: '8px'
                      }}>
                        <div style={{
                          fontSize: '10px',
                          fontWeight: 'bold',
                          color: '#666',
                          marginBottom: '2px'
                        }}>
                          –°—Ç–∞—Ç—É—Å —Ä–∞—Ö—É–Ω–∫—É
                        </div>
                        <div style={{
                          display: 'flex',
                          alignItems: 'center',
                          padding: '4px 8px',
                          borderRadius: '4px',
                          backgroundColor: getInvoiceStatus(t).color,
                          color: '#fff',
                          fontSize: '12px',
                          fontWeight: 'bold',
                          minWidth: '100px',
                          justifyContent: 'center'
                        }}>
                          üìÑ {getInvoiceStatus(t).label}
                        </div>
                      </div>
                      {/* –ü–µ—Ä—à–∏–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ */}
                      <div style={{ display: 'flex', gap: '4px', marginBottom: '4px', flexWrap: 'wrap' }}>
                        <button onClick={()=>{
                        if (onHistoryClick && role === 'materials') {
                          // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ –∞–Ω–∞–ª—ñ–∑—É –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ - –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∑–≤—ñ—Ç –ø–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—é
                          onHistoryClick(t.equipment);
                        } else if (onHistoryClick) {
                          // –î–ª—è –≤—Å—ñ—Ö —ñ–Ω—à–∏—Ö –≤–∫–ª–∞–¥–æ–∫ - –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –∑–≤—ñ—Ç –ø–æ –∑–∞–º–æ–≤–Ω–∏–∫—É
                          onHistoryClick(t.client);
                        } else {
                          // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∞ - –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –º–æ–¥–∞–ª–∫—É –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é –ø–æ –∑–∞–º–æ–≤–Ω–∏–∫—É
                          setInfoTask(t);
                          setShowInfo(true);
                        }
                      }} style={{background:'#00bfff',color:'#fff'}}>–Ü—Å—Ç–æ—Ä—ñ—è –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç</button>
                      </div>
                      {/* –î—Ä—É–≥–∏–π —Ä—è–¥ –∫–Ω–æ–ø–æ–∫ */}
                      <div style={{ display: 'flex', gap: '4px', flexWrap: 'wrap' }}>
                      {/* –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫" */}
                      {showInvoiceActions ? (
                        <>
                          {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Ç–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ */}
                          <div style={{ 
                            display: 'flex', 
                            flexDirection: 'column', 
                            gap: '4px', 
                            marginBottom: '8px',
                            padding: '8px',
                            backgroundColor: '#f8f9fa',
                            borderRadius: '4px',
                            border: '1px solid #dee2e6'
                          }}>
                            <div style={{ fontSize: '12px', fontWeight: 'bold', color: '#495057' }}>
                              –¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤:
                            </div>
                            {t.needInvoice && (
                              <div style={{ fontSize: '11px', color: '#28a745' }}>
                                üìÑ –ü–æ—Ç—Ä—ñ–±–µ–Ω —Ä–∞—Ö—É–Ω–æ–∫
                              </div>
                            )}
                            {t.needAct && (
                              <div style={{ fontSize: '11px', color: '#17a2b8' }}>
                                üìã –ü–æ—Ç—Ä—ñ–±–µ–Ω –∞–∫—Ç –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç
                              </div>
                            )}
                          </div>
                          
                          {/* –ö–Ω–æ–ø–∫–∏ –¥—ñ–π –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ */}
                          <div style={{ display: 'flex', gap: '4px', flexWrap: 'wrap' }}>
                            <button 
                              onClick={() => onEdit && onEdit(t)}
                              style={{
                                background: '#007bff',
                                color: '#fff',
                                border: 'none',
                                borderRadius: '4px',
                                padding: '6px 12px',
                                fontSize: '12px',
                                cursor: 'pointer'
                              }}
                            >
                              ‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                            </button>
                            
                            <button 
                              onClick={() => {
                                setDocumentUploadModal({ open: true, task: t });
                              }}
                              style={{
                                background: '#28a745',
                                color: '#fff',
                                border: 'none',
                                borderRadius: '4px',
                                padding: '6px 12px',
                                fontSize: '12px',
                                cursor: 'pointer'
                              }}
                            >
                              üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∏
                            </button>
                            
                            <button 
                              onClick={() => {
                                const hasFiles = t.invoiceFiles && t.invoiceFiles.length > 0;
                                const filesInfo = hasFiles ? 
                                  `\n\n–ü—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω—ñ —Ñ–∞–π–ª–∏:\n${t.invoiceFiles.map(f => `- ${f.name}`).join('\n')}` : 
                                  '\n\n–§–∞–π–ª–∏ –Ω–µ –ø—Ä–∏–∫—Ä—ñ–ø–ª–µ–Ω—ñ.';
                                
                                if (confirm(`–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –∑–∞–∫—Ä–∏—Ç–∏ –∑–∞—è–≤–∫—É?\n\n–ó–∞—è–≤–∫–∞: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'}\n–ö–ª—ñ—î–Ω—Ç: ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}${filesInfo}`)) {
                                  if (onCompleteInvoiceRequest) {
                                    onCompleteInvoiceRequest(t.id);
                                  } else {
                                    console.error('[ERROR] TaskTable - onCompleteInvoiceRequest –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ');
                                    alert('–ü–æ–º–∏–ª–∫–∞: —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞');
                                  }
                                }
                              }}
                              style={{
                                background: '#ffc107',
                                color: '#000',
                                border: 'none',
                                borderRadius: '4px',
                                padding: '6px 12px',
                                fontSize: '12px',
                                cursor: 'pointer'
                              }}
                            >
                              ‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
                            </button>
                            
                            <button 
                              onClick={() => {
                                if (confirm(`–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—è–≤–∫—É?\n\n–ó–∞—è–≤–∫–∞: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'}\n–ö–ª—ñ—î–Ω—Ç: ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`)) {
                                  onDelete && onDelete(t.id);
                                }
                              }}
                              style={{
                                background: '#dc3545',
                                color: '#fff',
                                border: 'none',
                                borderRadius: '4px',
                                padding: '6px 12px',
                                fontSize: '12px',
                                cursor: 'pointer'
                              }}
                            >
                              üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è
                            </button>
                          </div>
                        </>
                      ) : (
                        <>
                      {/* –ö–Ω–æ–ø–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è - –≤ –∞—Ä—Ö—ñ–≤—ñ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
                      {(!isArchive || role === 'admin' || user?.role === 'admin' || user?.role === 'administrator') && (
                        <>
                          {(role === 'service' || role === 'operator' || role === 'admin') && (
                            <>
                              {/* –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –∑–∞—è–≤–æ–∫ */}
                              {isImported ? (
                                <button onClick={()=>{
                                  // –õ–æ–≥—É—î–º–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ—ó –∑–∞—è–≤–∫–∏
                                  logUserAction(user, EVENT_ACTIONS.UPDATE, ENTITY_TYPES.TASK, t.id, 
                                    `–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ—ó –∑–∞—è–≤–∫–∏: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`, {
                                      requestNumber: t.requestNumber,
                                      client: t.client,
                                      work: t.work,
                                      status: t.status,
                                      isImported: true
                                    });
                                  onEdit && onEdit(t);
                                }} style={{background:'#ff9800',color:'#fff'}}>
                                  –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Ç–∞ –∑–±–µ—Ä–µ–≥—Ç–∏
                                </button>
                              ) : (
                                <button onClick={()=>{
                                  // –õ–æ–≥—É—î–º–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏
                                  logUserAction(user, EVENT_ACTIONS.UPDATE, ENTITY_TYPES.TASK, t.id, 
                                    `–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`, {
                                      requestNumber: t.requestNumber,
                                      client: t.client,
                                      work: t.work,
                                      status: t.status
                                    });
                                  onEdit && onEdit(t);
                                }}>–†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
                              )}
                              {/* –ö–Ω–æ–ø–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è - —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–∏—Ö –∫–µ—Ä—ñ–≤–Ω–∏–∫—ñ–≤ —Ç–∞ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ */}
                              {(() => {
                                const canDelete = user?.role === 'regionalManager' || user?.role === 'admin' || user?.role === 'administrator' || user?.role === 'regkerivn' || user?.role === 'regkerzavskl';
                                const hasTaskId = !!t.id;
                                const hasOnDeleteFunc = !!onDelete;
                                // –î–ª—è —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–∏—Ö –∑–∞—è–≤–æ–∫ –∑–∞–≤–∂–¥–∏ –ø–æ–∫–∞–∑—É—î–º–æ –∫–Ω–æ–ø–∫—É –≤–∏–¥–∞–ª–µ–Ω–Ω—è
                                const shouldShowButton = isImported || (canDelete && hasTaskId && hasOnDeleteFunc);
                                
                                console.log('[DEBUG] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –≤–∏–¥–∞–ª–µ–Ω–Ω—è:', {
                                  role,
                                  userRole: user?.role,
                                  canDelete,
                                  hasTaskId,
                                  hasOnDeleteFunc,
                                  shouldShowButton,
                                  taskId: t.id,
                                  onDeleteType: typeof onDelete
                                });
                                
                                return shouldShowButton;
                              })() && (
                                <button onClick={()=>{
                                  if (t.id && onDelete) {
                                    showDeleteConfirmation(t);
                                  } else {
                                    console.error('[ERROR] –ù–µ–º–æ–∂–ª–∏–≤–æ –≤–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—è–≤–∫—É: ID –≤—ñ–¥—Å—É—Ç–Ω—ñ–π –∞–±–æ onDelete –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ', { taskId: t.id, hasOnDelete: !!onDelete });
                                  }
                                }} style={{background:'#f66',color:'#fff'}}>–í–∏–¥–∞–ª–∏—Ç–∏</button>
                              )}
                              {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞—Ä—è–¥—É - —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Å–µ—Ä–≤—ñ—Å–Ω–æ—ó —Å–ª—É–∂–±–∏ */}
                              {role === 'service' && (
                                <button onClick={() => {
                                  generateWorkOrder(t);
                                }} style={{background:'#4CAF50',color:'#fff'}}>–ù–∞—Ä—è–¥</button>
                              )}
                              {/* –î–ª—è —ñ–Ω—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø–æ–∫–∞–∑—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω—É –∫–Ω–æ–ø–∫—É */}
                              {(() => {
                                const shouldShowInfoButton = user?.role !== 'regionalManager' && user?.role !== 'admin' && user?.role !== 'administrator' && user?.role !== 'regkerivn' && user?.role !== 'regkerzavskl';
                                console.log('[DEBUG] –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–æ—ó –∫–Ω–æ–ø–∫–∏:', {
                                  userRole: user?.role,
                                  shouldShowInfoButton
                                });
                                return shouldShowInfoButton;
                              })() && (
                                <button onClick={() => {
                                  alert('–î–ª—è –¥–∞–Ω–æ—ó –¥—ñ—ó –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ —Å–µ—Ä–≤—ñ—Å–Ω–æ–≥–æ –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—É –≤–∞—à–æ–≥–æ —Ä–µ–≥—ñ–æ–Ω—É –∞–±–æ –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
                                }} style={{background:'#666',color:'#fff', cursor:'help'}} title="–î–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞">–í–∏–¥–∞–ª–∏—Ç–∏</button>
                              )}
                            </>
                          )}
                          {(role === 'warehouse' || role === 'accountant' || role === 'buhgalteria' || role === 'regionalManager' || role === 'regional') && !(role === 'regional' && t._debtTab) && (
                            <button onClick={()=>{
                              // –õ–æ–≥—É—î–º–æ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏
                              logUserAction(user, EVENT_ACTIONS.UPDATE, ENTITY_TYPES.TASK, t.id, 
                                `–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞—è–≤–∫–∏: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`, {
                                  requestNumber: t.requestNumber,
                                  client: t.client,
                                  work: t.work,
                                  status: t.status
                                });
                              onEdit && onEdit(t);
                            }}>–†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
                          )}
                        </>
                      )}
                      {/* –ö–Ω–æ–ø–∫–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó - –≤ –∞—Ä—Ö—ñ–≤—ñ –¥–ª—è –≤—Å—ñ—Ö —Ä–æ–ª–µ–π –∫—Ä—ñ–º –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
                      {isArchive && role !== 'admin' && user?.role !== 'admin' && user?.role !== 'administrator' && (
                        <button onClick={()=>{
                          // –õ–æ–≥—É—î–º–æ –ø–µ—Ä–µ–≥–ª—è–¥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–∞—è–≤–∫–∏
                          logUserAction(user, EVENT_ACTIONS.VIEW, ENTITY_TYPES.TASK, t.id, 
                            `–ü–µ—Ä–µ–≥–ª—è–¥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–∞—è–≤–∫–∏: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`, {
                              requestNumber: t.requestNumber,
                              client: t.client,
                              work: t.work,
                              status: t.status
                            });
                          onEdit && onEdit({...t, _readOnly: true});
                        }} style={{background:'#43a047',color:'#fff'}}>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</button>
                      )}
                      {/* –°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "debt" —Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ - —Ç—ñ–ª—å–∫–∏ –Ü—Å—Ç–æ—Ä—ñ—è —Ç–∞ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è */}
                      {role === 'regional' && t._debtTab && (
                        <button onClick={()=>{
                          // –õ–æ–≥—É—î–º–æ –ø–µ—Ä–µ–≥–ª—è–¥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–∞—è–≤–∫–∏
                          logUserAction(user, EVENT_ACTIONS.VIEW, ENTITY_TYPES.TASK, t.id, 
                            `–ü–µ—Ä–µ–≥–ª—è–¥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–∞—è–≤–∫–∏: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`, {
                              requestNumber: t.requestNumber,
                              client: t.client,
                              work: t.work,
                              status: t.status
                            });
                          onEdit && onEdit({...t, _readOnly: true});
                        }} style={{background:'#43a047',color:'#fff'}}>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</button>
                      )}
                      {/* –ö–Ω–æ–ø–∫–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥–ª—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏—Ö —Ä–æ–ª–µ–π - –≤ –∞—Ä—Ö—ñ–≤—ñ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ */}
                      {((role === 'warehouse' || role === 'regional' || role === 'accountant' || role === 'buhgalteria' || role === 'regionalManager' || role === 'admin' || role === 'administrator' || user?.role === 'admin' || user?.role === 'administrator') && (!isArchive || user?.role === 'admin' || user?.role === 'administrator')) && !(role === 'regional' && t._debtTab) && onApprove && (
                        <>
                          {/* –ö–Ω–æ–ø–∫–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤ –¥—Ä—É–≥–æ–º—É —Ä—è–¥–∫—É */}
                          <div style={{marginTop: '4px', display: 'flex', flexWrap: 'wrap', gap: '4px', alignItems: 'center'}}>
                            <button onClick={()=>{
                              // –õ–æ–≥—É—î–º–æ –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏
                              logUserAction(user, EVENT_ACTIONS.APPROVE, ENTITY_TYPES.TASK, t.id, 
                                `–ó–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –∑–∞—è–≤–∫—É: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`, {
                                  requestNumber: t.requestNumber,
                                  client: t.client,
                                  work: t.work,
                                  status: t.status
                                });
                              onApprove && onApprove(t.id, '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ', '');
                            }} style={{background:'#0a0',color:'#fff', fontSize: '10px', padding: '4px 6px', borderRadius: '3px', border: 'none', cursor: 'pointer'}}>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏</button>
                            <button onClick={()=>setRejectModal({ open: true, taskId: t.id, comment: '' })} style={{background:'#f66',color:'#fff', fontSize: '10px', padding: '4px 6px', borderRadius: '3px', border: 'none', cursor: 'pointer'}}>–í—ñ–¥—Ö–∏–ª–∏—Ç–∏</button>
                            <button onClick={()=>{
                              // –õ–æ–≥—É—î–º–æ –≤—ñ–¥–ø—Ä–∞–≤–∫—É –Ω–∞ —Ä–æ–∑–≥–ª—è–¥
                              logUserAction(user, EVENT_ACTIONS.UPDATE, ENTITY_TYPES.TASK, t.id, 
                                `–í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ä–æ–∑–≥–ª—è–¥: ${t.requestNumber || '–ë–µ–∑ –Ω–æ–º–µ—Ä–∞'} - ${t.client || '–ë–µ–∑ –∫–ª—ñ—î–Ω—Ç–∞'}`, {
                                  requestNumber: t.requestNumber,
                                  client: t.client,
                                  work: t.work,
                                  status: t.status
                                });
                              onApprove && onApprove(t.id, '–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ', '');
                            }} style={{background:'#ffe066',color:'#22334a', fontSize: '10px', padding: '4px 6px', borderRadius: '3px', border: 'none', cursor: 'pointer'}}>–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ</button>
                            {/* –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å */}
                            {approveField && t[approveField] && (
                              <span style={{color:'#666', fontSize: '11px'}}>
                                (–ü–æ—Ç–æ—á–Ω–∏–π: {t[approveField] === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' : t[approveField] === '–í—ñ–¥–º–æ–≤–∞' ? '–í—ñ–¥—Ö–∏–ª–µ–Ω–æ' : t[approveField]})
                              </span>
                            )}
                          </div>
                        </>
                      )}
                      </>
                      )}
                      </div>
                    </td>
                    {visibleColumns.map(col => <td key={col.key} className="td-auto-height" style={{
                      ...(getRowColor(t) ? {color:'#111'} : {}),
                      width: columnWidths[col.key] || 120,
                      minWidth: columnWidths[col.key] || 120,
                      maxWidth: columnWidths[col.key] || 120
                    }}>{
                      col.key === 'approvedByWarehouse' ? (t.approvedByWarehouse === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' : t.approvedByWarehouse === '–í—ñ–¥–º–æ–≤–∞' ? '–í—ñ–¥–º–æ–≤–∞' : '–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ') :
                      col.key === 'approvedByAccountant' ? (t.approvedByAccountant === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' : t.approvedByAccountant === '–í—ñ–¥–º–æ–≤–∞' ? '–í—ñ–¥–º–æ–≤–∞' : '–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ') :
                      col.key === 'approvedByRegionalManager' ? (t.approvedByRegionalManager === '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' ? '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ' : t.approvedByRegionalManager === '–í—ñ–¥–º–æ–≤–∞' ? '–í—ñ–¥—Ö–∏–ª–µ–Ω–æ' : '–ù–∞ —Ä–æ–∑–≥–ª—è–¥—ñ') :
                      col.key === 'debtStatus' ? (t.debtStatus === '–î–æ–∫—É–º–µ–Ω—Ç–∏ –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ' ? '–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ' : '–ó–∞–±–æ—Ä–≥–æ–≤–∞–Ω—ñ—Å—Ç—å') :
                      col.key === 'debtStatusCheckbox' ? (t.debtStatusCheckbox ? '–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ' : '–ù—ñ') :
                      col.key === 'documentType' ? (
                        <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>
                          {t.needInvoice && (
                            <span style={{ 
                              fontSize: '10px', 
                              color: '#28a745', 
                              fontWeight: 'bold',
                              background: '#d4edda',
                              padding: '2px 4px',
                              borderRadius: '3px',
                              display: 'inline-block'
                            }}>
                              üìÑ –ü–æ—Ç—Ä—ñ–±–µ–Ω —Ä–∞—Ö—É–Ω–æ–∫
                            </span>
                          )}
                          {t.needAct && (
                            <span style={{ 
                              fontSize: '10px', 
                              color: '#17a2b8', 
                              fontWeight: 'bold',
                              background: '#d1ecf1',
                              padding: '2px 4px',
                              borderRadius: '3px',
                              display: 'inline-block'
                            }}>
                              üìã –ü–æ—Ç—Ä—ñ–±–µ–Ω –∞–∫—Ç
                            </span>
                          )}
                          {!t.needInvoice && !t.needAct && (
                            <span style={{ 
                              fontSize: '10px', 
                              color: '#dc3545', 
                              fontWeight: 'bold',
                              background: '#f8d7da',
                              padding: '2px 4px',
                              borderRadius: '3px',
                              display: 'inline-block'
                            }}>
                              ‚ö†Ô∏è –ù–µ –≤–∫–∞–∑–∞–Ω–æ
                            </span>
                          )}
                        </div>
                      ) :
                      formatCellValue(t[col.key])
                    }</td>)}
                    <td style={getRowColor(t) ? {color:'#111'} : {}}>
                      <div style={{ display: 'flex', flexDirection: 'column', gap: '2px' }}>
                        <span>{t.status}</span>
                        {t.needInvoice && (
                          <span style={{ 
                            fontSize: '10px', 
                            color: '#28a745', 
                            fontWeight: 'bold',
                            background: '#d4edda',
                            padding: '2px 4px',
                            borderRadius: '3px',
                            display: 'inline-block'
                          }}>
                            üìÑ –ü–æ—Ç—Ä—ñ–±–µ–Ω —Ä–∞—Ö—É–Ω–æ–∫
                          </span>
                        )}
                        {t.needAct && (
                          <span style={{ 
                            fontSize: '10px', 
                            color: '#17a2b8', 
                            fontWeight: 'bold',
                            background: '#d1ecf1',
                            padding: '2px 4px',
                            borderRadius: '3px',
                            display: 'inline-block'
                          }}>
                            üìã –ü–æ—Ç—Ä—ñ–±–µ–Ω –∞–∫—Ç
                          </span>
                        )}
                      </div>
                    </td>
                    {(role === 'admin' || user?.role === 'administrator') && <td style={getRowColor(t) ? {color:'#111'} : {}}>
                      {(t.bonusApprovalDate || '')}
                      <button style={{marginLeft:8}} onClick={() => {
                        let mm = '', yyyy = '';
                        const val = t.bonusApprovalDate || '';
                        if (/^\d{2}-\d{4}$/.test(val)) {
                          [mm, yyyy] = val.split('-');
                        } else if (/^\d{4}-\d{2}-\d{2}$/.test(val)) {
                          yyyy = val.slice(0,4); mm = val.slice(5,7);
                        } else {
                          mm = String(now.getMonth()+1).padStart(2,'0');
                          yyyy = String(now.getFullYear());
                        }
                        setEditDateModal({ open: true, taskId: t.id, month: mm, year: yyyy });
                      }}>–ó–º—ñ–Ω–∏—Ç–∏</button>
                    </td>}
                    {commentField && (
                      <td style={getRowColor(t) ? {color:'#111'} : {}}>
                        <input
                          value={typeof t[commentField] === 'string' ? t[commentField] : ''}
                          onChange={e => {onApprove(t.id, t[approveField], e.target.value);}}
                          placeholder="–ö–æ–º–µ–Ω—Ç–∞—Ä"
                          style={getRowColor(t) ? {width:120, color:'#111', background:'#fff'} : {width:120}}
                          disabled={t[approveField] !== false}
                        />
                      </td>
                    )}
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
          {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä—è–¥–∫—ñ–≤ —Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞ –ø–æ—á–∞—Ç–æ–∫" */}
          <div style={{padding:'8px 16px', background:'#f8f9fa', color:'#333', borderTop:'1px solid #ddd', fontSize:'14px', display:'flex', justifyContent:'space-between', alignItems:'center'}}>
            <span>–í—Å—å–æ–≥–æ —Ä—è–¥–∫—ñ–≤: {sortedTasks.length}</span>
            <button 
              onClick={() => {
                const container = document.querySelector('.table-scroll');
                if (container) {
                  container.scrollTo({ top: 0, left: 0, behavior: 'smooth' });
                }
              }}
              style={{
                background:'#00bfff',
                color:'#fff',
                border:'none',
                padding:'4px 12px',
                borderRadius:'4px',
                cursor:'pointer',
                fontSize:'12px'
              }}
            >
              ‚Üë –ù–∞ –ø–æ—á–∞—Ç–æ–∫
            </button>
          </div>
          {showInfo && infoTask && (
            <InfoModal task={infoTask} onClose={()=>setShowInfo(false)} history={getClientHistory(infoTask.client).filter(h=>h.status === '–í–∏–∫–æ–Ω–∞–Ω–æ')} />
          )}
        </div>
      </div>
      {/* --- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –æ–ø–∏—Å—É –≤—ñ–¥–º–æ–≤–∏ --- */}
      {rejectModal.open && (
        <div style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'#000a',zIndex:2000,display:'flex',alignItems:'center',justifyContent:'center'}}>
          <div style={{background:'#22334a',padding:32,borderRadius:8,minWidth:320,maxWidth:400,boxShadow:'0 4px 32px #0008',color:'#fff',display:'flex',flexDirection:'column',gap:16}}>
            <h3>–í–∫–∞–∂—ñ—Ç—å –æ–ø–∏—Å –≤—ñ–¥–º–æ–≤–∏</h3>
            <textarea
              style={{minHeight:60,background:'#1a2636',color:'#fff',border:'1px solid #444',borderRadius:4,padding:8}}
              value={rejectModal.comment}
              onChange={e => setRejectModal({ ...rejectModal, comment: e.target.value })}
              placeholder="–í–≤–µ–¥—ñ—Ç—å –ø—Ä–∏—á–∏–Ω—É –≤—ñ–¥–º–æ–≤–∏..."
            />
            <div style={{display:'flex',gap:12,marginTop:8}}>
              <button type="button" style={{flex:1,background:'#d32f2f',color:'#fff'}} onClick={handleRejectConfirm} disabled={!rejectModal.comment.trim()}>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –≤—ñ–¥–º–æ–≤—É</button>
              <button type="button" style={{flex:1,background:'#888',color:'#fff'}} onClick={handleRejectCancel}>–°–∫–∞—Å—É–≤–∞—Ç–∏</button>
            </div>
          </div>
        </div>
      )}
      {/* --- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –∑–º—ñ–Ω–∏ –¥–∞—Ç–∏ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø—Ä–µ–º—ñ—ó --- */}
      {(role === 'admin' || user?.role === 'administrator') && editDateModal.open && (
        <div style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'#000a',zIndex:4000,display:'flex',alignItems:'center',justifyContent:'center'}}>
          <div style={{background:'#22334a',padding:32,borderRadius:8,minWidth:320,maxWidth:400,boxShadow:'0 4px 32px #0008',color:'#fff',display:'flex',flexDirection:'column',gap:16}}>
            <h3>–ó–º—ñ–Ω–∏—Ç–∏ –¥–∞—Ç—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø—Ä–µ–º—ñ—ó</h3>
            <div style={{display:'flex',gap:8,alignItems:'center'}}>
              <label>–ú—ñ—Å—è—Ü—å:
                <select value={editDateModal.month} onChange={e => setEditDateModal(m => ({...m, month: e.target.value}))} style={{marginLeft:8}}>
                  <option value="">--</option>
                  {months.map(m => <option key={m} value={m}>{m}</option>)}
                </select>
              </label>
              <label>–†—ñ–∫:
                <select value={editDateModal.year} onChange={e => setEditDateModal(m => ({...m, year: e.target.value}))} style={{marginLeft:8}}>
                  <option value="">--</option>
                  {years.map(y => <option key={y} value={y}>{y}</option>)}
                </select>
              </label>
            </div>
            <div style={{display:'flex',gap:12,marginTop:16}}>
              <button type="button" style={{flex:1,background:'#00bfff',color:'#fff'}} onClick={handleSaveBonusDate} disabled={!editDateModal.month || !editDateModal.year}>–ó–±–µ—Ä–µ–≥—Ç–∏</button>
              <button type="button" style={{flex:1,background:'#888',color:'#fff'}} onClick={()=>setEditDateModal({ open: false, taskId: null, month: '', year: '' })}>–í—ñ–¥–º—ñ–Ω–∏—Ç–∏</button>
            </div>
          </div>
        </div>
      )}
      {/* --- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏ --- */}
      {deleteConfirmModal.open && (
        <div style={{position:'fixed',top:0,left:0,width:'100vw',height:'100vh',background:'#000a',zIndex:3000,display:'flex',alignItems:'center',justifyContent:'center'}}>
          <div style={{background:'#22334a',padding:32,borderRadius:8,minWidth:400,maxWidth:500,boxShadow:'0 4px 32px #0008',color:'#fff',display:'flex',flexDirection:'column',gap:16}}>
            <h3 style={{color:'#ff6666',margin:0}}>‚ö†Ô∏è –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏</h3>
            
            <div style={{background:'#1a2636',padding:16,borderRadius:6,border:'1px solid #444'}}>
              <p style={{margin:'0 0 12px 0',fontWeight:600}}>–í–∏ –¥—ñ–π—Å–Ω–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –∑–∞—è–≤–∫—É?</p>
              
              {deleteConfirmModal.taskInfo && (
                <div style={{fontSize:14,lineHeight:1.5}}>
                  <p><strong>–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏:</strong> {deleteConfirmModal.taskInfo.requestNumber || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                  <p><strong>–ó–∞–º–æ–≤–Ω–∏–∫:</strong> {deleteConfirmModal.taskInfo.client || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                  <p><strong>–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —Ä–æ–±—ñ—Ç:</strong> {deleteConfirmModal.taskInfo.work || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                  <p><strong>–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç:</strong> {deleteConfirmModal.taskInfo.date || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                  <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {deleteConfirmModal.taskInfo.status || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
                </div>
              )}
              
              <div style={{background:'#ff4444',color:'#fff',padding:12,borderRadius:4,marginTop:12,fontSize:14}}>
                <strong>‚ö†Ô∏è –£–≤–∞–≥–∞!</strong> –¶—è –¥—ñ—è —î –Ω–µ–∑–≤–æ—Ä–æ—Ç–Ω–æ—é. –í—Å—ñ –¥–∞–Ω—ñ –∑–∞—è–≤–∫–∏, –≤–∫–ª—é—á–∞—é—á–∏ —Ñ–∞–π–ª–∏ —Ç–∞ —ñ—Å—Ç–æ—Ä—ñ—é, –±—É–¥—É—Ç—å –ø–æ–≤–Ω—ñ—Å—Ç—é –≤–∏–¥–∞–ª–µ–Ω—ñ –∑ —Å–∏—Å—Ç–µ–º–∏.
              </div>
            </div>
            
            <div style={{display:'flex',gap:12,marginTop:8}}>
              <button 
                type="button" 
                style={{flex:1,background:'#d32f2f',color:'#fff',padding:'12px 16px',border:'none',borderRadius:6,fontSize:14,fontWeight:600,cursor:'pointer'}} 
                onClick={handleDeleteConfirm}
              >
                üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏ –∑–∞—è–≤–∫—É
              </button>
              <button 
                type="button" 
                style={{flex:1,background:'#666',color:'#fff',padding:'12px 16px',border:'none',borderRadius:6,fontSize:14,fontWeight:600,cursor:'pointer'}} 
                onClick={handleDeleteCancel}
              >
                ‚úï –°–∫–∞—Å—É–≤–∞—Ç–∏
              </button>
            </div>
          </div>
        </div>
      )}
      
      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ - —Ç—ñ–ª—å–∫–∏ —è–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—ó –ø–µ—Ä–µ–¥–∞–Ω—ñ */}
      <DocumentUploadModal
        isOpen={documentUploadModal.open}
        onClose={() => setDocumentUploadModal({ open: false, task: null })}
        task={documentUploadModal.task}
        onInvoiceUpload={onInvoiceUpload}
        onActUpload={onActUpload}
        onInvoiceDelete={onInvoiceDelete}
        onActDelete={onActDelete}
        uploadingFiles={uploadingFiles}
      />
    </>
  );
} 

// –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ React.memo –¥–ª—è –∑–∞–ø–æ–±—ñ–≥–∞–Ω–Ω—è –Ω–µ–ø–æ—Ç—Ä—ñ–±–Ω–∏—Ö –ø–µ—Ä–µ–º–æ–Ω—Ç—É–≤–∞–Ω—å
const TaskTable = React.memo(TaskTableComponent, (prevProps, nextProps) => {
  // –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –∫—Ä–∏—Ç–∏—á–Ω—ñ –ø—Ä–æ–ø—Å–∏
  const userLoginEqual = prevProps.user?.login === nextProps.user?.login;
  const roleEqual = prevProps.role === nextProps.role;
  const columnsLengthEqual = prevProps.columns.length === nextProps.columns.length;
  const filtersEqual = JSON.stringify(prevProps.filters) === JSON.stringify(nextProps.filters);
  
  // –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –∑–∞–≤–¥–∞–Ω–Ω—è —Ç—ñ–ª—å–∫–∏ –∑–∞ ID, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–µ—Ä–µ–º–æ–Ω—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
  const tasksEqual = prevProps.tasks.length === nextProps.tasks.length && 
    prevProps.tasks.every((task, index) => task.id === nextProps.tasks[index]?.id);
  
  const criticalPropsEqual = userLoginEqual && roleEqual && columnsLengthEqual && filtersEqual && tasksEqual;
  
  console.log('[DEBUG] TaskTable memo comparison:', {
    userLoginEqual,
    roleEqual,
    columnsLengthEqual,
    filtersEqual,
    tasksEqual,
    shouldUpdate: !criticalPropsEqual
  });
  
  return criticalPropsEqual;
});

export default TaskTable; 