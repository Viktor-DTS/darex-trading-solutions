import React, { useState, useEffect } from 'react';

const InvoiceRequestBlock = ({ task, user, onRequest }) => {
  const [showModal, setShowModal] = useState(false);
  const [invoiceRequest, setInvoiceRequest] = useState(null);
  const [loading, setLoading] = useState(false);
  const [needInvoice, setNeedInvoice] = useState(true); // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∞–∫—Ç–∏–≤–Ω–∏–π
  const [needAct, setNeedAct] = useState(false); // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∑–∞–ø–∏—Ç –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫
  const loadInvoiceRequest = async () => {
    if (!task.id) {
      console.log('DEBUG InvoiceRequestBlock: task.id –≤—ñ–¥—Å—É—Ç–Ω—ñ–π', task);
      return;
    }
    
    console.log('DEBUG InvoiceRequestBlock: –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑–∞–ø–∏—Ç –¥–ª—è task.id =', task.id);
    
    setLoading(true);
    try {
      const API_BASE_URL = process.env.REACT_APP_API_URL || 
        (window.location.hostname === 'localhost' ? 'http://localhost:3001/api' : 'https://darex-trading-solutions.onrender.com/api');
      
      const response = await fetch(`${API_BASE_URL}/invoice-requests?taskId=${task.id}`);
      if (response.ok) {
        const data = await response.json();
        console.log('DEBUG InvoiceRequestBlock: –æ—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å', data);
        if (data.success && data.data && data.data.length > 0) {
          setInvoiceRequest(data.data[0]);
        } else {
          setInvoiceRequest(null);
        }
      } else {
        console.error('–ü–æ–º–∏–ª–∫–∞ HTTP:', response.status);
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫:', error);
    } finally {
      setLoading(false);
    }
  };

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–ø–∏—Ç –ø—Ä–∏ –∑–º—ñ–Ω—ñ task.id
  useEffect(() => {
    if (task.id) {
      loadInvoiceRequest();
    }
  }, [task.id]); // –î–æ–¥–∞—î–º–æ –∑–∞–ª–µ–∂–Ω—ñ—Å—Ç—å —Ç—ñ–ª—å–∫–∏ –≤—ñ–¥ task.id

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –º–æ–∂–Ω–∞ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –±–ª–æ–∫
  const canShowBlock = () => {
    const canShow = (
      (task.status === '–í–∏–∫–æ–Ω–∞–Ω–æ' || task.status === '–ó–∞—è–≤–∫–∞' || task.status === '–í —Ä–æ–±–æ—Ç—ñ') && 
      (user?.role === '–ö–µ—Ä—ñ–≤–Ω–∏–∫ —Å–µ—Ä–≤—ñ—Å–Ω–æ—ó —Å–ª—É–∂–±–∏' || 
       user?.role === '–û–ø–µ—Ä–∞—Ç–æ—Ä' || 
       user?.role === '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä' ||
       user?.role === '–†–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–∏–π –∫–µ—Ä—ñ–≤–Ω–∏–∫' ||
       user?.role === 'administrator' ||
       user?.role === 'service' ||
       user?.role === 'operator' ||
       user?.role === 'admin' ||
       user?.role === 'regional_manager' ||
       user?.role === 'regkerivn')
    );
    
    console.log('DEBUG InvoiceRequestBlock:', {
      taskStatus: task.status,
      userRole: user?.role,
      invoiceRequested: task.invoiceRequested,
      canShow: canShow
    });
    
    return canShow;
  };

  const handleRequest = async (invoiceData) => {
    try {
      // –î–æ–¥–∞—î–º–æ –¥–∞–Ω—ñ —á–µ–∫–±–æ–∫—Å—ñ–≤ –¥–æ –∑–∞–ø–∏—Ç—É
      const requestData = {
        ...invoiceData,
        needInvoice: needInvoice,
        needAct: needAct
      };
      await onRequest(requestData);
      setShowModal(false);
      // –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∑–∞–ø–∏—Ç —Ç—ñ–ª—å–∫–∏ –ø—ñ—Å–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è
      setTimeout(() => {
        loadInvoiceRequest();
      }, 1000); // –ó–∞—Ç—Ä–∏–º–∫–∞ 1 —Å–µ–∫—É–Ω–¥–∞
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∑–∞–ø–∏—Ç—É –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫:', error);
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ñ–∞–π–ª—É —Ä–∞—Ö—É–Ω–∫—É
  const viewInvoiceFile = (e) => {
    e.preventDefault();
    e.stopPropagation();
    if (invoiceRequest?.invoiceFile) {
      window.open(invoiceRequest.invoiceFile, '_blank');
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É —Ä–∞—Ö—É–Ω–∫—É
  const downloadInvoiceFile = async (e) => {
    e.preventDefault();
    e.stopPropagation();
    if (!invoiceRequest?.invoiceFile) return;
    
    try {
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª —á–µ—Ä–µ–∑ fetch –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      const response = await fetch(invoiceRequest.invoiceFile);
      const blob = await response.blob();
      
      // –°—Ç–≤–æ—Ä—é—î–º–æ URL –¥–ª—è blob
      const url = window.URL.createObjectURL(blob);
      
      // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–∏–º—á–∞—Å–æ–≤–∏–π –µ–ª–µ–º–µ–Ω—Ç <a> –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      const link = document.createElement('a');
      link.href = url;
      link.download = invoiceRequest.invoiceFileName || 'invoice.pdf';
      // –ù–ï –¥–æ–¥–∞—î–º–æ target='_blank' –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      document.body.appendChild(link);
      link.click();
      
      // –û—á–∏—â–∞—î–º–æ
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É');
    }
  };

  // –Ø–∫—â–æ –Ω–µ –º–æ–∂–Ω–∞ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –±–ª–æ–∫, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ null
  if (!canShowBlock()) {
    return null;
  }

  return (
    <>
      <div style={{
        marginTop: '20px',
        padding: '20px',
        backgroundColor: '#f8f9fa',
        borderRadius: '8px',
        border: '2px solid #e9ecef'
      }}>
        <h4 style={{
          margin: '0 0 15px 0',
          color: '#495057',
          fontSize: '16px',
          fontWeight: '600'
        }}>
          üìÑ –ó–∞–ø–∏—Ç –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫
        </h4>
        
        {loading ? (
          <div style={{ textAlign: 'center', padding: '20px' }}>
            <span style={{ color: '#6c757d' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó...</span>
          </div>
        ) : invoiceRequest ? (
          <div>
            {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞–Ω—É –∑–∞–ø–∏—Ç—É */}
            <div style={{ marginBottom: '15px' }}>
              <div style={{
                display: 'inline-block',
                padding: '6px 12px',
                borderRadius: '4px',
                fontSize: '12px',
                fontWeight: '600',
                backgroundColor: 
                  invoiceRequest.status === 'pending' ? '#fff3cd' :
                  invoiceRequest.status === 'processing' ? '#d1ecf1' :
                  invoiceRequest.status === 'completed' ? '#d4edda' :
                  '#f8d7da',
                color: 
                  invoiceRequest.status === 'pending' ? '#856404' :
                  invoiceRequest.status === 'processing' ? '#0c5460' :
                  invoiceRequest.status === 'completed' ? '#155724' :
                  '#721c24'
              }}>
                {invoiceRequest.status === 'pending' ? '‚è≥ –û—á—ñ–∫—É—î –æ–±—Ä–æ–±–∫–∏' :
                 invoiceRequest.status === 'processing' ? 'üîÑ –í –æ–±—Ä–æ–±—Ü—ñ' :
                 invoiceRequest.status === 'completed' ? '‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ' :
                 '‚ùå –í—ñ–¥—Ö–∏–ª–µ–Ω–æ'}
              </div>
            </div>

            {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–ø–∏—Ç */}
            <div style={{ marginBottom: '15px', fontSize: '14px', color: '#495057' }}>
              <div><strong>–°—Ç–≤–æ—Ä–µ–Ω–æ:</strong> {new Date(invoiceRequest.createdAt).toLocaleDateString('uk-UA')}</div>
              {invoiceRequest.comments && (
                <div style={{ marginTop: '8px' }}>
                  <strong>–ö–æ–º–µ–Ω—Ç–∞—Ä—ñ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞:</strong> {invoiceRequest.comments}
                </div>
              )}
              {invoiceRequest.rejectionReason && (
                <div style={{ marginTop: '8px', color: '#dc3545' }}>
                  <strong>–ü—Ä–∏—á–∏–Ω–∞ –≤—ñ–¥–º–æ–≤–∏:</strong> {invoiceRequest.rejectionReason}
                </div>
              )}
            </div>

            {/* –§–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É */}
            {invoiceRequest.status === 'completed' && invoiceRequest.invoiceFile && (
              <div style={{
                marginBottom: '15px',
                padding: '12px',
                backgroundColor: '#e8f5e8',
                borderRadius: '4px',
                border: '1px solid #c3e6cb'
              }}>
                <div style={{ marginBottom: '8px' }}>
                  <strong style={{ color: '#000' }}>üìÑ –§–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É:</strong> 
                  <span style={{ color: '#000', marginLeft: '8px' }}>{invoiceRequest.invoiceFileName}</span>
                </div>
                <div style={{ display: 'flex', gap: '8px' }}>
                  <button 
                    type="button"
                    onClick={viewInvoiceFile}
                    style={{
                      padding: '8px 16px',
                      backgroundColor: '#17a2b8',
                      color: 'white',
                      border: 'none',
                      borderRadius: '4px',
                      cursor: 'pointer',
                      fontSize: '14px',
                      fontWeight: '600'
                    }}
                  >
                    üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ–∞–π–ª
                  </button>
                  <button 
                    type="button"
                    onClick={downloadInvoiceFile}
                    style={{
                      padding: '8px 16px',
                      backgroundColor: '#28a745',
                      color: 'white',
                      border: 'none',
                      borderRadius: '4px',
                      cursor: 'pointer',
                      fontSize: '14px',
                      fontWeight: '600'
                    }}
                  >
                    üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ñ–∞–π–ª
                  </button>
                </div>
              </div>
            )}

            {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø–∏—Ç—É (—è–∫—â–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ) */}
            {invoiceRequest.status === 'rejected' && (
              <button 
                type="button"
                onClick={() => setShowModal(true)}
                style={{
                  padding: '12px 24px',
                  backgroundColor: '#17a2b8',
                  color: 'white',
                  border: 'none',
                  borderRadius: '6px',
                  cursor: 'pointer',
                  fontWeight: '600',
                  fontSize: '14px',
                  transition: 'background-color 0.2s'
                }}
                onMouseOver={(e) => e.target.style.backgroundColor = '#138496'}
                onMouseOut={(e) => e.target.style.backgroundColor = '#17a2b8'}
              >
                üîÑ –ü–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Ç –∑–Ω–æ–≤—É
              </button>
            )}
          </div>
        ) : (
          <div>
            <p style={{
              margin: '0 0 20px 0', 
              fontSize: '14px', 
              color: '#6c757d',
              lineHeight: '1.5'
            }}>
              –ó–∞—è–≤–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–∞. –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç–∏ –∑–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–∞—Ö—É–Ω–∫—É –≤—ñ–¥ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞ 
              –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞ <strong>{task.client || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ'}</strong> (–Ñ–î–†–ü–û–£: {task.edrpou || '–Ω–µ –≤–∫–∞–∑–∞–Ω–æ'}).
            </p>
            
            <button 
              type="button"
              onClick={() => setShowModal(true)}
              style={{
                padding: '12px 24px',
                backgroundColor: '#28a745',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                cursor: 'pointer',
                fontWeight: '600',
                fontSize: '14px',
                transition: 'background-color 0.2s'
              }}
              onMouseOver={(e) => e.target.style.backgroundColor = '#218838'}
              onMouseOut={(e) => e.target.style.backgroundColor = '#28a745'}
            >
              –ó–∞–ø—Ä–æ—Å–∏—Ç–∏ —Ä–∞—Ö—É–Ω–æ–∫
            </button>
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –∑–∞–ø–∏—Ç—É —Ä–∞—Ö—É–Ω–∫—É */}
      {showModal && (
        <div style={{
          position: 'fixed',
          top: 0,
          left: 0,
          right: 0,
          bottom: 0,
          backgroundColor: 'rgba(0, 0, 0, 0.5)',
          display: 'flex',
          alignItems: 'center',
          justifyContent: 'center',
          zIndex: 1000
        }}>
          <div style={{
            backgroundColor: 'white',
            padding: '30px',
            borderRadius: '8px',
            maxWidth: '500px',
            width: '90%',
            maxHeight: '90vh',
            overflow: 'auto'
          }}>
            <h3 style={{ marginTop: 0, marginBottom: '20px' }}>
              –ó–∞–ø–∏—Ç –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –∑–∞—è–≤–∫–∏ ‚Ññ{task.requestNumber}
            </h3>
            
            <form onSubmit={(e) => {
              e.preventDefault();
              e.stopPropagation();
              const formData = new FormData(e.target);
              console.log('[DEBUG] InvoiceRequestBlock - task.id:', task.id);
              const invoiceData = {
                taskId: task.id,
                requesterId: user.login,
                requesterName: user.name,
                companyDetails: {
                  companyName: formData.get('companyName'),
                  edrpou: formData.get('edrpou'),
                  address: formData.get('address'),
                  bankDetails: formData.get('bankDetails'),
                  comments: formData.get('comments')
                }
              };
              handleRequest(invoiceData);
              return false;
            }}>
              <div style={{ marginBottom: '15px' }}>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600', color: '#000' }}>
                  –ù–∞–∑–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—ó *
                </label>
                <input 
                  type="text" 
                  name="companyName" 
                  defaultValue={task.client || ''}
                  required 
                  style={{ width: '100%', padding: '8px', border: '1px solid #ddd', borderRadius: '4px', color: '#000', backgroundColor: '#fff' }}
                />
              </div>

              <div style={{ marginBottom: '15px' }}>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600', color: '#000' }}>
                  –Ñ–î–†–ü–û–£ *
                </label>
                <input 
                  type="text" 
                  name="edrpou" 
                  defaultValue={task.edrpou || ''}
                  required 
                  style={{ width: '100%', padding: '8px', border: '1px solid #ddd', borderRadius: '4px', color: '#000', backgroundColor: '#fff' }}
                />
              </div>

              <div style={{ marginBottom: '15px' }}>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600', color: '#000' }}>
                  –Æ—Ä–∏–¥–∏—á–Ω–∞ –∞–¥—Ä–µ—Å–∞ –∫–æ–º–ø–∞–Ω—ñ—ó
                </label>
                <textarea 
                  name="address" 
                  rows="3"
                  style={{ width: '100%', padding: '8px', border: '1px solid #ddd', borderRadius: '4px', color: '#000', backgroundColor: '#fff' }}
                  placeholder="–í–≤–µ–¥—ñ—Ç—å –ø–æ–≤–Ω—É —é—Ä–∏–¥–∏—á–Ω—É –∞–¥—Ä–µ—Å—É –∫–æ–º–ø–∞–Ω—ñ—ó"
                />
              </div>

              <div style={{ marginBottom: '15px' }}>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600', color: '#000' }}>
                  –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ —Ä–∞—Ö—É–Ω–∫—É –≤ –ø–∞–ø–µ—Ä–æ–≤–æ–º—É –≤–∏–≥–ª—è–¥—ñ
                </label>
                <textarea 
                  name="bankDetails" 
                  rows="3"
                  defaultValue={task.invoiceRecipientDetails || ''}
                  style={{ width: '100%', padding: '8px', border: '1px solid #ddd', borderRadius: '4px', color: '#000', backgroundColor: '#fff' }}
                  placeholder="–ü–Ü–ë, –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω, –º—ñ—Å—Ç–æ, –Ω–æ–º–µ—Ä –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è –ù–æ–≤–æ—ó –ü–æ—à—Ç–∏ —Ç–æ—â–æ"
                />
              </div>

              {/* –ß–µ–∫–±–æ–∫—Å–∏ –¥–ª—è –≤–∏–±–æ—Ä—É —Ç–∏–ø—É –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ */}
              <div style={{ marginBottom: '20px', padding: '16px', backgroundColor: '#f0f0f0', borderRadius: '8px', border: '2px solid #ccc' }}>
                <h4 style={{ margin: '0 0 16px 0', color: '#000', fontSize: '18px', fontWeight: 'bold' }}>–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤:</h4>
                
                <div style={{ display: 'flex', flexDirection: 'column', gap: '16px' }}>
                  <div style={{ display: 'flex', alignItems: 'center', gap: '12px', padding: '8px', backgroundColor: '#fff', borderRadius: '4px', border: '1px solid #ddd' }}>
                    <input
                      type="checkbox"
                      checked={needInvoice}
                      onChange={(e) => setNeedInvoice(e.target.checked)}
                      style={{ margin: 0, width: '20px', height: '20px' }}
                    />
                    <span style={{ fontSize: '16px', color: '#000', fontWeight: 'bold' }}>
                      üìÑ –ü–æ—Ç—Ä—ñ–±–µ–Ω —Ä–∞—Ö—É–Ω–æ–∫
                    </span>
                  </div>
                  
                  <div style={{ display: 'flex', alignItems: 'center', gap: '12px', padding: '8px', backgroundColor: '#fff', borderRadius: '4px', border: '1px solid #ddd' }}>
                    <input
                      type="checkbox"
                      checked={needAct}
                      onChange={(e) => setNeedAct(e.target.checked)}
                      style={{ margin: 0, width: '20px', height: '20px' }}
                    />
                    <span style={{ fontSize: '16px', color: '#000', fontWeight: 'bold' }}>
                      üìã –ü–æ—Ç—Ä—ñ–±–µ–Ω –∞–∫—Ç –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç
                    </span>
                  </div>
                </div>
              </div>

              <div style={{ marginBottom: '20px' }}>
                <label style={{ display: 'block', marginBottom: '5px', fontWeight: '600', color: '#000' }}>
                  –ö–æ–º–µ–Ω—Ç–∞—Ä—ñ
                </label>
                <textarea 
                  name="comments" 
                  rows="3"
                  style={{ width: '100%', padding: '8px', border: '1px solid #ddd', borderRadius: '4px', color: '#000', backgroundColor: '#fff' }}
                />
              </div>

              <div style={{ display: 'flex', gap: '10px', justifyContent: 'flex-end' }}>
                <button 
                  type="button" 
                  onClick={() => setShowModal(false)}
                  style={{
                    padding: '10px 20px',
                    backgroundColor: '#6c757d',
                    color: 'white',
                    border: 'none',
                    borderRadius: '4px',
                    cursor: 'pointer'
                  }}
                >
                  –°–∫–∞—Å—É–≤–∞—Ç–∏
                </button>
                <button 
                  type="button"
                  onClick={(e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    const form = e.target.closest('form');
                    const formData = new FormData(form);
                    console.log('[DEBUG] InvoiceRequestBlock (2) - task.id:', task.id);
                    const invoiceData = {
                      taskId: task.id,
                      requesterId: user.login,
                      requesterName: user.name,
                      companyDetails: {
                        companyName: formData.get('companyName'),
                        edrpou: formData.get('edrpou'),
                        address: formData.get('address'),
                        bankDetails: formData.get('bankDetails'),
                        comments: formData.get('comments')
                      }
                    };
                    handleRequest(invoiceData);
                  }}
                  style={{
                    padding: '10px 20px',
                    backgroundColor: '#28a745',
                    color: 'white',
                    border: 'none',
                    borderRadius: '4px',
                    cursor: 'pointer'
                  }}
                >
                  –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞–ø–∏—Ç
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </>
  );
};

export default InvoiceRequestBlock;
