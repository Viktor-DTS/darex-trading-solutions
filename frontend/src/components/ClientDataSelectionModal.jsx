import React, { useState, useEffect } from 'react';
import { getClientData, getEdrpouEquipmentTypes, getEdrpouEquipmentMaterials } from '../utils/edrpouAPI';

const ClientDataSelectionModal = ({ 
  open, 
  onClose, 
  onApply, 
  edrpou,
  currentFormData = {} 
}) => {
  const [clientData, setClientData] = useState(null);
  const [loading, setLoading] = useState(false);
  const [equipmentTypes, setEquipmentTypes] = useState([]);
  const [materials, setMaterials] = useState(null);
  const [selectedEquipmentType, setSelectedEquipmentType] = useState('');
  const [materialsLoading, setMaterialsLoading] = useState(false);
  const [selectedData, setSelectedData] = useState({
    client: { enabled: false, value: '' },
    address: { enabled: false, value: '' },
    invoiceRecipientDetails: { enabled: false, value: '' },
    contractFile: { enabled: false, value: null },
    materials: { enabled: false, value: null }
  });

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç–∞ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
  useEffect(() => {
    if (open && edrpou) {
      loadClientData();
      loadEquipmentTypes();
    }
  }, [open, edrpou]);

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –ø—Ä–∏ –∑–º—ñ–Ω—ñ —Ç–∏–ø—É –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è
  useEffect(() => {
    if (selectedEquipmentType && edrpou) {
      loadMaterials(selectedEquipmentType);
    }
  }, [selectedEquipmentType, edrpou]);

  const loadClientData = async () => {
    if (!edrpou) return;
    setLoading(true);
    try {
      const data = await getClientData(edrpou);
      setClientData(data);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–ø–æ–≤–Ω—é—î–º–æ –ø–æ–ª—è, —è–∫—â–æ —î —Ç—ñ–ª—å–∫–∏ –æ–¥–∏–Ω –≤–∞—Ä—ñ–∞–Ω—Ç
      const autoSelected = { ...selectedData };
      if (data.client) {
        autoSelected.client = { 
          enabled: true, 
          value: data.client
        };
      }
      if (data.address) {
        autoSelected.address = { 
          enabled: true, 
          value: data.address
        };
      }
      if (data.invoiceRecipientDetails) {
        autoSelected.invoiceRecipientDetails = { 
          enabled: true, 
          value: data.invoiceRecipientDetails
        };
      }
      if (data.contractFile) {
        autoSelected.contractFile = { 
          enabled: true, 
          value: data.contractFile
        };
      }
      setSelectedData(autoSelected);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç–∞:', error);
    } finally {
      setLoading(false);
    }
  };

  const loadEquipmentTypes = async () => {
    if (!edrpou) return;
    try {
      const types = await getEdrpouEquipmentTypes(edrpou);
      setEquipmentTypes(types);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è:', error);
    }
  };

  const loadMaterials = async (equipmentType) => {
    if (!edrpou || !equipmentType) return;
    setMaterialsLoading(true);
    try {
      const materialsData = await getEdrpouEquipmentMaterials(edrpou, equipmentType);
      setMaterials(materialsData);
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤:', error);
    } finally {
      setMaterialsLoading(false);
    }
  };

  const handleDataChange = (field, enabled, value) => {
    setSelectedData(prev => ({
      ...prev,
      [field]: {
        enabled,
        value: enabled ? value : prev[field].value
      }
    }));
  };

  const handleEquipmentTypeChange = (equipmentType) => {
    setSelectedEquipmentType(equipmentType);
  };

  const handleMaterialsChange = (enabled, materialsData) => {
    setSelectedData(prev => ({
      ...prev,
      materials: {
        enabled,
        value: materialsData
      }
    }));
  };

  const handleApply = () => {
    const formUpdates = {};
    
    if (selectedData.client.enabled) {
      formUpdates.client = selectedData.client.value;
    }
    if (selectedData.address.enabled) {
      formUpdates.address = selectedData.address.value;
    }
    if (selectedData.invoiceRecipientDetails.enabled) {
      formUpdates.invoiceRecipientDetails = selectedData.invoiceRecipientDetails.value;
    }
    if (selectedData.contractFile.enabled) {
      formUpdates.contractFile = selectedData.contractFile.value;
    }
    if (selectedData.materials.enabled && selectedData.materials.value) {
      formUpdates.materials = selectedData.materials.value;
    }
    
    onApply(formUpdates);
    onClose();
  };

  const handleCancel = () => {
    onClose();
  };

  if (!open) return null;

  return (
    <div className="modal-overlay">
      <div className="modal-content client-data-selection-modal">
        <div className="modal-header">
          <h3>–í–∏–±—ñ—Ä –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç–∞ –¥–ª—è –Ñ–î–†–ü–û–£: {edrpou}</h3>
          <button className="modal-close" onClick={handleCancel}>√ó</button>
        </div>
        <div className="modal-body">
          {loading ? (
            <div className="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç–∞...</div>
          ) : clientData ? (
            <div className="client-data-selection">
              {/* –ó–∞–º–æ–≤–Ω–∏–∫ */}
              <div className="data-section">
                <div className="data-header">
                  <label>
                    <input
                      type="checkbox"
                      checked={selectedData.client.enabled}
                      onChange={(e) => handleDataChange('client', e.target.checked, clientData.client)}
                    />
                    –ó–∞–º–æ–≤–Ω–∏–∫
                  </label>
                </div>
                {selectedData.client.enabled && (
                  <div className="data-fields">
                    <div className="field-group">
                      <label>–ù–∞–∑–≤–∞ –∫–ª—ñ—î–Ω—Ç–∞:</label>
                      <input
                        type="text"
                        value={selectedData.client.value}
                        onChange={(e) => handleDataChange('client', true, e.target.value)}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∫–ª—ñ—î–Ω—Ç–∞"
                      />
                    </div>
                  </div>
                )}
              </div>

              {/* –ê–¥—Ä–µ—Å–∞ */}
              <div className="data-section">
                <div className="data-header">
                  <label>
                    <input
                      type="checkbox"
                      checked={selectedData.address.enabled}
                      onChange={(e) => handleDataChange('address', e.target.checked, clientData.address)}
                    />
                    –ê–¥—Ä–µ—Å–∞
                  </label>
                </div>
                {selectedData.address.enabled && (
                  <div className="data-fields">
                    <div className="field-group">
                      <label>–ê–¥—Ä–µ—Å–∞:</label>
                      <textarea
                        value={selectedData.address.value}
                        onChange={(e) => handleDataChange('address', true, e.target.value)}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É"
                        rows={3}
                      />
                    </div>
                  </div>
                )}
              </div>

              {/* –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ —Ä–∞—Ö—É–Ω–∫—É */}
              <div className="data-section">
                <div className="data-header">
                  <label>
                    <input
                      type="checkbox"
                      checked={selectedData.invoiceRecipientDetails.enabled}
                      onChange={(e) => handleDataChange('invoiceRecipientDetails', e.target.checked, clientData.invoiceRecipientDetails)}
                    />
                    –†–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ —Ä–∞—Ö—É–Ω–∫—É
                  </label>
                </div>
                {selectedData.invoiceRecipientDetails.enabled && (
                  <div className="data-fields">
                    <div className="field-group">
                      <label>–†–µ–∫–≤—ñ–∑–∏—Ç–∏:</label>
                      <textarea
                        value={selectedData.invoiceRecipientDetails.value}
                        onChange={(e) => handleDataChange('invoiceRecipientDetails', true, e.target.value)}
                        placeholder="–í–≤–µ–¥—ñ—Ç—å —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ –æ—Ç—Ä–∏–º—É–≤–∞—á–∞ —Ä–∞—Ö—É–Ω–∫—É"
                        rows={4}
                      />
                    </div>
                  </div>
                )}
              </div>

              {/* –§–∞–π–ª –¥–æ–≥–æ–≤–æ—Ä—É */}
              <div className="data-section">
                <div className="data-header">
                  <label>
                    <input
                      type="checkbox"
                      checked={selectedData.contractFile.enabled}
                      onChange={(e) => handleDataChange('contractFile', e.target.checked, clientData.contractFile)}
                    />
                    –§–∞–π–ª –¥–æ–≥–æ–≤–æ—Ä—É
                  </label>
                </div>
                {selectedData.contractFile.enabled && clientData.contractFile && (
                  <div className="data-fields">
                    <div className="field-group">
                      <label>–§–∞–π–ª –¥–æ–≥–æ–≤–æ—Ä—É:</label>
                      <div style={{ 
                        padding: '8px 12px',
                        backgroundColor: '#e8f5e8',
                        border: '1px solid #4caf50',
                        borderRadius: '4px',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'space-between'
                      }}>
                        <span style={{ color: '#2e7d32' }}>
                          üìÑ {clientData.contractFile.split('/').pop() || 'contract.pdf'}
                        </span>
                        <div style={{ display: 'flex', gap: '8px' }}>
                          <button
                            type="button"
                            onClick={() => window.open(clientData.contractFile, '_blank')}
                            style={{
                              background: '#2196f3',
                              color: 'white',
                              border: 'none',
                              borderRadius: '4px',
                              padding: '4px 8px',
                              cursor: 'pointer',
                              fontSize: '12px'
                            }}
                          >
                            üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                          </button>
                          <button
                            type="button"
                            onClick={() => {
                              const link = document.createElement('a');
                              link.href = clientData.contractFile;
                              link.download = clientData.contractFile.split('/').pop() || 'contract.pdf';
                              document.body.appendChild(link);
                              link.click();
                              document.body.removeChild(link);
                            }}
                            style={{
                              background: '#4caf50',
                              color: 'white',
                              border: 'none',
                              borderRadius: '4px',
                              padding: '4px 8px',
                              cursor: 'pointer',
                              fontSize: '12px'
                            }}
                          >
                            ‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                )}
              </div>

              {/* –ê–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –ø–æ –Ñ–î–†–ü–û–£ */}
              <div className="data-section">
                <div className="data-header">
                  <label>
                    <input
                      type="checkbox"
                      checked={selectedData.materials.enabled}
                      onChange={(e) => handleMaterialsChange(e.target.checked, materials)}
                    />
                    –ê–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤
                  </label>
                </div>
                {selectedData.materials.enabled && (
                  <div className="data-fields">
                    {/* –í–∏–±—ñ—Ä —Ç–∏–ø—É –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è */}
                    <div className="field-group">
                      <label>–¢–∏–ø –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–ª—è —Ü—å–æ–≥–æ –Ñ–î–†–ü–û–£:</label>
                      <select
                        value={selectedEquipmentType}
                        onChange={(e) => handleEquipmentTypeChange(e.target.value)}
                        style={{
                          width: '100%',
                          padding: '8px 12px',
                          border: '1px solid #ddd',
                          borderRadius: '4px',
                          fontSize: '14px'
                        }}
                      >
                        <option value="">–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è</option>
                        {equipmentTypes.map((type, index) => (
                          <option key={index} value={type}>
                            {type}
                          </option>
                        ))}
                      </select>
                    </div>

                    {/* –ú–∞—Ç–µ—Ä—ñ–∞–ª–∏ */}
                    {selectedEquipmentType && (
                      <div className="field-group">
                        <div style={{ marginTop: '10px' }}>
                          {materialsLoading ? (
                            <div className="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤...</div>
                          ) : materials ? (
                            <div style={{ 
                              border: '1px solid #ddd', 
                              borderRadius: '4px', 
                              padding: '10px',
                              backgroundColor: '#f9f9f9'
                            }}>
                              <h4 style={{ margin: '0 0 10px 0', fontSize: '14px' }}>–î–æ—Å—Ç—É–ø–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ –¥–ª—è –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è:</h4>
                              
                              {/* –û–ª–∏–≤–∞ */}
                              {materials.oil && (materials.oil.types.length > 0 || materials.oil.quantities.length > 0) && (
                                <div style={{ marginBottom: '8px' }}>
                                  <strong>üõ¢Ô∏è –û–ª–∏–≤–∞:</strong>
                                  {materials.oil.types.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –¢–∏–ø–∏: {materials.oil.types.join(', ')}
                                    </div>
                                  )}
                                  {materials.oil.quantities.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ö—ñ–ª—å–∫–æ—Å—Ç—ñ: {materials.oil.quantities.join(', ')}
                                    </div>
                                  )}
                                </div>
                              )}

                              {/* –ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä */}
                              {materials.oilFilter && (materials.oilFilter.names.length > 0 || materials.oilFilter.quantities.length > 0) && (
                                <div style={{ marginBottom: '8px' }}>
                                  <strong>üîß –ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä:</strong>
                                  {materials.oilFilter.names.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ù–∞–∑–≤–∏: {materials.oilFilter.names.join(', ')}
                                    </div>
                                  )}
                                  {materials.oilFilter.quantities.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ö—ñ–ª—å–∫–æ—Å—Ç—ñ: {materials.oilFilter.quantities.join(', ')}
                                    </div>
                                  )}
                                </div>
                              )}

                              {/* –ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä */}
                              {materials.fuelFilter && (materials.fuelFilter.names.length > 0 || materials.fuelFilter.quantities.length > 0) && (
                                <div style={{ marginBottom: '8px' }}>
                                  <strong>‚õΩ –ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä:</strong>
                                  {materials.fuelFilter.names.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ù–∞–∑–≤–∏: {materials.fuelFilter.names.join(', ')}
                                    </div>
                                  )}
                                  {materials.fuelFilter.quantities.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ö—ñ–ª—å–∫–æ—Å—Ç—ñ: {materials.fuelFilter.quantities.join(', ')}
                                    </div>
                                  )}
                                </div>
                              )}

                              {/* –ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä */}
                              {materials.airFilter && (materials.airFilter.names.length > 0 || materials.airFilter.quantities.length > 0) && (
                                <div style={{ marginBottom: '8px' }}>
                                  <strong>üí® –ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä:</strong>
                                  {materials.airFilter.names.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ù–∞–∑–≤–∏: {materials.airFilter.names.join(', ')}
                                    </div>
                                  )}
                                  {materials.airFilter.quantities.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ö—ñ–ª—å–∫–æ—Å—Ç—ñ: {materials.airFilter.quantities.join(', ')}
                                    </div>
                                  )}
                                </div>
                              )}

                              {/* –ê–Ω—Ç–∏—Ñ—Ä–∏–∑ */}
                              {materials.antifreeze && (materials.antifreeze.types.length > 0 || materials.antifreeze.quantities.length > 0) && (
                                <div style={{ marginBottom: '8px' }}>
                                  <strong>üßä –ê–Ω—Ç–∏—Ñ—Ä–∏–∑:</strong>
                                  {materials.antifreeze.types.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –¢–∏–ø–∏: {materials.antifreeze.types.join(', ')}
                                    </div>
                                  )}
                                  {materials.antifreeze.quantities.length > 0 && (
                                    <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                      –ö—ñ–ª—å–∫–æ—Å—Ç—ñ: {materials.antifreeze.quantities.join(', ')}
                                    </div>
                                  )}
                                </div>
                              )}

                              {/* –Ü–Ω—à—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ */}
                              {materials.otherMaterials && materials.otherMaterials.length > 0 && (
                                <div style={{ marginBottom: '8px' }}>
                                  <strong>üì¶ –Ü–Ω—à—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏:</strong>
                                  <div style={{ marginLeft: '15px', fontSize: '12px' }}>
                                    {materials.otherMaterials.join(', ')}
                                  </div>
                                </div>
                              )}

                              {Object.values(materials).every(m => 
                                !m || (Array.isArray(m) ? m.length === 0 : 
                                  (m.types && m.types.length === 0 && m.quantities && m.quantities.length === 0) ||
                                  (m.names && m.names.length === 0 && m.quantities && m.quantities.length === 0))
                              ) && (
                                <div style={{ color: '#666', fontStyle: 'italic' }}>
                                  –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è —Ü—å–æ–≥–æ —Ç–∏–ø—É –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è
                                </div>
                              )}
                            </div>
                          ) : (
                            <div style={{ color: '#666', fontStyle: 'italic' }}>
                              –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è —Ü—å–æ–≥–æ —Ç–∏–ø—É –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è
                            </div>
                          )}
                        </div>
                      </div>
                    )}
                  </div>
                )}
              </div>
            </div>
          ) : (
            <div className="error">–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞</div>
          )}
        </div>
        <div className="modal-footer">
          <button className="btn btn-secondary" onClick={handleCancel}>
            –°–∫–∞—Å—É–≤–∞—Ç–∏
          </button>
          <button className="btn btn-primary" onClick={handleApply}>
            –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏
          </button>
        </div>
      </div>
    </div>
  );
};

export default ClientDataSelectionModal;
