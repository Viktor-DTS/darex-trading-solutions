import React, { useState, useEffect } from 'react';
import { useTranslation } from 'react-i18next';
import API_BASE_URL from '../config.js';
import { tasksAPI } from '../utils/tasksAPI';
import './MobileViewArea.css';

export default function MobileViewArea({ user }) {
  const { t } = useTranslation();
  const [tasks, setTasks] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedTask, setSelectedTask] = useState(null);
  const [showTaskModal, setShowTaskModal] = useState(false);
  const [uploadingFiles, setUploadingFiles] = useState(false);
  const [taskFiles, setTaskFiles] = useState({}); // –§–∞–π–ª–∏ –¥–ª—è –∫–æ–∂–Ω–æ—ó –∑–∞—è–≤–∫–∏
  const [loadingFiles, setLoadingFiles] = useState({}); // –°—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
  const [fileDescription, setFileDescription] = useState(''); // –û–ø–∏—Å –¥–ª—è —Ñ–∞–π–ª—ñ–≤
  const [selectedFiles, setSelectedFiles] = useState(null); // –û–±—Ä–∞–Ω—ñ —Ñ–∞–π–ª–∏
  const [filePhotoType, setFilePhotoType] = useState('document'); // –¢–∏–ø —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –ø—Ä–∏—Å—Ç—Ä–æ—é
  const [activeTab, setActiveTab] = useState('pending'); // –ê–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞: pending, confirmed, completed

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏, —á–∏ –ø–æ–ª–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–µ
  const isFieldFilled = (value) => {
    return value !== null && value !== undefined && value !== '' && 
           (typeof value !== 'string' || value.trim() !== '') &&
           (Array.isArray(value) ? value.length > 0 : true);
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏—Ö–æ–¥—É –∑ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É
  const handleLogout = () => {
    if (window.confirm('–í–∏–π—Ç–∏ –∑ –º–æ–±—ñ–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É?')) {
      window.location.reload();
    }
  };

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞—è–≤–æ–∫
  useEffect(() => {
    const loadTasks = async () => {
      try {
        setLoading(true);
        console.log('–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞—è–≤–æ–∫...');
        const tasksData = await tasksAPI.getAll();
        console.log('–û—Ç—Ä–∏–º–∞–Ω—ñ –∑–∞—è–≤–∫–∏:', tasksData);
        setTasks(tasksData);
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞—è–≤–æ–∫:', error);
      } finally {
        setLoading(false);
      }
    };

    loadTasks();
  }, []);

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∑–∞—è–≤–∫—É
  const openTaskInfo = (task) => {
    setSelectedTask(task);
    setShowTaskModal(true);
    // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª–∏ –¥–ª—è —Ü—ñ—î—ó –∑–∞—è–≤–∫–∏
    loadTaskFiles(task.id);
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∑–∞—è–≤–∫–∏
  const loadTaskFiles = async (taskId) => {
    try {
      setLoadingFiles(prev => ({ ...prev, [taskId]: true }));
      const response = await fetch(`${API_BASE_URL}/files/task/${taskId}`);
      if (response.ok) {
        const files = await response.json();
        setTaskFiles(prev => ({ ...prev, [taskId]: files }));
      } else {
        setTaskFiles(prev => ({ ...prev, [taskId]: [] }));
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤:', error);
      setTaskFiles(prev => ({ ...prev, [taskId]: [] }));
    } finally {
      setLoadingFiles(prev => ({ ...prev, [taskId]: false }));
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Ñ–∞–π–ª—É
  const viewFile = (file) => {
    if (file.cloudinaryUrl) {
      window.open(file.cloudinaryUrl, '_blank');
    } else {
      alert('URL —Ñ–∞–π–ª—É –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É
  const deleteFile = async (fileId, taskId) => {
    if (!window.confirm('–í–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π —Ñ–∞–π–ª?')) return;

    try {
      const response = await fetch(`${API_BASE_URL}/files/${fileId}`, {
        method: 'DELETE',
      });

      if (response.ok) {
        alert('–§–∞–π–ª –≤–∏–¥–∞–ª–µ–Ω–æ!');
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤
        await loadTaskFiles(taskId);
      } else {
        alert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É');
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—É');
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤
  const handleFileUpload = async (files, taskId, description = '') => {
    if (!files || files.length === 0) return;

    setUploadingFiles(true);
    const formData = new FormData();
    formData.append('taskId', taskId);
    formData.append('description', description);
    
    for (let i = 0; i < files.length; i++) {
      formData.append('files', files[i]);
    }

    try {
      const response = await fetch(`${API_BASE_URL}/files/upload/${taskId}`, {
        method: 'POST',
        body: formData,
      });

      if (response.ok) {
        alert('–§–∞–π–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!');
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è —Ü—ñ—î—ó –∑–∞—è–≤–∫–∏
        await loadTaskFiles(taskId);
      } else {
        alert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤');
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤');
    } finally {
      setUploadingFiles(false);
    }
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –≤–∏–±–æ—Ä—É —Ñ–∞–π–ª—ñ–≤ –∑ –ø—Ä–∏—Å—Ç—Ä–æ—é
  const handleFileSelect = (files) => {
    setSelectedFiles(files);
    setFileDescription('');
    setFilePhotoType('document'); // –°–∫–∏–¥–∞—î–º–æ —Ç–∏–ø —Ñ–æ—Ç–æ –ø—Ä–∏ –≤–∏–±–æ—Ä—ñ –∑ –≥–∞–ª–µ—Ä–µ—ó
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
  const handleUploadSelectedFiles = async () => {
    if (!selectedFiles || selectedFiles.length === 0) return;
    
    // –î–æ–¥–∞—î–º–æ —Ç–∏–ø —Ñ–æ—Ç–æ –¥–æ –æ–ø–∏—Å—É
    const photoTypeLabels = {
      'document': 'üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç',
      'details': 'üîß –§–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π',
      'equipment': '‚öôÔ∏è –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è'
    };
    
    const fullDescription = fileDescription ? 
      `${photoTypeLabels[filePhotoType]} - ${fileDescription}` : 
      photoTypeLabels[filePhotoType];
    
    await handleFileUpload(selectedFiles, selectedTask.id, fullDescription);
    setSelectedFiles(null);
    setFileDescription('');
    setFilePhotoType('document');
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –∑–∞—è–≤–æ–∫ –ø–æ —Å—Ç–∞—Ç—É—Å—É —Ç–∞ —Ä–µ–≥—ñ–æ–Ω—É
  const getFilteredTasks = () => {
    let filteredTasks;
    
    // –°–ø–æ—á–∞—Ç–∫—É —Ñ—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ —Å—Ç–∞—Ç—É—Å—É
    switch (activeTab) {
      case 'pending':
        // –ù–µ–≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞—è–≤–∫–∏: "–ó–∞—è–≤–∫–∞" (–Ω–æ–≤—ñ –∑–∞—è–≤–∫–∏)
        filteredTasks = tasks.filter(task => task.status === '–ó–∞—è–≤–∫–∞');
        break;
      case 'confirmed':
        // –ó–∞—è–≤–∫–∏ –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—ñ: "–í —Ä–æ–±–æ—Ç—ñ" (–∑–∞—è–≤–∫–∏ –≤ –ø—Ä–æ—Ü–µ—Å—ñ)
        filteredTasks = tasks.filter(task => task.status === '–í —Ä–æ–±–æ—Ç—ñ');
        break;
      case 'completed':
        // –í–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞—è–≤–∫–∏: "–í–∏–∫–æ–Ω–∞–Ω–æ"
        filteredTasks = tasks.filter(task => task.status === '–í–∏–∫–æ–Ω–∞–Ω–æ');
        break;
      case 'all':
        filteredTasks = tasks;
        break;
      default:
        filteredTasks = tasks;
    }
    
    // –¢–µ–ø–µ—Ä —Ñ—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ —Ä–µ–≥—ñ–æ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if (user && user.region) {
      // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑ —Ä–µ–≥—ñ–æ–Ω—É "–£–∫—Ä–∞—ó–Ω–∞", –ø–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ –∑–∞—è–≤–∫–∏
      if (user.region === '–£–∫—Ä–∞—ó–Ω–∞') {
        return filteredTasks;
      } else {
        // –Ü–Ω–∞–∫—à–µ –ø–æ–∫–∞–∑—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –∑–∞—è–≤–∫–∏ –∑ —Ä–µ–≥—ñ–æ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        filteredTasks = filteredTasks.filter(task => {
          // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ–ª–µ serviceRegion –∞–±–æ region –≤ –∑–∞—è–≤—Ü—ñ
          const taskRegion = task.serviceRegion || task.region;
          return taskRegion === user.region;
        });
      }
    }
    
    return filteredTasks;
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å–∫–∏–¥–∞–Ω–Ω—è –¥–æ–∑–≤–æ–ª—É –Ω–∞ –∫–∞–º–µ—Ä—É
  const resetCameraPermission = () => {
    localStorage.removeItem('cameraPermission');
    alert('–î–æ–∑–≤—ñ–ª –Ω–∞ –∫–∞–º–µ—Ä—É —Å–∫–∏–Ω—É—Ç–æ. –ü—Ä–∏ –Ω–∞—Å—Ç—É–ø–Ω–æ–º—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ –∫–∞–º–µ—Ä–∏ –¥–æ–∑–≤—ñ–ª –±—É–¥–µ –∑–∞–ø–∏—Ç—É–≤–∞—Ç–∏—Å—è –∑–Ω–æ–≤—É.');
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≥—Ä—É–ø—É–≤–∞–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –ø–æ —Ç–∏–ø—É —Ç–∞ —á–∞—Å—É
  const groupFilesByTypeAndTime = (files) => {
    const groups = {};
    
    files.forEach(file => {
      // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ñ–∞–π–ª—É –∑ –æ–ø–∏—Å—É
      let fileType = '–Ü–Ω—à—ñ —Ñ–∞–π–ª–∏';
      if (file.description) {
        if (file.description.includes('üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç')) {
          fileType = 'üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç';
        } else if (file.description.includes('üîß –§–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π')) {
          fileType = 'üîß –§–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π';
        } else if (file.description.includes('‚öôÔ∏è –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è')) {
          fileType = '‚öôÔ∏è –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è';
        }
      }
      
      // –ì—Ä—É–ø—É—î–º–æ –ø–æ —Ç–∏–ø—É
      if (!groups[fileType]) {
        groups[fileType] = [];
      }
      groups[fileType].push(file);
    });
    
    // –°–æ—Ä—Ç—É—î–º–æ —Ñ–∞–π–ª–∏ –≤ –∫–æ–∂–Ω—ñ–π –≥—Ä—É–ø—ñ –ø–æ —á–∞—Å—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è (–Ω–æ–≤—ñ—à—ñ —Å–ø–æ—á–∞—Ç–∫—É)
    Object.keys(groups).forEach(type => {
      groups[type].sort((a, b) => new Date(b.uploadDate) - new Date(a.uploadDate));
    });
    
    return groups;
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–æ–∫–∞–∑—É –ø—Ä–µ–≤—å—é —Ñ–æ—Ç–æ
  const showPhotoPreview = (canvas, taskId, description, photoType, currentStream, cameraModal) => {
    // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –ø—Ä–µ–≤—å—é
    const previewModal = document.createElement('div');
    previewModal.style.cssText = `
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.9);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      z-index: 3000;
      padding: 20px;
    `;

    // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–ª—è –ø—Ä–µ–≤—å—é
    const previewImage = document.createElement('img');
    previewImage.style.cssText = `
      max-width: 100%;
      max-height: 60vh;
      border-radius: 8px;
      box-shadow: 0 4px 20px rgba(0,0,0,0.5);
    `;
    previewImage.src = canvas.toDataURL('image/jpeg', 0.8);

    // –°—Ç–≤–æ—Ä—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ñ–æ—Ç–æ
    const photoInfo = document.createElement('div');
    photoInfo.style.cssText = `
      color: #fff;
      font-size: 16px;
      margin: 20px 0;
      text-align: center;
      max-width: 400px;
    `;
    
    const photoTypeLabels = {
      'document': 'üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç',
      'details': 'üîß –§–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π',
      'equipment': '‚öôÔ∏è –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è'
    };
    
    photoInfo.innerHTML = `
      <div style="margin-bottom: 10px;">
        <strong>–¢–∏–ø:</strong> ${photoTypeLabels[photoType] || 'üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç'}
      </div>
      ${description ? `<div style="margin-bottom: 10px;"><strong>–û–ø–∏—Å:</strong> ${description}</div>` : ''}
      <div style="font-size: 14px; opacity: 0.8;">
        –†–æ–∑–º—ñ—Ä: ${canvas.width} √ó ${canvas.height} –ø—ñ–∫—Å–µ–ª—ñ–≤
      </div>
    `;

    // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏
    const buttonContainer = document.createElement('div');
    buttonContainer.style.cssText = `
      display: flex;
      gap: 12px;
      margin-top: 20px;
      flex-wrap: wrap;
      justify-content: center;
      align-items: center;
      max-width: 100%;
    `;

    const confirmButton = document.createElement('button');
    confirmButton.textContent = '‚úÖ –ó–±–µ—Ä–µ–≥—Ç–∏ —Ñ–æ—Ç–æ';
    confirmButton.style.cssText = `
      background: #28a745;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 12px 24px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      min-width: 140px;
    `;

    const retakeButton = document.createElement('button');
    retakeButton.textContent = 'üîÑ –ü–µ—Ä–µ—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—É–≤–∞—Ç–∏';
    retakeButton.style.cssText = `
      background: #007bff;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 12px 24px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      min-width: 140px;
    `;

    const cancelButton = document.createElement('button');
    cancelButton.textContent = '‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏';
    cancelButton.style.cssText = `
      background: #dc3545;
      color: #fff;
      border: none;
      border-radius: 8px;
      padding: 12px 24px;
      font-size: 16px;
      font-weight: 500;
      cursor: pointer;
      min-width: 140px;
    `;

    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
    confirmButton.onclick = async () => {
      try {
        // –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ blob —ñ –∑–±–µ—Ä—ñ–≥–∞—î–º–æ
        canvas.toBlob(async (blob) => {
          const fileName = `${photoType}_${Date.now()}.jpg`;
          const file = new File([blob], fileName, { type: 'image/jpeg' });
          
          // –î–æ–¥–∞—î–º–æ —Ç–∏–ø —Ñ–æ—Ç–æ –¥–æ –æ–ø–∏—Å—É
          const fullDescription = description ? 
            `${photoTypeLabels[photoType]} - ${description}` : 
            photoTypeLabels[photoType];
          
          await handleFileUpload([file], taskId, fullDescription);
          
          // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –ø—Ä–µ–≤—å—é —ñ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –∫–∞–º–µ—Ä–∏
          document.body.removeChild(previewModal);
          
          // –ù–ï –∑—É–ø–∏–Ω—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –ø–æ—Ç—ñ–∫ —ñ –ù–ï —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π
          // –ü—Ä–æ—Å—Ç–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ —ñ—Å–Ω—É—é—á–æ–≥–æ –≤—ñ–¥–µ–æ
          const video = cameraModal.querySelector('video');
          if (video && currentStream) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ—Ç—ñ–∫ —â–µ –∞–∫—Ç–∏–≤–Ω–∏–π
            if (currentStream.active) {
              video.srcObject = currentStream;
            } else {
              // –Ø–∫—â–æ –ø–æ—Ç—ñ–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –∑ —Ç—ñ—î—é –∂ –∫–∞–º–µ—Ä–æ—é
              try {
                const newStream = await navigator.mediaDevices.getUserMedia({
                  video: true,
                  audio: false
                });
                video.srcObject = newStream;
              } catch (error) {
                console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–æ—Ç–æ–∫—É –∫–∞–º–µ—Ä–∏:', error);
              }
            }
          }
          
          // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–æ–ª—ñ–≤
          const descriptionInput = cameraModal.querySelector('#photo-description');
          const photoTypeSelect = cameraModal.querySelector('#photo-type');
          if (descriptionInput) descriptionInput.value = description;
          if (photoTypeSelect) photoTypeSelect.value = photoType;
          
        }, 'image/jpeg');
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ:', error);
        alert('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ');
      }
    };

    retakeButton.onclick = () => {
      document.body.removeChild(previewModal);
    };

    cancelButton.onclick = () => {
      document.body.removeChild(previewModal);
      if (currentStream) {
        currentStream.getTracks().forEach(track => track.stop());
      }
      document.body.removeChild(cameraModal);
    };

    // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏
    buttonContainer.appendChild(confirmButton);
    buttonContainer.appendChild(retakeButton);
    buttonContainer.appendChild(cancelButton);
    
    previewModal.appendChild(previewImage);
    previewModal.appendChild(photoInfo);
    previewModal.appendChild(buttonContainer);
    
    document.body.appendChild(previewModal);
  };

  // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –∫–∞–º–µ—Ä–∏
  const handleCameraCapture = async (taskId) => {
    console.log('=== –ü–û–ß–ê–¢–û–ö handleCameraCapture ===');
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É API –∫–∞–º–µ—Ä–∏
    if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {
      console.error('–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î getUserMedia');
      alert('–í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Å—É—á–∞—Å–Ω–∏–π –±—Ä–∞—É–∑–µ—Ä (Chrome, Firefox, Safari).');
      return;
    }

    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø—Ä–∞—Ü—é—î —á–µ—Ä–µ–∑ HTTPS (–Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–ª—è –∫–∞–º–µ—Ä–∏)
    if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {
      console.error('–ù–µ HTTPS –∑\'—î–¥–Ω–∞–Ω–Ω—è');
      alert('–î–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏ –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ —á–µ—Ä–µ–∑ HTTPS –∞–±–æ –Ω–∞ localhost. –ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ –±–µ–∑–ø–µ—á–Ω–µ –∑\'—î–¥–Ω–∞–Ω–Ω—è.');
      return;
    }

    // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    console.log('–í–∏—è–≤–ª–µ–Ω–æ –º–æ–±—ñ–ª—å–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π:', isMobile);
    console.log('User Agent:', navigator.userAgent);
    
    if (isMobile) {
      console.log('–í–∏—è–≤–ª–µ–Ω–æ –º–æ–±—ñ–ª—å–Ω–∏–π –ø—Ä–∏—Å—Ç—Ä—ñ–π, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–∞–º–µ—Ä–∏');
    }

    try {
      console.log('–°–ø—Ä–æ–±–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤...');
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —î –∑–±–µ—Ä–µ–∂–µ–Ω–∏–π –¥–æ–∑–≤—ñ–ª
      const hasCameraPermission = localStorage.getItem('cameraPermission');
      console.log('–ó–±–µ—Ä–µ–∂–µ–Ω–∏–π –¥–æ–∑–≤—ñ–ª –Ω–∞ –∫–∞–º–µ—Ä—É:', hasCameraPermission);
      
      if (hasCameraPermission === 'denied') {
        // –Ø–∫—â–æ –¥–æ–∑–≤—ñ–ª –±—É–≤ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∏–π, –ø–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        console.log('–î–æ–∑–≤—ñ–ª –Ω–∞ –∫–∞–º–µ—Ä—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–∏–π');
        alert('–î–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏ –±—É–≤ –≤—ñ–¥—Ö–∏–ª–µ–Ω–∏–π. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å "–°–∫–∏–Ω—É—Ç–∏ –¥–æ–∑–≤—ñ–ª –∫–∞–º–µ—Ä–∏" —Ç–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É.');
        return;
      }
      
      // –°–ø–æ—á–∞—Ç–∫—É –æ—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–∞–º–µ—Ä
      const devices = await navigator.mediaDevices.enumerateDevices();
      console.log('–í—Å—ñ –ø—Ä–∏—Å—Ç—Ä–æ—ó:', devices);
      
      const videoDevices = devices.filter(device => device.kind === 'videoinput');
      console.log('–í—ñ–¥–µ–æ –ø—Ä–∏—Å—Ç—Ä–æ—ó:', videoDevices);
      
      // –õ–æ–≥—É—î–º–æ –≤—Å—ñ –∑–Ω–∞–π–¥–µ–Ω—ñ –∫–∞–º–µ—Ä–∏ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
      console.log('–í—Å—ñ –∑–Ω–∞–π–¥–µ–Ω—ñ –∫–∞–º–µ—Ä–∏:', videoDevices.map((device, index) => 
        `${index + 1}. ${device.label || '–ë–µ–∑ –Ω–∞–∑–≤–∏'} (${device.deviceId.substring(0, 8)}...)`
      ));
      
      if (videoDevices.length === 0) {
        console.error('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ—ó –∫–∞–º–µ—Ä–∏');
        alert('–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ—ó –∫–∞–º–µ—Ä–∏ –Ω–∞ –ø—Ä–∏—Å—Ç—Ä–æ—ó.');
        return;
      }
      
      // –î–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤ —Å–ø—Ä–æ—â—É—î–º–æ –ª–æ–≥—ñ–∫—É - –±–µ—Ä–µ–º–æ –ø–µ—Ä—à—É –∫–∞–º–µ—Ä—É
      let selectedCamera = null;
      
      if (isMobile) {
        // –ù–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö –±–µ—Ä–µ–º–æ –ø–µ—Ä—à—É –∫–∞–º–µ—Ä—É (–∑–∞–∑–≤–∏—á–∞–π —Ü–µ –∑–∞–¥–Ω—è)
        selectedCamera = videoDevices[0];
        console.log('–ù–∞ –º–æ–±—ñ–ª—å–Ω–æ–º—É –ø—Ä–∏—Å—Ç—Ä–æ—ó –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–µ—Ä—à—É –∫–∞–º–µ—Ä—É:', selectedCamera.label);
      } else {
        // –ù–∞ –¥–µ—Å–∫—Ç–æ–ø—ñ —à—É–∫–∞—î–º–æ –∑–∞–¥–Ω—é –∫–∞–º–µ—Ä—É
        selectedCamera = videoDevices.find(device => {
          const label = device.label.toLowerCase();
          return label.includes('back') || 
                 label.includes('rear') || 
                 label.includes('–∑–∞–¥–Ω—è') ||
                 label.includes('–æ—Å–Ω–æ–≤–Ω–∞') ||
                 label.includes('main') ||
                 label.includes('primary');
        });
        
        if (!selectedCamera) {
          selectedCamera = videoDevices[0];
          console.log('–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–µ—Ä—à—É –¥–æ—Å—Ç—É–ø–Ω—É –∫–∞–º–µ—Ä—É:', selectedCamera.label);
        }
      }
      
      console.log('–û–±—Ä–∞–Ω–∞ –∫–∞–º–µ—Ä–∞:', selectedCamera.label);
      
      // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Ç—ñ–∫ –∑ –æ–±—Ä–∞–Ω–æ—é –∫–∞–º–µ—Ä–æ—é
      console.log('–°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ç–æ–∫—É –∑ –∫–∞–º–µ—Ä–æ—é...');
      let initialStream;
      
      try {
        // –°–ø–æ—á–∞—Ç–∫—É –ø—Ä–æ–±—É—î–º–æ –∑ —Ç–æ—á–Ω–∏–º deviceId
        initialStream = await navigator.mediaDevices.getUserMedia({
          video: {
            deviceId: { exact: selectedCamera.deviceId }
          },
          audio: false
        });
        console.log('–£—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø–æ—Ç—ñ–∫ –∑ —Ç–æ—á–Ω–∏–º deviceId');
      } catch (error) {
        console.log('–ü–æ–º–∏–ª–∫–∞ –∑ —Ç–æ—á–Ω–∏–º deviceId:', error.name);
        
        try {
          // –ü—Ä–æ–±—É—î–º–æ –±–µ–∑ —Ç–æ—á–Ω–æ–≥–æ deviceId
          initialStream = await navigator.mediaDevices.getUserMedia({
            video: {
              deviceId: selectedCamera.deviceId
            },
            audio: false
          });
          console.log('–£—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø–æ—Ç—ñ–∫ –±–µ–∑ —Ç–æ—á–Ω–æ–≥–æ deviceId');
        } catch (error2) {
          console.log('–ü–æ–º–∏–ª–∫–∞ –±–µ–∑ —Ç–æ—á–Ω–æ–≥–æ deviceId:', error2.name);
          
          try {
            // –ü—Ä–æ–±—É—î–º–æ –∑ –±–∞–∑–æ–≤–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
            initialStream = await navigator.mediaDevices.getUserMedia({
              video: true,
              audio: false
            });
            console.log('–£—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ –ø–æ—Ç—ñ–∫ –∑ –±–∞–∑–æ–≤–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏');
          } catch (error3) {
            console.error('–í—Å—ñ —Å–ø—Ä–æ–±–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ç–æ–∫—É –Ω–µ–≤–¥–∞–ª—ñ:', error3);
            throw error3;
          }
        }
      }
      
      // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –¥–æ–∑–≤—ñ–ª, —è–∫—â–æ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–∏–ª–∏ –ø–æ—Ç—ñ–∫
      if (initialStream) {
        localStorage.setItem('cameraPermission', 'granted');
        console.log('–î–æ–∑–≤—ñ–ª –Ω–∞ –∫–∞–º–µ—Ä—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ');
      }
      
      let currentStream = initialStream;
      let currentDeviceIndex = 0;

      // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ç–æ–∫—É –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–∞–º–µ—Ä–∏
      const createStream = async (deviceIndex = 0) => {
        if (currentStream) {
          currentStream.getTracks().forEach(track => track.stop());
        }
        
        try {
          currentStream = await navigator.mediaDevices.getUserMedia({ 
            video: true, 
            audio: false 
          });
          return currentStream;
        } catch (error) {
          console.error('–ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Ç–æ–∫—É –¥–ª—è –∫–∞–º–µ—Ä–∏:', error);
          // –Ø–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Ç—ñ–∫ –∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—é –∫–∞–º–µ—Ä–æ—é, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞–≥–∞–ª—å–Ω–∏–π
          currentStream = await navigator.mediaDevices.getUserMedia({ 
            video: true, 
            audio: false 
          });
          return currentStream;
        }
      };

      // –°—Ç–≤–æ—Ä—é—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –∫–∞–º–µ—Ä–∏
      const cameraModal = document.createElement('div');
      cameraModal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.9);
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        z-index: 2000;
        padding: 16px;
      `;

      // –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–µ–æ –µ–ª–µ–º–µ–Ω—Ç
      const video = document.createElement('video');
      video.style.cssText = `
        max-width: 100%;
        max-height: 50vh;
        border-radius: 8px;
        background: #000;
        box-shadow: 0 4px 20px rgba(0,0,0,0.5);
      `;
      video.srcObject = currentStream;
      video.autoplay = true;
      video.playsInline = true;

      // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è –≤—ñ–¥–µ–æ
      video.onerror = (error) => {
        console.error('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–µ–æ:', error);
        alert('–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–µ–æ –∑ –∫–∞–º–µ—Ä–∏');
      };

      // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫–∏
      const buttonContainer = document.createElement('div');
      buttonContainer.style.cssText = `
        display: flex;
        gap: 12px;
        margin-top: 12px;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        max-width: 100%;
      `;

      const captureButton = document.createElement('button');
      captureButton.textContent = 'üì∑ –ó—Ä–æ–±–∏—Ç–∏ —Ñ–æ—Ç–æ';
      captureButton.style.cssText = `
        background: #28a745;
        color: #fff;
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        min-width: 120px;
        flex: 1;
        max-width: 150px;
      `;

      const cancelButton = document.createElement('button');
      cancelButton.textContent = '‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏';
      cancelButton.style.cssText = `
        background: #dc3545;
        color: #fff;
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        min-width: 120px;
        flex: 1;
        max-width: 150px;
      `;

      // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–∏–±–æ—Ä—É —Ñ–æ—Ç–æ –∑ –≥–∞–ª–µ—Ä–µ—ó
      const galleryButton = document.createElement('button');
      galleryButton.textContent = 'üìÇ –ó –≥–∞–ª–µ—Ä–µ—ó';
      galleryButton.style.cssText = `
        background: #6f42c1;
        color: #fff;
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        font-size: 14px;
        font-weight: 500;
        cursor: pointer;
        min-width: 120px;
        flex: 1;
        max-width: 150px;
      `;

      galleryButton.onclick = () => {
        // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π input –¥–ª—è –≤–∏–±–æ—Ä—É —Ñ–∞–π–ª—É
        const fileInput = document.createElement('input');
        fileInput.type = 'file';
        fileInput.accept = 'image/*';
        fileInput.style.display = 'none';
        
        fileInput.onchange = async (e) => {
          if (e.target.files && e.target.files.length > 0) {
            const descriptionInput = document.getElementById('photo-description');
            const photoTypeSelect = document.getElementById('photo-type');
            const description = descriptionInput ? descriptionInput.value : '';
            const photoType = photoTypeSelect ? photoTypeSelect.value : 'document';
            
            if (currentStream) {
              currentStream.getTracks().forEach(track => track.stop());
            }
            document.body.removeChild(cameraModal);
            
            // –î–æ–¥–∞—î–º–æ —Ç–∏–ø —Ñ–æ—Ç–æ –¥–æ –æ–ø–∏—Å—É
            const photoTypeLabels = {
              'document': 'üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç',
              'details': 'üîß –§–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π',
              'equipment': '‚öôÔ∏è –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è'
            };
            
            const fullDescription = description ? 
              `${photoTypeLabels[photoType]} - ${description}` : 
              photoTypeLabels[photoType];
            
            await handleFileUpload(e.target.files, taskId, fullDescription);
          }
        };
        
        document.body.appendChild(fileInput);
        fileInput.click();
        document.body.removeChild(fileInput);
      };

      // –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
      captureButton.onclick = () => {
        try {
          // –û—Ç—Ä–∏–º—É—î–º–æ –æ–ø–∏—Å —Ç–∞ —Ç–∏–ø –∑ –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
          const descriptionInput = document.getElementById('photo-description');
          const photoTypeSelect = document.getElementById('photo-type');
          const description = descriptionInput ? descriptionInput.value : '';
          const photoType = photoTypeSelect ? photoTypeSelect.value : 'document';
          
          // –°—Ç–≤–æ—Ä—é—î–º–æ canvas –¥–ª—è –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è –∫–∞–¥—Ä—É
          const canvas = document.createElement('canvas');
          const context = canvas.getContext('2d');
          
          canvas.width = video.videoWidth;
          canvas.height = video.videoHeight;
          context.drawImage(video, 0, 0);
          
          // –ü–æ–∫–∞–∑—É—î–º–æ –ø—Ä–µ–≤—å—é —Ñ–æ—Ç–æ
          showPhotoPreview(canvas, taskId, description, photoType, currentStream, cameraModal);
        } catch (error) {
          console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ:', error);
          alert('–ü–æ–º–∏–ª–∫–∞ –∑–∞—Ö–æ–ø–ª–µ–Ω–Ω—è —Ñ–æ—Ç–æ');
        }
      };

      cancelButton.onclick = () => {
        if (currentStream) {
          currentStream.getTracks().forEach(track => track.stop());
        }
        document.body.removeChild(cameraModal);
      };

      // –î–æ–¥–∞—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –¥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
      buttonContainer.appendChild(captureButton);
      buttonContainer.appendChild(cancelButton); // –ü–µ—Ä–µ–º—ñ—â—É—î–º–æ –∫–Ω–æ–ø–∫—É "–°–∫–∞—Å—É–≤–∞—Ç–∏" –≤ –æ–¥–∏–Ω —Ä—è–¥ –∑ "–ó—Ä–æ–±–∏—Ç–∏ —Ñ–æ—Ç–æ"
      buttonContainer.appendChild(galleryButton); // –î–æ–¥–∞—î–º–æ –∫–Ω–æ–ø–∫—É –¥–ª—è –≥–∞–ª–µ—Ä–µ—ó
      cameraModal.appendChild(video);
      cameraModal.appendChild(buttonContainer);

      // –î–æ–¥–∞—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–æ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
      document.body.appendChild(cameraModal);

      // –î–æ–¥–∞—î–º–æ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó
      const instructions = document.createElement('div');
      instructions.textContent = '–ù–∞–≤–µ–¥—ñ—Ç—å –∫–∞–º–µ—Ä—É, —Å—Ñ–æ–∫—É—Å—É–π—Ç–µ—Å—è —Ç–∞ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–ó—Ä–æ–±–∏—Ç–∏ —Ñ–æ—Ç–æ"';
      instructions.style.cssText = `
        color: #fff;
        font-size: 14px;
        margin-bottom: 12px;
        text-align: center;
        max-width: 300px;
        line-height: 1.3;
      `;
      cameraModal.insertBefore(instructions, video);

      // –î–æ–¥–∞—î–º–æ –ø–æ–ª–µ –¥–ª—è –æ–ø–∏—Å—É —Ñ–æ—Ç–æ
      const descriptionContainer = document.createElement('div');
      descriptionContainer.style.cssText = `
        margin: 12px 0;
        width: 100%;
        max-width: 400px;
      `;

      const descriptionLabel = document.createElement('label');
      descriptionLabel.textContent = '–û–ø–∏—Å —Ñ–æ—Ç–æ (–Ω–µ–æ–±–æ–≤\'—è–∑–∫–æ–≤–æ):';
      descriptionLabel.style.cssText = `
        display: block;
        color: #fff;
        font-size: 14px;
        margin-bottom: 4px;
        text-align: center;
      `;

      const descriptionInput = document.createElement('input');
      descriptionInput.id = 'photo-description';
      descriptionInput.type = 'text';
      descriptionInput.placeholder = '–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è, –¥–æ–∫—É–º–µ–Ω—Ç–∏...';
      descriptionInput.style.cssText = `
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 14px;
        background: #fff;
        color: #333;
        box-sizing: border-box;
      `;

      // –î–æ–¥–∞—î–º–æ –ø–æ–ª–µ –¥–ª—è —Ç–∏–ø—É —Ñ–æ—Ç–æ
      const photoTypeContainer = document.createElement('div');
      photoTypeContainer.style.cssText = `
        margin: 12px 0;
        width: 100%;
        max-width: 400px;
      `;

      const photoTypeLabel = document.createElement('label');
      photoTypeLabel.textContent = '–¢–∏–ø —Ñ–æ—Ç–æ:';
      photoTypeLabel.style.cssText = `
        display: block;
        color: #fff;
        font-size: 14px;
        margin-bottom: 4px;
        text-align: center;
      `;

      const photoTypeSelect = document.createElement('select');
      photoTypeSelect.id = 'photo-type';
      photoTypeSelect.style.cssText = `
        width: 100%;
        padding: 8px;
        border: 1px solid #ddd;
        border-radius: 6px;
        font-size: 14px;
        background: #fff;
        color: #333;
        box-sizing: border-box;
      `;

      // –î–æ–¥–∞—î–º–æ –æ–ø—Ü—ñ—ó –¥–ª—è —Ç–∏–ø—É —Ñ–æ—Ç–æ
      const photoTypes = [
        { value: 'document', label: 'üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç' },
        { value: 'details', label: 'üîß –§–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π' },
        { value: 'equipment', label: '‚öôÔ∏è –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è' }
      ];

      photoTypes.forEach(type => {
        const option = document.createElement('option');
        option.value = type.value;
        option.textContent = type.label;
        if (type.value === 'document') {
          option.selected = true; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º "–§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç"
        }
        photoTypeSelect.appendChild(option);
      });

      descriptionContainer.appendChild(descriptionLabel);
      descriptionContainer.appendChild(descriptionInput);
      
      photoTypeContainer.appendChild(photoTypeLabel);
      photoTypeContainer.appendChild(photoTypeSelect);
      
      cameraModal.insertBefore(descriptionContainer, buttonContainer);
      cameraModal.insertBefore(photoTypeContainer, buttonContainer);

      // –î–æ–¥–∞—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä –∫–∞–º–µ—Ä–∏ (–ø—Ä–∏–±–∏—Ä–∞—î–º–æ, –æ—Å–∫—ñ–ª—å–∫–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –æ–¥–Ω—É –∫–∞–º–µ—Ä—É)
      // let cameraIndicator = null;
      // if (filteredVideoDevices.length > 1) {
      //   cameraIndicator = document.createElement('div');
      //   const currentDevice = filteredVideoDevices[currentDeviceIndex];
      //   const deviceName = currentDevice.label || `–ö–∞–º–µ—Ä–∞ ${currentDeviceIndex + 1}`;
      //   cameraIndicator.textContent = `${deviceName} (${currentDeviceIndex + 1} –∑ ${filteredVideoDevices.length})`;
      //   cameraIndicator.style.cssText = `
      //     color: #fff;
      //     font-size: 12px;
      //     margin-top: 8px;
      //     text-align: center;
      //     opacity: 0.8;
      //   `;
      //   cameraModal.appendChild(cameraIndicator);
      // }

    } catch (error) {
      console.error('=== –ü–û–ú–ò–õ–ö–ê handleCameraCapture ===');
      console.error('–ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–º–µ—Ä–∏:', error);
      console.error('–ù–∞–∑–≤–∞ –ø–æ–º–∏–ª–∫–∏:', error.name);
      console.error('–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏:', error.message);
      
      // –ë—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫–∏ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
      let errorMessage = '–ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–º–µ—Ä–∏';
      
      if (error.name === 'NotAllowedError') {
        // –Ø–∫—â–æ –¥–æ–∑–≤—ñ–ª –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ —Ü–µ
        localStorage.setItem('cameraPermission', 'denied');
        errorMessage = '–î–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ. –î–æ–∑–≤–æ–ª—å—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏ –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –±—Ä–∞—É–∑–µ—Ä–∞.';
      } else if (error.name === 'NotFoundError') {
        errorMessage = '–ö–∞–º–µ—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–∞ –∫–∞–º–µ—Ä–∞ –¥–æ –ø—Ä–∏—Å—Ç—Ä–æ—é.';
      } else if (error.name === 'NotReadableError') {
        errorMessage = '–ö–∞–º–µ—Ä–∞ –∑–∞–π–Ω—è—Ç–∞ —ñ–Ω—à–∏–º –¥–æ–¥–∞—Ç–∫–æ–º. –ó–∞–∫—Ä–∏–π—Ç–µ —ñ–Ω—à—ñ –¥–æ–¥–∞—Ç–∫–∏, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –∫–∞–º–µ—Ä—É.';
      } else if (error.name === 'OverconstrainedError') {
        // –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –æ–±—Ä–æ–±–∫–∞ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
        errorMessage = '–ö–∞–º–µ—Ä–∞ –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ "–ó –≥–∞–ª–µ—Ä–µ—ó" –∞–±–æ –æ–Ω–æ–≤—ñ—Ç—å –±—Ä–∞—É–∑–µ—Ä.';
      } else if (error.name === 'TypeError') {
        errorMessage = '–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —ñ–Ω—à–∏–π –±—Ä–∞—É–∑–µ—Ä.';
      } else if (error.name === 'NotSupportedError') {
        errorMessage = '–í–∞—à –ø—Ä–∏—Å—Ç—Ä—ñ–π –Ω–µ –ø—ñ–¥—Ç—Ä–∏–º—É—î –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏. –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ "–ó –≥–∞–ª–µ—Ä–µ—ó".';
      } else if (error.name === 'AbortError') {
        errorMessage = '–û–ø–µ—Ä–∞—Ü—ñ—è –∑ –∫–∞–º–µ—Ä–æ—é –±—É–ª–∞ –ø–µ—Ä–µ—Ä–≤–∞–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.';
      } else if (error.name === 'SecurityError') {
        errorMessage = '–ü–æ–º–∏–ª–∫–∞ –±–µ–∑–ø–µ–∫–∏. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ HTTPS –∑\'—î–¥–Ω–∞–Ω–Ω—è.';
      } else {
        errorMessage = `–ü–æ–º–∏–ª–∫–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–º–µ—Ä–∏: ${error.message}`;
      }
      
      // –î–æ–¥–∞—î–º–æ –ø–æ—Ä–∞–¥—É –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤
      const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
      if (isMobile) {
        errorMessage += '\n\nüí° –ü–æ—Ä–∞–¥–∏ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤:';
        errorMessage += '\n‚Ä¢ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ Chrome –∞–±–æ Safari';
        errorMessage += '\n‚Ä¢ –î–æ–∑–≤–æ–ª—å—Ç–µ –¥–æ—Å—Ç—É–ø –¥–æ –∫–∞–º–µ—Ä–∏ –≤ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è—Ö –±—Ä–∞—É–∑–µ—Ä–∞';
        errorMessage += '\n‚Ä¢ –°–ø—Ä–æ–±—É–π—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ "–ó –≥–∞–ª–µ—Ä–µ—ó" –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ—Ç–æ';
        errorMessage += '\n‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ, —á–∏ –Ω–µ –∑–∞–π–Ω—è—Ç–∞ –∫–∞–º–µ—Ä–∞ —ñ–Ω—à–∏–º –¥–æ–¥–∞—Ç–∫–æ–º';
      }
      
      console.error('–§—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É:', errorMessage);
      alert(errorMessage);
    }
  };

  if (loading) {
    console.log('–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...');
    return (
      <div style={{ 
        display: 'flex', 
        justifyContent: 'center', 
        alignItems: 'center', 
        height: '50vh',
        fontSize: '18px',
        color: '#666'
      }}>
        –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞—è–≤–æ–∫...
      </div>
    );
  }

  console.log('–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É. –°—Ç–∞–Ω:', { tasks: tasks.length, loading, activeTab });

  return (
    <div style={{ padding: '16px', maxWidth: '100%' }}>
      <h2 style={{ 
        marginBottom: '20px', 
        color: '#22334a',
        fontSize: '24px',
        textAlign: 'center'
      }}>
        üì± –ú–æ–±—ñ–ª—å–Ω–∏–π —Ä–µ–∂–∏–º –ø–µ—Ä–µ–≥–ª—è–¥—É
      </h2>

      {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–µ–≥—ñ–æ–Ω—É */}
      {user && user.region && (
        <div style={{
          textAlign: 'center',
          marginBottom: '16px',
          padding: '8px 16px',
          background: user.region === '–£–∫—Ä–∞—ó–Ω–∞' ? '#e3f2fd' : '#fff3e0',
          border: `2px solid ${user.region === '–£–∫—Ä–∞—ó–Ω–∞' ? '#2196f3' : '#ff9800'}`,
          borderRadius: '8px',
          display: 'inline-block',
          margin: '0 auto 16px auto'
        }}>
          <div style={{
            fontSize: '14px',
            fontWeight: '600',
            color: user.region === '–£–∫—Ä–∞—ó–Ω–∞' ? '#1976d2' : '#f57c00'
          }}>
            üåç –†–µ–≥—ñ–æ–Ω: {user.region}
          </div>
          <div style={{
            fontSize: '12px',
            color: user.region === '–£–∫—Ä–∞—ó–Ω–∞' ? '#1976d2' : '#f57c00',
            marginTop: '2px'
          }}>
            {user.region === '–£–∫—Ä–∞—ó–Ω–∞' ? '–ü–µ—Ä–µ–≥–ª—è–¥–∞—î—Ç–µ –≤—Å—ñ –∑–∞—è–≤–∫–∏' : `–ü–µ—Ä–µ–≥–ª—è–¥–∞—î—Ç–µ –∑–∞—è–≤–∫–∏ —Ä–µ–≥—ñ–æ–Ω—É "${user.region}"`}
          </div>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É */}
      <div style={{ 
        textAlign: 'center', 
        marginBottom: '20px',
        display: 'flex',
        gap: '12px',
        justifyContent: 'center',
        flexWrap: 'wrap'
      }}>
        <button
          onClick={handleLogout}
          className="mobile-logout-button"
          style={{
            background: '#dc3545',
            color: '#fff',
            border: 'none',
            borderRadius: '6px',
            padding: '8px 16px',
            fontSize: '14px',
            cursor: 'pointer'
          }}
        >
          üö™ –í–∏–π—Ç–∏ –∑ —Ä–µ–∂–∏–º—É
        </button>
        <button
          onClick={resetCameraPermission}
          style={{
            background: '#6c757d',
            color: '#fff',
            border: 'none',
            borderRadius: '6px',
            padding: '8px 16px',
            fontSize: '14px',
            cursor: 'pointer'
          }}
        >
          üîÑ –°–∫–∏–Ω—É—Ç–∏ –¥–æ–∑–≤—ñ–ª –∫–∞–º–µ—Ä–∏
        </button>
      </div>

      {/* –í–∫–ª–∞–¥–∫–∏ */}
      <div style={{ 
        marginBottom: '20px',
        borderBottom: '1px solid #ddd'
      }}>
        <div style={{
          display: 'flex',
          gap: '0',
          background: '#f8f9fa',
          borderRadius: '8px 8px 0 0',
          overflow: 'hidden'
        }}>
          <button
            onClick={() => setActiveTab('pending')}
            style={{
              flex: 1,
              padding: '12px 8px',
              border: 'none',
              background: activeTab === 'pending' ? '#007bff' : '#f8f9fa',
              color: activeTab === 'pending' ? '#fff' : '#666',
              fontSize: '14px',
              fontWeight: activeTab === 'pending' ? '600' : '400',
              cursor: 'pointer',
              transition: 'all 0.2s'
            }}
          >
            üìù –ù–æ–≤—ñ –∑–∞—è–≤–∫–∏
          </button>
          <button
            onClick={() => setActiveTab('confirmed')}
            style={{
              flex: 1,
              padding: '12px 8px',
              border: 'none',
              background: activeTab === 'confirmed' ? '#ffc107' : '#f8f9fa',
              color: activeTab === 'confirmed' ? '#000' : '#666',
              fontSize: '14px',
              fontWeight: activeTab === 'confirmed' ? '600' : '400',
              cursor: 'pointer',
              transition: 'all 0.2s'
            }}
          >
            üîÑ –í —Ä–æ–±–æ—Ç—ñ
          </button>
          <button
            onClick={() => setActiveTab('completed')}
            style={{
              flex: 1,
              padding: '12px 8px',
              border: 'none',
              background: activeTab === 'completed' ? '#28a745' : '#f8f9fa',
              color: activeTab === 'completed' ? '#fff' : '#666',
              fontSize: '14px',
              fontWeight: activeTab === 'completed' ? '600' : '400',
              cursor: 'pointer',
              transition: 'all 0.2s'
            }}
          >
            ‚úÖ –í–∏–∫–æ–Ω–∞–Ω—ñ
          </button>
        </div>
        
        {/* –¢–∏–º—á–∞—Å–æ–≤–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ */}
        <div style={{ 
          marginTop: '10px', 
          textAlign: 'center' 
        }}>
          <button
            onClick={() => setActiveTab('all')}
            style={{
              background: '#6c757d',
              color: '#fff',
              border: 'none',
              borderRadius: '4px',
              padding: '6px 12px',
              fontSize: '12px',
              cursor: 'pointer'
            }}
          >
            üîç –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∑–∞—è–≤–∫–∏ ({getFilteredTasks().length})
          </button>
        </div>
      </div>

      {/* –°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫ */}
      <div style={{ marginBottom: '20px' }}>
        {(() => {
          const filteredTasks = getFilteredTasks();
          return filteredTasks.length === 0 ? (
            <div style={{ 
              textAlign: 'center', 
              color: '#666', 
              padding: '40px 20px',
              fontSize: '16px'
            }}>
              {activeTab === 'pending' && (user && user.region && user.region !== '–£–∫—Ä–∞—ó–Ω–∞' ? 
                `–ù–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫ —É —Ä–µ–≥—ñ–æ–Ω—ñ "${user.region}" –Ω–µ–º–∞—î` : '–ù–æ–≤–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–µ–º–∞—î')}
              {activeTab === 'confirmed' && (user && user.region && user.region !== '–£–∫—Ä–∞—ó–Ω–∞' ? 
                `–ó–∞—è–≤–æ–∫ –≤ —Ä–æ–±–æ—Ç—ñ —É —Ä–µ–≥—ñ–æ–Ω—ñ "${user.region}" –Ω–µ–º–∞—î` : '–ó–∞—è–≤–æ–∫ –≤ —Ä–æ–±–æ—Ç—ñ –Ω–µ–º–∞—î')}
              {activeTab === 'completed' && (user && user.region && user.region !== '–£–∫—Ä–∞—ó–Ω–∞' ? 
                `–í–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞—è–≤–æ–∫ —É —Ä–µ–≥—ñ–æ–Ω—ñ "${user.region}" –Ω–µ–º–∞—î` : '–í–∏–∫–æ–Ω–∞–Ω–∏—Ö –∑–∞—è–≤–æ–∫ –Ω–µ–º–∞—î')}
              {activeTab === 'all' && (user && user.region && user.region !== '–£–∫—Ä–∞—ó–Ω–∞' ? 
                `–ó–∞—è–≤–æ–∫ —É —Ä–µ–≥—ñ–æ–Ω—ñ "${user.region}" –Ω–µ–º–∞—î` : '–ó–∞—è–≤–æ–∫ –Ω–µ–º–∞—î')}
            </div>
          ) : (
            <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>
              {filteredTasks.map((task) => (
                <div 
                  key={task.id} 
                  className="mobile-task-card mobile-fade-in"
                  style={{
                    background: '#fff',
                    border: '1px solid #ddd',
                    borderRadius: '8px',
                    padding: '16px',
                    boxShadow: '0 2px 4px rgba(0,0,0,0.1)'
                  }}
                >
                  <div style={{ marginBottom: '8px' }}>
                    <strong style={{ color: '#22334a' }}>
                      ‚Ññ{task.requestNumber || task.id}
                    </strong>
                    {task.status && (
                      <span style={{
                        marginLeft: '8px',
                        padding: '2px 8px',
                        borderRadius: '12px',
                        fontSize: '12px',
                        fontWeight: '500',
                        background: task.status === '–í–∏–∫–æ–Ω–∞–Ω–æ' ? '#d4edda' : 
                                   task.status === '–í —Ä–æ–±–æ—Ç—ñ' ? '#fff3cd' : 
                                   task.status === '–ó–∞—è–≤–∫–∞' ? '#f8d7da' : '#e2e3e5',
                        color: task.status === '–í–∏–∫–æ–Ω–∞–Ω–æ' ? '#155724' : 
                               task.status === '–í —Ä–æ–±–æ—Ç—ñ' ? '#856404' : 
                               task.status === '–ó–∞—è–≤–∫–∞' ? '#721c24' : '#6c757d'
                      }}>
                        {task.status === '–í–∏–∫–æ–Ω–∞–Ω–æ' ? '‚úÖ –í–∏–∫–æ–Ω–∞–Ω–æ' :
                         task.status === '–í —Ä–æ–±–æ—Ç—ñ' ? 'üîÑ –í —Ä–æ–±–æ—Ç—ñ' : 
                         task.status === '–ó–∞—è–≤–∫–∞' ? 'üìù –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞' :
                         task.status === '–ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ' ? 'üö´ –ó–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ' : task.status}
                      </span>
                    )}
                  </div>
                  
                  <div 
                    className="mobile-task-grid"
                    style={{ 
                      display: 'grid', 
                      gridTemplateColumns: '1fr 1fr', 
                      gap: '8px',
                      fontSize: '14px',
                      marginBottom: '12px'
                    }}
                  >
                    {isFieldFilled(task.client) && (
                      <div>
                        <span style={{ color: '#333' }}>–ö–æ–º–ø–∞–Ω—ñ—è:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.client}</span>
                      </div>
                    )}
                    {isFieldFilled(task.serviceRegion) && (
                      <div>
                        <span style={{ color: '#333' }}>–†–µ–≥—ñ–æ–Ω:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.serviceRegion}</span>
                      </div>
                    )}
                    {isFieldFilled(task.equipment) && (
                      <div>
                        <span style={{ color: '#333' }}>–û–±–ª–∞–¥–Ω–∞–Ω–Ω—è:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.equipment}</span>
                      </div>
                    )}
                    {isFieldFilled(task.serviceTotal) && (
                      <div>
                        <span style={{ color: '#333' }}>–°—É–º–∞:</span><br />
                        <span style={{ fontWeight: '500', color: '#28a745' }}>
                          {task.serviceTotal} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.address) && (
                      <div>
                        <span style={{ color: '#333' }}>–ê–¥—Ä–µ—Å–∞:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.address}</span>
                      </div>
                    )}
                    {isFieldFilled(task.equipmentSerial) && (
                      <div>
                        <span style={{ color: '#333' }}>–°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.equipmentSerial}</span>
                      </div>
                    )}
                    {isFieldFilled(task.engineer1) && (
                      <div>
                        <span style={{ color: '#333' }}>–Ü–Ω–∂–µ–Ω–µ—Ä 1:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.engineer1}</span>
                      </div>
                    )}
                    {isFieldFilled(task.engineer2) && (
                      <div>
                        <span style={{ color: '#333' }}>–Ü–Ω–∂–µ–Ω–µ—Ä 2:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.engineer2}</span>
                      </div>
                    )}
                    {isFieldFilled(task.paymentType) && (
                      <div>
                        <span style={{ color: '#333' }}>–¢–∏–ø –æ–ø–ª–∞—Ç–∏:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.paymentType}</span>
                      </div>
                    )}
                    {isFieldFilled(task.work) && (
                      <div>
                        <span style={{ color: '#333' }}>–†–æ–±–æ—Ç–∏:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.work}</span>
                      </div>
                    )}
                    {isFieldFilled(task.workPrice) && (
                      <div>
                        <span style={{ color: '#333' }}>–í–∞—Ä—Ç—ñ—Å—Ç—å —Ä–æ–±—ñ—Ç:</span><br />
                        <span style={{ fontWeight: '500', color: '#007bff' }}>
                          {task.workPrice} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.transportSum) && (
                      <div>
                        <span style={{ color: '#333' }}>–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç:</span><br />
                        <span style={{ fontWeight: '500', color: '#ff6b35' }}>
                          {task.transportSum} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.otherMaterials) && (
                      <div>
                        <span style={{ color: '#333' }}>–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.otherMaterials}</span>
                      </div>
                    )}
                    {isFieldFilled(task.otherSum) && (
                      <div>
                        <span style={{ color: '#333' }}>–í–∞—Ä—Ç—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤:</span><br />
                        <span style={{ fontWeight: '500', color: '#6f42c1' }}>
                          {task.otherSum} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.oilTotal) && task.oilTotal > 0 && (
                      <div>
                        <span style={{ color: '#333' }}>–ú–∞—Å–ª–æ:</span><br />
                        <span style={{ fontWeight: '500', color: '#fd7e14' }}>
                          {task.oilTotal} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.airFilterSum) && task.airFilterSum > 0 && (
                      <div>
                        <span style={{ color: '#333' }}>–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä:</span><br />
                        <span style={{ fontWeight: '500', color: '#20c997' }}>
                          {task.airFilterSum} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.fuelFilterSum) && task.fuelFilterSum > 0 && (
                      <div>
                        <span style={{ color: '#333' }}>–ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä:</span><br />
                        <span style={{ fontWeight: '500', color: '#20c997' }}>
                          {task.fuelFilterSum} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.filterSum) && task.filterSum > 0 && (
                      <div>
                        <span style={{ color: '#333' }}>–Ü–Ω—à—ñ —Ñ—ñ–ª—å—Ç—Ä–∏:</span><br />
                        <span style={{ fontWeight: '500', color: '#20c997' }}>
                          {task.filterSum} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.antifreezeSum) && task.antifreezeSum > 0 && (
                      <div>
                        <span style={{ color: '#333' }}>–ê–Ω—Ç–∏—Ñ—Ä–∏–∑:</span><br />
                        <span style={{ fontWeight: '500', color: '#17a2b8' }}>
                          {task.antifreezeSum} –≥—Ä–Ω
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.requestDate) && (
                      <div>
                        <span style={{ color: '#333' }}>–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>
                          {new Date(task.requestDate).toLocaleDateString()}
                        </span>
                      </div>
                    )}
                    {isFieldFilled(task.company) && (
                      <div>
                        <span style={{ color: '#333' }}>–ö–æ–º–ø–∞–Ω—ñ—è:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.company}</span>
                      </div>
                    )}
                    {isFieldFilled(task.reportMonthYear) && (
                      <div>
                        <span style={{ color: '#333' }}>–ó–≤—ñ—Ç–Ω–∏–π –º—ñ—Å—è—Ü—å:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.reportMonthYear}</span>
                      </div>
                    )}
                    {isFieldFilled(task.invoice) && (
                      <div>
                        <span style={{ color: '#333' }}>–ù–æ–º–µ—Ä —Ä–∞—Ö—É–Ω–∫—É:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.invoice}</span>
                      </div>
                    )}
                    {isFieldFilled(task.bonusApprovalDate) && (
                      <div>
                        <span style={{ color: '#333' }}>–î–∞—Ç–∞ –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø—Ä–µ–º—ñ—ó:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.bonusApprovalDate}</span>
                      </div>
                    )}
                    {isFieldFilled(task.approvedByWarehouse) && (
                      <div>
                        <span style={{ color: '#333' }}>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —Å–∫–ª–∞–¥–æ–º:</span><br />
                        <span style={{ fontWeight: '500', color: '#28a745' }}>{task.approvedByWarehouse}</span>
                      </div>
                    )}
                    {isFieldFilled(task.warehouseComment) && (
                      <div>
                        <span style={{ color: '#333' }}>–ö–æ–º–µ–Ω—Ç–∞—Ä —Å–∫–ª–∞–¥—É:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.warehouseComment}</span>
                      </div>
                    )}
                    {isFieldFilled(task.approvedByAccountant) && (
                      <div>
                        <span style={{ color: '#333' }}>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–º:</span><br />
                        <span style={{ fontWeight: '500', color: '#28a745' }}>{task.approvedByAccountant}</span>
                      </div>
                    )}
                    {isFieldFilled(task.accountantComment) && (
                      <div>
                        <span style={{ color: '#333' }}>–ö–æ–º–µ–Ω—Ç–∞—Ä –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.accountantComment}</span>
                      </div>
                    )}
                    {isFieldFilled(task.approvedByRegional) && (
                      <div>
                        <span style={{ color: '#333' }}>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–∏–º:</span><br />
                        <span style={{ fontWeight: '500', color: '#28a745' }}>{task.approvedByRegional}</span>
                      </div>
                    )}
                    {isFieldFilled(task.regionalComment) && (
                      <div>
                        <span style={{ color: '#333' }}>–ö–æ–º–µ–Ω—Ç–∞—Ä —Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.regionalComment}</span>
                      </div>
                    )}
                    {isFieldFilled(task.approvedByRegionalManager) && (
                      <div>
                        <span style={{ color: '#333' }}>–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —Ä–µ–≥. –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º:</span><br />
                        <span style={{ fontWeight: '500', color: '#28a745' }}>{task.approvedByRegionalManager}</span>
                      </div>
                    )}
                    {isFieldFilled(task.regionalManagerComment) && (
                      <div>
                        <span style={{ color: '#333' }}>–ö–æ–º–µ–Ω—Ç–∞—Ä —Ä–µ–≥. –º–µ–Ω–µ–¥–∂–µ—Ä–∞:</span><br />
                        <span style={{ fontWeight: '500', color: '#000' }}>{task.regionalManagerComment}</span>
                      </div>
                    )}
                  </div>

                  {(isFieldFilled(task.requestDesc) || isFieldFilled(task.work)) && (
                    <div style={{ marginBottom: '12px' }}>
                      <span style={{ color: '#333' }}>–û–ø–∏—Å:</span><br />
                      <span style={{ fontSize: '13px', color: '#000' }}>
                        {task.requestDesc || task.work}
                      </span>
                    </div>
                  )}

                  <div style={{ 
                    display: 'flex', 
                    justifyContent: 'space-between',
                    alignItems: 'center'
                  }}>
                    <span style={{ 
                      color: '#333', 
                      fontSize: '12px' 
                    }}>
                      {task.date ? new Date(task.date).toLocaleDateString() : '‚Äî'}
                    </span>
                    
                    <button
                      onClick={() => openTaskInfo(task)}
                      className="mobile-info-button"
                      style={{
                        background: '#007bff',
                        color: '#fff',
                        border: 'none',
                        borderRadius: '6px',
                        padding: '8px 16px',
                        fontSize: '14px',
                        cursor: 'pointer'
                      }}
                    >
                      ‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
                    </button>
                  </div>
                </div>
              ))}
            </div>
          );
        })()}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é –ø—Ä–æ –∑–∞—è–≤–∫—É */}
      {showTaskModal && selectedTask && (
        <div 
          className="mobile-modal mobile-scale-in"
          style={{
            position: 'fixed',
            top: 0,
            left: 0,
            right: 0,
            bottom: 0,
            background: 'rgba(0,0,0,0.5)',
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            zIndex: 1000,
            padding: '16px'
          }}
        >
          <div 
            className="mobile-modal-content"
            style={{
              background: '#fff',
              borderRadius: '12px',
              padding: '24px',
              maxWidth: '500px',
              width: '100%',
              maxHeight: '90vh',
              overflow: 'auto'
            }}
          >
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginBottom: '20px'
            }}>
              <h3 style={{ margin: 0, color: '#22334a' }}>
                –ó–∞—è–≤–∫–∞ ‚Ññ{selectedTask.requestNumber || selectedTask.id}
              </h3>
              <button
                onClick={() => setShowTaskModal(false)}
                style={{
                  background: 'none',
                  border: 'none',
                  fontSize: '24px',
                  cursor: 'pointer',
                  color: '#666'
                }}
              >
                √ó
              </button>
            </div>

            {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞—è–≤–∫—É */}
            <div style={{ marginBottom: '24px' }}>
              {Object.entries(selectedTask).map(([key, value]) => {
                // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—É —Å–∞–º—É —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
                if (!isFieldFilled(value)) return null;
                
                const fieldLabels = {
                  requestNumber: '–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏/–Ω–∞—Ä—è–¥—É',
                  client: '–ö–æ–º–ø–∞–Ω—ñ—è –≤–∏–∫–æ–Ω–∞–≤–µ—Ü—å',
                  serviceRegion: '–†–µ–≥—ñ–æ–Ω —Å–µ—Ä–≤—ñ—Å–Ω–æ–≥–æ –≤—ñ–¥–¥—ñ–ª—É',
                  requestDesc: '–û–ø–∏—Å –∑–∞—è–≤–∫–∏',
                  address: '–ê–¥—Ä–µ—Å–∞',
                  equipment: '–¢–∏–ø –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è',
                  serviceTotal: '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –ø–æ—Å–ª—É–≥–∏',
                  date: '–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—è —Ä–æ–±—ñ—Ç',
                  work: '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —Ä–æ–±—ñ—Ç',
                  equipmentSerial: '–°–µ—Ä—ñ–π–Ω–∏–π –Ω–æ–º–µ—Ä –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è',
                  engineer1: '–Ü–Ω–∂–µ–Ω–µ—Ä 1',
                  engineer2: '–Ü–Ω–∂–µ–Ω–µ—Ä 2',
                  paymentType: '–¢–∏–ø –æ–ø–ª–∞—Ç–∏',
                  status: '–°—Ç–∞—Ç—É—Å',
                  workPrice: '–í–∞—Ä—Ç—ñ—Å—Ç—å —Ä–æ–±—ñ—Ç',
                  transportSum: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ñ –≤–∏—Ç—Ä–∞—Ç–∏',
                  otherMaterials: '–ú–∞—Ç–µ—Ä—ñ–∞–ª–∏',
                  otherSum: '–í–∞—Ä—Ç—ñ—Å—Ç—å –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤',
                  oilTotal: '–ú–∞—Å–ª–æ',
                  airFilterSum: '–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä',
                  fuelFilterSum: '–ü–∞–ª–∏–≤–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä',
                  filterSum: '–Ü–Ω—à—ñ —Ñ—ñ–ª—å—Ç—Ä–∏',
                  antifreezeSum: '–ê–Ω—Ç–∏—Ñ—Ä–∏–∑',
                  invoice: '–ù–æ–º–µ—Ä —Ä–∞—Ö—É–Ω–∫—É',
                  requestDate: '–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏',
                  company: '–ö–æ–º–ø–∞–Ω—ñ—è',
                  reportMonthYear: '–ó–≤—ñ—Ç–Ω–∏–π –º—ñ—Å—è—Ü—å',
                  bonusApprovalDate: '–î–∞—Ç–∞ –∑–∞—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø—Ä–µ–º—ñ—ó',
                  approvedByWarehouse: '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —Å–∫–ª–∞–¥–æ–º',
                  warehouseComment: '–ö–æ–º–µ–Ω—Ç–∞—Ä —Å–∫–ª–∞–¥—É',
                  approvedByAccountant: '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–º',
                  accountantComment: '–ö–æ–º–µ–Ω—Ç–∞—Ä –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞',
                  approvedByRegional: '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–∏–º',
                  regionalComment: '–ö–æ–º–µ–Ω—Ç–∞—Ä —Ä–µ–≥—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ',
                  approvedByRegionalManager: '–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ —Ä–µ–≥. –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º',
                  regionalManagerComment: '–ö–æ–º–µ–Ω—Ç–∞—Ä —Ä–µ–≥. –º–µ–Ω–µ–¥–∂–µ—Ä–∞'
                };

                const label = fieldLabels[key];
                if (!label) return null;

                return (
                  <div key={key} style={{ marginBottom: '12px' }}>
                    <div style={{ 
                      color: '#666', 
                      fontSize: '14px',
                      marginBottom: '4px'
                    }}>
                      {label}:
                    </div>
                    <div style={{ 
                      fontWeight: '500',
                      fontSize: '16px',
                      color: '#22334a'
                    }}>
                      {key === 'date' ? new Date(value).toLocaleDateString() : 
                       key === 'requestDate' ? new Date(value).toLocaleDateString() :
                       key === 'serviceTotal' ? `${value} –≥—Ä–Ω` : 
                       key === 'workPrice' ? `${value} –≥—Ä–Ω` :
                       key === 'transportSum' ? `${value} –≥—Ä–Ω` :
                       key === 'otherSum' ? `${value} –≥—Ä–Ω` :
                       key === 'oilTotal' ? `${value} –≥—Ä–Ω` :
                       key === 'airFilterSum' ? `${value} –≥—Ä–Ω` :
                       key === 'fuelFilterSum' ? `${value} –≥—Ä–Ω` :
                       key === 'filterSum' ? `${value} –≥—Ä–Ω` :
                       key === 'antifreezeSum' ? `${value} –≥—Ä–Ω` :
                       value}
                    </div>
                  </div>
                );
              })}
            </div>

            {/* –°–µ–∫—Ü—ñ—è —Ñ–∞–π–ª—ñ–≤ –∑–∞—è–≤–∫–∏ */}
            <div style={{ 
              borderTop: '1px solid #eee', 
              paddingTop: '20px',
              marginTop: '20px'
            }}>
              <h4 style={{ 
                margin: '0 0 16px 0', 
                color: '#22334a',
                fontSize: '18px'
              }}>
                üìÅ –§–∞–π–ª–∏ –∑–∞—è–≤–∫–∏
              </h4>

              {/* –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö —Ñ–∞–π–ª—ñ–≤ */}
              <div style={{ marginBottom: '24px' }}>
                {loadingFiles[selectedTask.id] ? (
                  <div style={{ 
                    textAlign: 'center', 
                    color: '#666', 
                    padding: '20px',
                    fontSize: '14px'
                  }}>
                    –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤...
                  </div>
                ) : taskFiles[selectedTask.id] && taskFiles[selectedTask.id].length > 0 ? (
                  <div style={{ 
                    display: 'flex', 
                    flexDirection: 'column',
                    gap: '16px'
                  }}>
                    {(() => {
                      const groupedFiles = groupFilesByTypeAndTime(taskFiles[selectedTask.id]);
                      return Object.entries(groupedFiles).map(([fileType, files]) => (
                        <div key={fileType} style={{
                          border: '1px solid #dee2e6',
                          borderRadius: '8px',
                          overflow: 'hidden'
                        }}>
                          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≥—Ä—É–ø–∏ */}
                          <div style={{
                            background: '#f8f9fa',
                            padding: '8px 12px',
                            borderBottom: '1px solid #dee2e6',
                            fontWeight: '600',
                            color: '#22334a',
                            fontSize: '14px'
                          }}>
                            {fileType} ({files.length})
                          </div>
                          
                          {/* –§–∞–π–ª–∏ –≤ –≥—Ä—É–ø—ñ */}
                          <div style={{
                            display: 'flex',
                            flexDirection: 'column',
                            gap: '0'
                          }}>
                            {files.map((file, index) => (
                              <div 
                                key={file.id}
                                style={{
                                  background: index % 2 === 0 ? '#fff' : '#f8f9fa',
                                  padding: '8px 12px',
                                  display: 'flex',
                                  flexDirection: 'column',
                                  gap: '8px',
                                  borderBottom: index < files.length - 1 ? '1px solid #eee' : 'none'
                                }}
                              >
                                <div style={{ 
                                  display: 'flex', 
                                  justifyContent: 'space-between',
                                  alignItems: 'flex-start',
                                  gap: '8px'
                                }}>
                                  <div style={{ flex: 1, minWidth: 0 }}>
                                    <div style={{ 
                                      fontWeight: '500', 
                                      fontSize: '13px',
                                      color: '#22334a',
                                      marginBottom: '2px',
                                      wordBreak: 'break-word'
                                    }}>
                                      {file.originalName}
                                    </div>
                                    {file.description && (
                                      <div style={{ 
                                        fontSize: '11px', 
                                        color: '#666',
                                        marginBottom: '2px',
                                        wordBreak: 'break-word'
                                      }}>
                                        {file.description}
                                      </div>
                                    )}
                                    <div style={{ 
                                      fontSize: '11px', 
                                      color: '#999'
                                    }}>
                                      {new Date(file.uploadDate).toLocaleString()} ‚Ä¢ {(file.size / 1024).toFixed(1)} KB
                                    </div>
                                  </div>
                                  <div style={{ 
                                    display: 'flex', 
                                    gap: '4px',
                                    flexWrap: 'wrap',
                                    flexShrink: 0
                                  }}>
                                    <button
                                      onClick={() => viewFile(file)}
                                      style={{
                                        background: '#007bff',
                                        color: '#fff',
                                        border: 'none',
                                        borderRadius: '4px',
                                        padding: '4px 8px',
                                        fontSize: '11px',
                                        cursor: 'pointer',
                                        whiteSpace: 'nowrap'
                                      }}
                                    >
                                      üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                                    </button>
                                    <button
                                      onClick={() => deleteFile(file.id, selectedTask.id)}
                                      style={{
                                        background: '#dc3545',
                                        color: '#fff',
                                        border: 'none',
                                        borderRadius: '4px',
                                        padding: '4px 8px',
                                        fontSize: '11px',
                                        cursor: 'pointer',
                                        whiteSpace: 'nowrap'
                                      }}
                                    >
                                      üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                                    </button>
                                  </div>
                                </div>
                              </div>
                            ))}
                          </div>
                        </div>
                      ));
                    })()}
                  </div>
                ) : (
                  <div style={{ 
                    textAlign: 'center', 
                    color: '#666', 
                    padding: '20px',
                    fontSize: '14px',
                    background: '#f8f9fa',
                    border: '1px dashed #dee2e6',
                    borderRadius: '6px'
                  }}>
                    –§–∞–π–ª—ñ–≤ –ø–æ–∫–∏ –Ω–µ–º–∞—î
                  </div>
                )}
              </div>

              <h4 style={{ 
                margin: '0 0 16px 0', 
                color: '#22334a',
                fontSize: '18px'
              }}>
                üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –Ω–æ–≤—ñ —Ñ–∞–π–ª–∏
              </h4>

              <div style={{ 
                display: 'flex', 
                flexDirection: 'column',
                gap: '12px'
              }}>
                {/* –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –ø—Ä–∏—Å—Ç—Ä–æ—é */}
                <div>
                  <label 
                    className="mobile-upload-area"
                    style={{
                      display: 'block',
                      background: '#f8f9fa',
                      border: '2px dashed #dee2e6',
                      borderRadius: '8px',
                      padding: '16px',
                      textAlign: 'center',
                      cursor: 'pointer',
                      transition: 'all 0.2s'
                    }}
                  >
                    <input
                      type="file"
                      multiple
                      accept="image/*,.pdf,.doc,.docx"
                      onChange={(e) => handleFileSelect(e.target.files)}
                      style={{ display: 'none' }}
                      disabled={uploadingFiles}
                    />
                    <div style={{ fontSize: '24px', marginBottom: '8px' }}>
                      üìÇ
                    </div>
                    <div style={{ fontWeight: '500', marginBottom: '4px' }}>
                      –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ –ø—Ä–∏—Å—Ç—Ä–æ—é
                    </div>
                    <div style={{ fontSize: '12px', color: '#666' }}>
                      –û–±–µ—Ä—ñ—Ç—å —Ñ–∞–π–ª–∏ –∑ –≥–∞–ª–µ—Ä–µ—ó
                    </div>
                  </label>
                </div>

                {/* –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±—Ä–∞–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ */}
                {selectedFiles && selectedFiles.length > 0 && (
                  <div style={{
                    background: '#f8f9fa',
                    border: '1px dashed #dee2e6',
                    borderRadius: '8px',
                    padding: '16px',
                    marginTop: '12px',
                    marginBottom: '12px'
                  }}>
                    <h5 style={{ margin: '0 0 8px 0', color: '#22334a' }}>–û–±—Ä–∞–Ω–æ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:</h5>
                    <ul style={{ listStyle: 'none', padding: 0, margin: 0 }}>
                      {Array.from(selectedFiles).map((file, index) => (
                        <li key={index} style={{ marginBottom: '4px', fontSize: '14px', color: '#333' }}>
                          {file.name}
                        </li>
                      ))}
                    </ul>
                    
                    {/* –ü–æ–ª–µ –¥–ª—è –æ–ø–∏—Å—É —Ñ–∞–π–ª—ñ–≤ */}
                    <div style={{ marginTop: '12px' }}>
                      <label style={{ 
                        display: 'block', 
                        fontSize: '14px', 
                        color: '#666', 
                        marginBottom: '4px' 
                      }}>
                        –û–ø–∏—Å —Ñ–∞–π–ª—ñ–≤ (–Ω–µ–æ–±–æ–≤'—è–∑–∫–æ–≤–æ):
                      </label>
                      <input
                        type="text"
                        value={fileDescription}
                        onChange={(e) => setFileDescription(e.target.value)}
                        placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥: –î–æ–∫—É–º–µ–Ω—Ç–∏, —Ñ–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è..."
                        style={{
                          width: '100%',
                          padding: '8px',
                          border: '1px solid #ddd',
                          borderRadius: '4px',
                          fontSize: '14px',
                          boxSizing: 'border-box'
                        }}
                      />
                    </div>
                    
                    {/* –ü–æ–ª–µ –¥–ª—è —Ç–∏–ø—É —Ñ–æ—Ç–æ */}
                    <div style={{ marginTop: '12px' }}>
                      <label style={{ 
                        display: 'block', 
                        fontSize: '14px', 
                        color: '#666', 
                        marginBottom: '4px' 
                      }}>
                        –¢–∏–ø —Ñ–æ—Ç–æ:
                      </label>
                      <select
                        value={filePhotoType}
                        onChange={(e) => setFilePhotoType(e.target.value)}
                        style={{
                          width: '100%',
                          padding: '8px',
                          border: '1px solid #ddd',
                          borderRadius: '4px',
                          fontSize: '14px',
                          boxSizing: 'border-box',
                          background: '#fff'
                        }}
                      >
                        <option value="document">üìÑ –§–æ—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç</option>
                        <option value="details">üîß –§–æ—Ç–æ –¥–µ—Ç–∞–ª–µ–π</option>
                        <option value="equipment">‚öôÔ∏è –§–æ—Ç–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è</option>
                      </select>
                    </div>
                    
                    {/* –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–±–æ —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è */}
                    <div style={{ 
                      display: 'flex', 
                      gap: '8px', 
                      marginTop: '12px' 
                    }}>
                      <button
                        onClick={handleUploadSelectedFiles}
                        disabled={uploadingFiles}
                        style={{
                          background: '#28a745',
                          color: '#fff',
                          border: 'none',
                          borderRadius: '4px',
                          padding: '8px 16px',
                          fontSize: '14px',
                          cursor: uploadingFiles ? 'not-allowed' : 'pointer',
                          opacity: uploadingFiles ? 0.6 : 1
                        }}
                      >
                        üì§ –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏
                      </button>
                      <button
                        onClick={() => {
                          setSelectedFiles(null);
                          setFileDescription('');
                          setFilePhotoType('document'); // –°–∫–∏–¥–∞—î–º–æ —Ç–∏–ø —Ñ–æ—Ç–æ –ø—ñ—Å–ª—è —Å–∫–∞—Å—É–≤–∞–Ω–Ω—è
                        }}
                        style={{
                          background: '#6c757d',
                          color: '#fff',
                          border: 'none',
                          borderRadius: '4px',
                          padding: '8px 16px',
                          fontSize: '14px',
                          cursor: 'pointer'
                        }}
                      >
                        ‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏
                      </button>
                    </div>
                  </div>
                )}

                {/* –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –∫–∞–º–µ—Ä–∏ */}
                <div>
                  <button
                    onClick={() => handleCameraCapture(selectedTask.id)}
                    disabled={uploadingFiles}
                    className="mobile-camera-button"
                    style={{
                      width: '100%',
                      background: '#28a745',
                      color: '#fff',
                      border: 'none',
                      borderRadius: '8px',
                      padding: '16px',
                      fontSize: '16px',
                      fontWeight: '500',
                      cursor: uploadingFiles ? 'not-allowed' : 'pointer',
                      opacity: uploadingFiles ? 0.6 : 1
                    }}
                  >
                    üì∑ –í—ñ–¥–∫—Ä–∏—Ç–∏ –∫–∞–º–µ—Ä—É
                  </button>
                </div>

                {uploadingFiles && (
                  <div style={{
                    textAlign: 'center',
                    color: '#666',
                    fontSize: '14px',
                    padding: '12px'
                  }}>
                    ‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤...
                  </div>
                )}
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 