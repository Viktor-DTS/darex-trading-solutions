import React, { useState } from 'react';

function DocumentUploadModal({
  isOpen,
  onClose,
  task,
  onInvoiceUpload = () => {},
  onActUpload = () => {},
  onInvoiceDelete = () => {},
  onActDelete = () => {},
  uploadingFiles = new Set()
}) {
  const [invoiceFile, setInvoiceFile] = useState(null);
  const [actFile, setActFile] = useState(null);

  if (!isOpen || !task) return null;
  
  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
  console.log('DEBUG DocumentUploadModal: –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –≤—ñ–¥–∫—Ä–∏—Ç–æ –∑ –¥–∞–Ω–∏–º–∏ –∑–∞–≤–¥–∞–Ω–Ω—è:', {
    isOpen,
    task: task ? {
      id: task.id,
      _id: task._id,
      invoiceRequestId: task.invoiceRequestId,
      requestNumber: task.requestNumber,
      needInvoice: task.needInvoice,
      needAct: task.needAct,
      invoiceFile: task.invoiceFile,
      actFile: task.actFile,
      invoiceFileName: task.invoiceFileName,
      actFileName: task.actFileName
    } : null,
    uploadingFiles: Array.from(uploadingFiles)
  });
  
  // –î–æ–¥–∞—Ç–∫–æ–≤–µ –¥–µ—Ç–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è
  if (task) {
    console.log('DEBUG DocumentUploadModal: –ü–æ–≤–Ω—ñ –¥–∞–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è:', task);
    console.log('DEBUG DocumentUploadModal: requestId –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', task.invoiceRequestId || task.id);
    console.log('DEBUG DocumentUploadModal: needInvoice:', task.needInvoice);
    console.log('DEBUG DocumentUploadModal: needAct:', task.needAct);
  }
  
  // –í—Å—ñ —Ñ—É–Ω–∫—Ü—ñ—ó —Ç–µ–ø–µ—Ä –º–∞—é—Ç—å –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —Ç–æ–º—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ

  const handleInvoiceFileChange = async (e) => {
    console.log('üöÄ DEBUG DocumentUploadModal: handleInvoiceFileChange –≤–∏–∫–ª–∏–∫–∞–Ω–æ, event:', e);
    console.log('üöÄ DEBUG DocumentUploadModal: e.target.files:', e.target.files);
    console.log('üöÄ DEBUG DocumentUploadModal: e.target.files.length:', e.target.files?.length);
    console.log('üöÄ DEBUG DocumentUploadModal: e.target:', e.target);
    console.log('üöÄ DEBUG DocumentUploadModal: e.type:', e.type);
    
    const file = e.target.files[0];
    console.log('DEBUG DocumentUploadModal: –§–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É –≤–∏–±—Ä–∞–Ω–æ:', { 
      fileName: file?.name, 
      fileSize: file?.size, 
      fileType: file?.type, 
      taskId: task?.id,
      invoiceRequestId: task?.invoiceRequestId,
      requestNumber: task?.requestNumber
    });
    
    if (file) {
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É (10MB)
      if (file.size > 10 * 1024 * 1024) {
        alert('–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 10MB');
        return;
      }

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∏–ø—É —Ñ–∞–π–ª—É
      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf'];
      if (!allowedTypes.includes(file.type)) {
        alert('–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ç–∏–ø —Ñ–∞–π–ª—É. –î–æ–∑–≤–æ–ª–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ PDF, JPEG, PNG');
        return;
      }

      setInvoiceFile(file);
      
      // –ì–µ–Ω–µ—Ä—É—î–º–æ –Ω–æ–º–µ—Ä —Ä–∞—Ö—É–Ω–∫—É: –¥–∞—Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è + –Ω–∞–∑–≤–∞ —Ñ–∞–π–ª—É
      const currentDate = new Date().toISOString().split('T')[0]; // YYYY-MM-DD
      const fileName = file.name.replace(/\.[^/.]+$/, ""); // –ë–µ–∑ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
      const generatedInvoiceNumber = `${currentDate}_${fileName}`;
      
      console.log('DEBUG DocumentUploadModal: –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –Ω–æ–º–µ—Ä —Ä–∞—Ö—É–Ω–∫—É:', generatedInvoiceNumber);
      console.log('DEBUG DocumentUploadModal: –í–∏–∫–ª–∏–∫–∞—î–º–æ onInvoiceUpload –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', { taskId: task.id, invoiceRequestId: task.invoiceRequestId, fileName: file.name });
      alert(`üìÑ –ù–æ–º–µ—Ä —Ä–∞—Ö—É–Ω–∫—É –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π: ${generatedInvoiceNumber}`);
      
      // –ü–µ—Ä–µ–¥–∞—î–º–æ invoiceRequestId –∑–∞–º—ñ—Å—Ç—å task.id
      const requestId = task.invoiceRequestId || task.id;
      console.log('DEBUG DocumentUploadModal: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ requestId:', requestId);
      console.log('DEBUG DocumentUploadModal: –í–∏–∫–ª–∏–∫–∞—î–º–æ onInvoiceUpload –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', { requestId, fileName: file.name, fileSize: file.size, fileType: file.type });
      console.log('DEBUG DocumentUploadModal: onInvoiceUpload —Ñ—É–Ω–∫—Ü—ñ—è:', typeof onInvoiceUpload, onInvoiceUpload);
      onInvoiceUpload(requestId, file);
    }
  };

  const handleActFileChange = (e) => {
    console.log('DEBUG DocumentUploadModal: handleActFileChange –≤–∏–∫–ª–∏–∫–∞–Ω–æ, event:', e);
    console.log('DEBUG DocumentUploadModal: e.target.files:', e.target.files);
    console.log('DEBUG DocumentUploadModal: e.target.files.length:', e.target.files?.length);
    
    const file = e.target.files[0];
    console.log('DEBUG DocumentUploadModal: –§–∞–π–ª –∞–∫—Ç—É –≤–∏–±—Ä–∞–Ω–æ:', { 
      fileName: file?.name, 
      fileSize: file?.size, 
      fileType: file?.type, 
      taskId: task?.id,
      invoiceRequestId: task?.invoiceRequestId,
      requestNumber: task?.requestNumber
    });
    
    if (file) {
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É (10MB)
      if (file.size > 10 * 1024 * 1024) {
        alert('–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 10MB');
        return;
      }

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∏–ø—É —Ñ–∞–π–ª—É
      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf'];
      if (!allowedTypes.includes(file.type)) {
        alert('–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ç–∏–ø —Ñ–∞–π–ª—É. –î–æ–∑–≤–æ–ª–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ PDF, JPEG, PNG');
        return;
      }

      setActFile(file);
      
      // –ü–µ—Ä–µ–¥–∞—î–º–æ invoiceRequestId –∑–∞–º—ñ—Å—Ç—å task.id
      const requestId = task.invoiceRequestId || task.id;
      console.log('DEBUG DocumentUploadModal: –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ requestId –¥–ª—è –∞–∫—Ç—É:', requestId);
      console.log('DEBUG DocumentUploadModal: –í–∏–∫–ª–∏–∫–∞—î–º–æ onActUpload –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', { requestId, fileName: file.name, fileSize: file.size, fileType: file.type });
      console.log('DEBUG DocumentUploadModal: onActUpload —Ñ—É–Ω–∫—Ü—ñ—è:', typeof onActUpload, onActUpload);
      onActUpload(requestId, file);
    }
  };

  const requestId = task.invoiceRequestId || task.id;
  const isUploading = uploadingFiles.has(requestId);

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É
  console.log('üîç DEBUG DocumentUploadModal: –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, isOpen:', isOpen);
  console.log('üîç DEBUG DocumentUploadModal: task:', task);
  console.log('üîç DEBUG DocumentUploadModal: onInvoiceUpload:', typeof onInvoiceUpload);
  console.log('üîç DEBUG DocumentUploadModal: onActUpload:', typeof onActUpload);

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      width: '100vw',
      height: '100vh',
      backgroundColor: 'rgba(0, 0, 0, 0.7)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 10000,
    }}>
      <div style={{
        backgroundColor: '#22334a',
        padding: '30px',
        borderRadius: '10px',
        width: '90%',
        maxWidth: '700px',
        boxShadow: '0 5px 15px rgba(0, 0, 0, 0.3)',
        color: '#fff',
        position: 'relative',
        maxHeight: '90vh',
        overflowY: 'auto',
      }}>
        <h3 style={{ marginTop: 0, marginBottom: '25px', textAlign: 'center', color: '#00bfff' }}>
          –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –∑–∞—è–≤–∫–∏ ‚Ññ{task.requestNumber}
        </h3>

        {/* –°–µ–∫—Ü—ñ—è –¥–ª—è —Ä–∞—Ö—É–Ω–∫—É - –ø–æ–∫–∞–∑—É—î–º–æ –∑–∞–≤–∂–¥–∏ */}
        <div style={{ marginBottom: '25px', padding: '20px', backgroundColor: '#1a2636', borderRadius: '8px', border: '1px solid #00bfff' }}>
          <h4 style={{ marginTop: 0, marginBottom: '15px', color: '#00bfff' }}>üìÑ –§–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É:</h4>
          {task.invoiceFile ? (
            <>
              <p style={{ marginBottom: '15px' }}>
                <strong style={{ color: '#fff' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π —Ñ–∞–π–ª:</strong>{' '}
                <a
                  href={task.invoiceFile}
                  target="_blank"
                  rel="noopener noreferrer"
                  style={{ color: '#00bfff', textDecoration: 'underline' }}
                >
                  {task.invoiceFileName || '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ–∞–π–ª'}
                </a>
              </p>
              <div style={{ display: 'flex', gap: '10px' }}>
                <button
                  onClick={() => window.open(task.invoiceFile, '_blank')}
                  style={{
                    padding: '8px 15px',
                    backgroundColor: '#007bff',
                    color: 'white',
                    border: 'none',
                    borderRadius: '5px',
                    cursor: 'pointer',
                    fontSize: '14px',
                  }}
                >
                  –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                </button>
                <button
                  onClick={() => {
                    const requestId = task.invoiceRequestId || task.id;
                    console.log('DEBUG DocumentUploadModal: –í–∏–¥–∞–ª—è—î–º–æ —Ñ–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É –∑ requestId:', requestId);
                    onInvoiceDelete(requestId);
                  }}
                  style={{
                    padding: '8px 15px',
                    backgroundColor: '#dc3545',
                    color: 'white',
                    border: 'none',
                    borderRadius: '5px',
                    cursor: 'pointer',
                    fontSize: '14px',
                  }}
                >
                  üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                </button>
              </div>
            </>
          ) : (
            <div style={{ marginTop: '10px' }}>
              {isUploading ? (
                <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
                  <div style={{
                    width: '20px',
                    height: '20px',
                    border: '3px solid #f3f3f3',
                    borderTop: '3px solid #00bfff',
                    borderRadius: '50%',
                    animation: 'spin 1s linear infinite',
                  }}></div>
                  <span style={{ color: '#ccc', fontSize: '14px' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É —Ä–∞—Ö—É–Ω–∫—É...</span>
                </div>
              ) : (
                <>
                  <input
                    type="file"
                    accept=".pdf,.jpg,.jpeg,.png"
                    onChange={(e) => {
                      console.log('üéØ DEBUG DocumentUploadModal: onChange —Å–ø—Ä–∞—Ü—é–≤–∞–≤ –≤ JSX!', e);
                      console.log('üéØ DEBUG DocumentUploadModal: e.target.files:', e.target.files);
                      console.log('üéØ DEBUG DocumentUploadModal: e.target.files.length:', e.target.files?.length);
                      console.log('üéØ DEBUG DocumentUploadModal: requestId:', requestId);
                      console.log('üéØ DEBUG DocumentUploadModal: onInvoiceUpload:', typeof onInvoiceUpload);
                      
                      if (e.target.files[0]) {
                        console.log('üéØ DEBUG DocumentUploadModal: –§–∞–π–ª –≤–∏–±—Ä–∞–Ω–æ, –≤–∏–∫–ª–∏–∫–∞—î–º–æ onInvoiceUpload');
                        console.log('üéØ DEBUG DocumentUploadModal: –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:', { requestId, fileName: e.target.files[0].name });
                        onInvoiceUpload(requestId, e.target.files[0]);
                        console.log('üéØ DEBUG DocumentUploadModal: onInvoiceUpload –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
                      } else {
                        console.log('üéØ DEBUG DocumentUploadModal: –§–∞–π–ª –Ω–µ –≤–∏–±—Ä–∞–Ω–æ');
                      }
                    }}
                    onClick={() => {
                      console.log('üñ±Ô∏è DEBUG DocumentUploadModal: onClick —Å–ø—Ä–∞—Ü—é–≤–∞–≤!');
                    }}
                    style={{ marginRight: '10px', color: '#fff', border: '2px solid red' }}
                  />
                  <span style={{ color: '#ccc', fontSize: '14px' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É</span>
                </>
              )}
            </div>
          )}
        </div>

        {/* –°–µ–∫—Ü—ñ—è –¥–ª—è –∞–∫—Ç—É –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç - –ø–æ–∫–∞–∑—É—î–º–æ –∑–∞–≤–∂–¥–∏ */}
        <div style={{ marginBottom: '25px', padding: '20px', backgroundColor: '#1a2636', borderRadius: '8px', border: '1px solid #00bfff' }}>
          <h4 style={{ marginTop: 0, marginBottom: '15px', color: '#00bfff' }}>üìã –§–∞–π–ª –∞–∫—Ç—É –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç:</h4>
          {task.actFile ? (
            <>
              <p style={{ marginBottom: '15px' }}>
                <strong style={{ color: '#fff' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π —Ñ–∞–π–ª:</strong>{' '}
                <a
                  href={task.actFile}
                  target="_blank"
                  rel="noopener noreferrer"
                  style={{ color: '#00bfff', textDecoration: 'underline' }}
                >
                  {task.actFileName || '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ñ–∞–π–ª'}
                </a>
              </p>
              <div style={{ display: 'flex', gap: '10px' }}>
                <button
                  onClick={() => window.open(task.actFile, '_blank')}
                  style={{
                    padding: '8px 15px',
                    backgroundColor: '#007bff',
                    color: 'white',
                    border: 'none',
                    borderRadius: '5px',
                    cursor: 'pointer',
                    fontSize: '14px',
                  }}
                >
                  –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                </button>
                <button
                  onClick={() => {
                    const requestId = task.invoiceRequestId || task.id;
                    console.log('DEBUG DocumentUploadModal: –í–∏–¥–∞–ª—è—î–º–æ —Ñ–∞–π–ª –∞–∫—Ç—É –∑ requestId:', requestId);
                    onActDelete(requestId);
                  }}
                  style={{
                    padding: '8px 15px',
                    backgroundColor: '#dc3545',
                    color: 'white',
                    border: 'none',
                    borderRadius: '5px',
                    cursor: 'pointer',
                    fontSize: '14px',
                  }}
                >
                  üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                </button>
              </div>
            </>
          ) : (
            <div style={{ marginTop: '10px' }}>
              {isUploading ? (
                <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>
                  <div style={{
                    width: '20px',
                    height: '20px',
                    border: '3px solid #f3f3f3',
                    borderTop: '3px solid #00bfff',
                    borderRadius: '50%',
                    animation: 'spin 1s linear infinite',
                  }}></div>
                  <span style={{ color: '#ccc', fontSize: '14px' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—É –∞–∫—Ç—É...</span>
                </div>
              ) : (
                <>
                  <input
                    type="file"
                    accept=".pdf,.jpg,.jpeg,.png"
                    onChange={(e) => {
                      console.log('üéØ DEBUG DocumentUploadModal: onChange –¥–ª—è –∞–∫—Ç—É —Å–ø—Ä–∞—Ü—é–≤–∞–≤ –≤ JSX!', e);
                      console.log('üéØ DEBUG DocumentUploadModal: e.target.files –¥–ª—è –∞–∫—Ç—É:', e.target.files);
                      console.log('üéØ DEBUG DocumentUploadModal: e.target.files.length –¥–ª—è –∞–∫—Ç—É:', e.target.files?.length);
                      console.log('üéØ DEBUG DocumentUploadModal: requestId –¥–ª—è –∞–∫—Ç—É:', requestId);
                      console.log('üéØ DEBUG DocumentUploadModal: onActUpload:', typeof onActUpload);
                      
                      if (e.target.files[0]) {
                        console.log('üéØ DEBUG DocumentUploadModal: –§–∞–π–ª –∞–∫—Ç—É –≤–∏–±—Ä–∞–Ω–æ, –≤–∏–∫–ª–∏–∫–∞—î–º–æ onActUpload');
                        console.log('üéØ DEBUG DocumentUploadModal: –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–∫—Ç—É:', { requestId, fileName: e.target.files[0].name });
                        onActUpload(requestId, e.target.files[0]);
                        console.log('üéØ DEBUG DocumentUploadModal: onActUpload –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
                      } else {
                        console.log('üéØ DEBUG DocumentUploadModal: –§–∞–π–ª –∞–∫—Ç—É –Ω–µ –≤–∏–±—Ä–∞–Ω–æ');
                      }
                    }}
                    onClick={() => {
                      console.log('üñ±Ô∏è DEBUG DocumentUploadModal: onClick –¥–ª—è –∞–∫—Ç—É —Å–ø—Ä–∞—Ü—é–≤–∞–≤!');
                    }}
                    style={{ marginRight: '10px', color: '#fff', border: '2px solid blue' }}
                  />
                  <span style={{ color: '#ccc', fontSize: '14px' }}>–ó–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Ñ–∞–π–ª –∞–∫—Ç—É –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç</span>
                </>
              )}
            </div>
          )}
        </div>

        <div style={{ display: 'flex', justifyContent: 'center', marginTop: '30px' }}>
          <button
            onClick={onClose}
            style={{
              padding: '10px 25px',
              backgroundColor: '#6c757d',
              color: 'white',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer',
              fontSize: '16px',
            }}
          >
            –ó–∞–∫—Ä–∏—Ç–∏
          </button>
        </div>
      </div>
    </div>
  );
}

export default DocumentUploadModal;
