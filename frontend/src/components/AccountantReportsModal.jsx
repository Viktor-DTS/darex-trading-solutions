import React, { useState, useEffect } from 'react';

const AccountantReportsModal = ({ isOpen, onClose, user }) => {
  const [reportFilters, setReportFilters] = useState({
    dateFrom: '',
    dateTo: '',
    region: 'all',
    detailed: false
  });
  const [regions, setRegions] = useState([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    if (isOpen) {
      loadRegions();
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∞—Ç—É —è–∫ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
      const today = new Date().toISOString().split('T')[0];
      setReportFilters(prev => ({
        ...prev,
        dateFrom: today,
        dateTo: today
      }));
    }
  }, [isOpen]);

  const loadRegions = async () => {
    try {
      const API_BASE_URL = process.env.REACT_APP_API_URL || 
        (window.location.hostname === 'localhost' ? 'http://localhost:3001/api' : 'https://darex-trading-solutions.onrender.com/api');
      
      const response = await fetch(`${API_BASE_URL}/tasks`);
      if (response.ok) {
        const data = await response.json();
        if (data.success && data.data) {
          // –û—Ç—Ä–∏–º—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ —Ä–µ–≥—ñ–æ–Ω–∏
          const uniqueRegions = [...new Set(data.data.map(task => task.serviceRegion).filter(Boolean))];
          console.log('DEBUG: –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Ä–µ–≥—ñ–æ–Ω—ñ–≤:', uniqueRegions);
          setRegions(uniqueRegions);
        } else {
          console.log('DEBUG: –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', data);
          // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —Ä–µ–≥—ñ–æ–Ω–∏
          setRegions(['–ö–∏—ó–≤—Å—å–∫–∏–π', '–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π', '–õ—å–≤—ñ–≤—Å—å–∫–∏–π', '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π', '–û–¥–µ—Å—å–∫–∏–π']);
        }
      } else {
        console.error('–ü–æ–º–∏–ª–∫–∞ HTTP –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Ä–µ–≥—ñ–æ–Ω—ñ–≤:', response.status);
        // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —Ä–µ–≥—ñ–æ–Ω–∏
        setRegions(['–ö–∏—ó–≤—Å—å–∫–∏–π', '–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π', '–õ—å–≤—ñ–≤—Å—å–∫–∏–π', '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π', '–û–¥–µ—Å—å–∫–∏–π']);
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ–≥—ñ–æ–Ω—ñ–≤:', error);
      // –Ø–∫—â–æ –ø–æ–º–∏–ª–∫–∞, –≤—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —Ä–µ–≥—ñ–æ–Ω–∏
      setRegions(['–ö–∏—ó–≤—Å—å–∫–∏–π', '–î–Ω—ñ–ø—Ä–æ–≤—Å—å–∫–∏–π', '–õ—å–≤—ñ–≤—Å—å–∫–∏–π', '–•–∞—Ä–∫—ñ–≤—Å—å–∫–∏–π', '–û–¥–µ—Å—å–∫–∏–π']);
    }
  };

  const handleFilterChange = (field, value) => {
    setReportFilters(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const generateReport = async (format) => {
    if (!reportFilters.dateFrom || !reportFilters.dateTo) {
      alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –ø–µ—Ä—ñ–æ–¥ –¥–ª—è –∑–≤—ñ—Ç—É');
      return;
    }

    setLoading(true);
    try {
      const API_BASE_URL = process.env.REACT_APP_API_URL || 
        (window.location.hostname === 'localhost' ? 'http://localhost:3001/api' : 'https://darex-trading-solutions.onrender.com/api');
      
      console.log('[REPORTS] Frontend - –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–µ—Ä–µ–¥ –≤—ñ–¥–ø—Ä–∞–≤–∫–æ—é:', {
        dateFrom: reportFilters.dateFrom,
        dateTo: reportFilters.dateTo,
        region: reportFilters.region,
        detailed: reportFilters.detailed,
        detailedType: typeof reportFilters.detailed,
        format: format
      });
      
      const params = new URLSearchParams({
        dateFrom: reportFilters.dateFrom,
        dateTo: reportFilters.dateTo,
        region: reportFilters.region,
        detailed: reportFilters.detailed ? reportFilters.detailed.toString() : 'false',
        format: format
      });
      
      console.log('[REPORTS] Frontend - URL –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:', params.toString());

      if (format === 'html') {
        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ HTML –∑–≤—ñ—Ç –≤ –Ω–æ–≤—ñ–π –≤–∫–ª–∞–¥—Ü—ñ
        const htmlUrl = `${API_BASE_URL}/reports/financial?${params}`;
        console.log('[REPORTS] Frontend - –≤—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ HTML –∑–≤—ñ—Ç:', htmlUrl);
        window.open(htmlUrl, '_blank');
      } else if (format === 'excel') {
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ Excel —Ñ–∞–π–ª
        console.log('[REPORTS] Frontend - –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ Excel:', `${API_BASE_URL}/reports/financial?${params}`);
        const response = await fetch(`${API_BASE_URL}/reports/financial?${params}`);
        console.log('[REPORTS] Frontend - –æ—Ç—Ä–∏–º–∞–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:', {
          status: response.status,
          statusText: response.statusText,
          ok: response.ok,
          headers: Object.fromEntries(response.headers.entries())
        });
        if (response.ok) {
          const blob = await response.blob();
          const url = window.URL.createObjectURL(blob);
          const link = document.createElement('a');
          link.href = url;
          link.download = `financial_report_${reportFilters.dateFrom}_${reportFilters.dateTo}.xlsx`;
          document.body.appendChild(link);
          link.click();
          document.body.removeChild(link);
          window.URL.revokeObjectURL(url);
        } else {
          alert('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—É');
        }
      }
    } catch (error) {
      console.error('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—É:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—É');
    } finally {
      setLoading(false);
    }
  };

  if (!isOpen) return null;

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 1000
    }}>
      <div style={{
        backgroundColor: '#fff',
        borderRadius: '12px',
        padding: '24px',
        width: '90%',
        maxWidth: '800px',
        maxHeight: '90vh',
        overflow: 'auto',
        boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3)'
      }}>
        <div style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          marginBottom: '24px',
          borderBottom: '2px solid #f0f0f0',
          paddingBottom: '16px'
        }}>
          <h2 style={{ margin: 0, color: '#333', fontSize: '24px', fontWeight: '600' }}>
            üìä –ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å—å–∫—ñ –∑–≤—ñ—Ç–∏
          </h2>
          <button
            onClick={onClose}
            style={{
              background: 'none',
              border: 'none',
              fontSize: '24px',
              cursor: 'pointer',
              color: '#666',
              padding: '4px',
              borderRadius: '4px'
            }}
          >
            √ó
          </button>
        </div>

        {/* –ó–∞–≥–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç –ø–æ —Ä—É—Ö—É —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤ */}
        <div style={{
          backgroundColor: '#f8f9fa',
          borderRadius: '8px',
          padding: '20px',
          marginBottom: '20px',
          border: '1px solid #e9ecef'
        }}>
          <h3 style={{ 
            margin: '0 0 16px 0', 
            color: '#333', 
            fontSize: '18px',
            fontWeight: '600',
            borderBottom: '2px solid #007bff',
            paddingBottom: '8px'
          }}>
            –ó–∞–≥–∞–ª—å–Ω–∏–π –∑–≤—ñ—Ç –ø–æ —Ä—É—Ö—É —Ñ—ñ–Ω–∞–Ω—Å—ñ–≤
          </h3>

          {/* –§—ñ–ª—å—Ç—Ä–∏ */}
          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '16px', marginBottom: '20px' }}>
            <div>
              <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#333' }}>
                –î–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç –∑:
              </label>
              <input
                type="date"
                value={reportFilters.dateFrom}
                onChange={(e) => handleFilterChange('dateFrom', e.target.value)}
                style={{
                  width: '100%',
                  padding: '8px 12px',
                  border: '1px solid #ddd',
                  borderRadius: '6px',
                  fontSize: '14px'
                }}
              />
            </div>
            <div>
              <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#333' }}>
                –î–∞—Ç–∞ –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç –ø–æ:
              </label>
              <input
                type="date"
                value={reportFilters.dateTo}
                onChange={(e) => handleFilterChange('dateTo', e.target.value)}
                style={{
                  width: '100%',
                  padding: '8px 12px',
                  border: '1px solid #ddd',
                  borderRadius: '6px',
                  fontSize: '14px'
                }}
              />
            </div>
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'block', marginBottom: '6px', fontWeight: '500', color: '#333' }}>
              –†–µ–≥—ñ–æ–Ω:
            </label>
            <select
              value={reportFilters.region}
              onChange={(e) => handleFilterChange('region', e.target.value)}
              style={{
                width: '100%',
                padding: '8px 12px',
                border: '1px solid #ddd',
                borderRadius: '6px',
                fontSize: '14px',
                backgroundColor: '#fff'
              }}
            >
              <option value="all">–í—Å—ñ —Ä–µ–≥—ñ–æ–Ω–∏</option>
              {regions.map(region => (
                <option key={region} value={region}>{region}</option>
              ))}
            </select>
          </div>

          <div style={{ marginBottom: '20px' }}>
            <label style={{ display: 'flex', alignItems: 'center', gap: '8px', cursor: 'pointer' }}>
              <input
                type="checkbox"
                checked={reportFilters.detailed}
                onChange={(e) => handleFilterChange('detailed', e.target.checked)}
                style={{ transform: 'scale(1.2)' }}
              />
              <span style={{ fontWeight: '500', color: '#333' }}>
                –î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è –ø–æ –∑–≤—ñ—Ç—É
              </span>
            </label>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ —Ñ–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–≤—ñ—Ç—É */}
          <div style={{ display: 'flex', gap: '12px' }}>
            <button
              onClick={() => generateReport('html')}
              disabled={loading}
              style={{
                padding: '12px 24px',
                backgroundColor: '#007bff',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                cursor: loading ? 'not-allowed' : 'pointer',
                fontSize: '14px',
                fontWeight: '600',
                opacity: loading ? 0.6 : 1,
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}
            >
              {loading ? '‚è≥' : 'üìÑ'} –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –∑–≤—ñ—Ç—É –≤ HTML
            </button>
            <button
              onClick={() => generateReport('excel')}
              disabled={loading}
              style={{
                padding: '12px 24px',
                backgroundColor: '#28a745',
                color: 'white',
                border: 'none',
                borderRadius: '6px',
                cursor: loading ? 'not-allowed' : 'pointer',
                fontSize: '14px',
                fontWeight: '600',
                opacity: loading ? 0.6 : 1,
                display: 'flex',
                alignItems: 'center',
                gap: '8px'
              }}
            >
              {loading ? '‚è≥' : 'üìä'} –ï–∫—Å–ø–æ—Ä—Ç Excel
            </button>
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä–∏—Ç—Ç—è */}
        <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: '20px' }}>
          <button
            onClick={onClose}
            style={{
              padding: '10px 20px',
              backgroundColor: '#6c757d',
              color: 'white',
              border: 'none',
              borderRadius: '6px',
              cursor: 'pointer',
              fontSize: '14px',
              fontWeight: '500'
            }}
          >
            –ó–∞–∫—Ä–∏—Ç–∏
          </button>
        </div>
      </div>
    </div>
  );
};

export default AccountantReportsModal;
