import React, { useState } from 'react';

function NewDocumentUploadModal({
  isOpen,
  onClose,
  task,
  onInvoiceUpload = () => {},
  onActUpload = () => {},
  onInvoiceDelete = () => {},
  onActDelete = () => {},
  uploadingFiles = new Set()
}) {
  const [selectedInvoiceFile, setSelectedInvoiceFile] = useState(null);
  const [selectedActFile, setSelectedActFile] = useState(null);
  const [isUploading, setIsUploading] = useState(false);

  if (!isOpen || !task) return null;
  
  console.log('üîÑ NEW DocumentUploadModal: –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –≤—ñ–¥–∫—Ä–∏—Ç–æ', {
    isOpen,
    task: task ? {
      id: task.id,
      _id: task._id,
      invoiceRequestId: task.invoiceRequestId,
      requestNumber: task.requestNumber,
      needInvoice: task.needInvoice,
      needAct: task.needAct,
      invoiceFile: task.invoiceFile,
      actFile: task.actFile
    } : null
  });

  const handleInvoiceFileChange = (e) => {
    const file = e.target.files[0];
    console.log('üîÑ NEW DocumentUploadModal: –§–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É –≤–∏–±—Ä–∞–Ω–æ:', file?.name);
    
    if (file) {
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É (10MB)
      if (file.size > 10 * 1024 * 1024) {
        alert('–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 10MB');
        return;
      }

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∏–ø—É —Ñ–∞–π–ª—É
      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf'];
      if (!allowedTypes.includes(file.type)) {
        alert('–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ç–∏–ø —Ñ–∞–π–ª—É. –î–æ–∑–≤–æ–ª–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ PDF, JPEG, PNG');
        return;
      }

      setSelectedInvoiceFile(file);
      console.log('üîÑ NEW DocumentUploadModal: –§–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
    }
  };

  const handleActFileChange = (e) => {
    const file = e.target.files[0];
    console.log('üîÑ NEW DocumentUploadModal: –§–∞–π–ª –∞–∫—Ç—É –≤–∏–±—Ä–∞–Ω–æ:', file?.name);
    
    if (file) {
      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ä–æ–∑–º—ñ—Ä—É —Ñ–∞–π–ª—É (10MB)
      if (file.size > 10 * 1024 * 1024) {
        alert('–§–∞–π–ª –∑–∞–Ω–∞–¥—Ç–æ –≤–µ–ª–∏–∫–∏–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä: 10MB');
        return;
      }

      // –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Ç–∏–ø—É —Ñ–∞–π–ª—É
      const allowedTypes = ['image/jpeg', 'image/png', 'image/jpg', 'application/pdf'];
      if (!allowedTypes.includes(file.type)) {
        alert('–ù–µ–ø—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω–∏–π —Ç–∏–ø —Ñ–∞–π–ª—É. –î–æ–∑–≤–æ–ª–µ–Ω—ñ —Ç—ñ–ª—å–∫–∏ PDF, JPEG, PNG');
        return;
      }

      setSelectedActFile(file);
      console.log('üîÑ NEW DocumentUploadModal: –§–∞–π–ª –∞–∫—Ç—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
    }
  };

  const handleSave = async () => {
    if (!selectedInvoiceFile && !selectedActFile) {
      alert('–í–∏–±–µ—Ä—ñ—Ç—å —Ö–æ—á–∞ –± –æ–¥–∏–Ω —Ñ–∞–π–ª –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
      return;
    }

    setIsUploading(true);
    console.log('üîÑ NEW DocumentUploadModal: –ü–æ—á–∞—Ç–æ–∫ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤');

    try {
      const requestId = task.invoiceRequestId || task.id;
      
      if (selectedInvoiceFile) {
        console.log('üîÑ NEW DocumentUploadModal: –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É:', selectedInvoiceFile.name);
        await onInvoiceUpload(requestId, selectedInvoiceFile);
      }

      if (selectedActFile) {
        console.log('üîÑ NEW DocumentUploadModal: –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª –∞–∫—Ç—É:', selectedActFile.name);
        await onActUpload(requestId, selectedActFile);
      }

      // –û—á–∏—â—É—î–º–æ –≤–∏–±—Ä–∞–Ω—ñ —Ñ–∞–π–ª–∏
      setSelectedInvoiceFile(null);
      setSelectedActFile(null);
      
      console.log('üîÑ NEW DocumentUploadModal: –§–∞–π–ª–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
      onClose();
      
    } catch (error) {
      console.error('üîÑ NEW DocumentUploadModal: –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤: ' + error.message);
    } finally {
      setIsUploading(false);
    }
  };

  const requestId = task.invoiceRequestId || task.id;
  const needInvoice = task.needInvoice;
  const needAct = task.needAct;

  return (
    <div style={{
      position: 'fixed',
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      backgroundColor: 'rgba(0, 0, 0, 0.5)',
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      zIndex: 1000
    }}>
      <div style={{
        backgroundColor: 'white',
        borderRadius: '8px',
        padding: '30px',
        maxWidth: '500px',
        width: '90%',
        maxHeight: '80vh',
        overflowY: 'auto',
        boxShadow: '0 4px 20px rgba(0, 0, 0, 0.3)'
      }}>
        <h2 style={{ 
          marginBottom: '20px', 
          color: '#333',
          textAlign: 'center',
          fontSize: '24px'
        }}>
          üìÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
        </h2>
        
        <div style={{ marginBottom: '20px', textAlign: 'center' }}>
          <p style={{ color: '#666', margin: '0 0 10px 0' }}>
            <strong>–ó–∞—è–≤–∫–∞:</strong> {task.requestNumber || 'N/A'}
          </p>
          <p style={{ color: '#666', margin: '0' }}>
            <strong>ID:</strong> {requestId}
          </p>
        </div>

        {/* –°–µ–∫—Ü—ñ—è –¥–ª—è —Ä–∞—Ö—É–Ω–∫—É */}
        {needInvoice && (
          <div style={{ marginBottom: '25px' }}>
            <h3 style={{ color: '#333', marginBottom: '15px', fontSize: '18px' }}>
              üí∞ –§–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É
            </h3>
            
            {task.invoiceFile ? (
              <div style={{ 
                padding: '15px', 
                backgroundColor: '#f8f9fa', 
                borderRadius: '5px',
                border: '1px solid #e9ecef'
              }}>
                <p style={{ margin: '0 0 10px 0', color: '#28a745' }}>
                  ‚úÖ –†–∞—Ö—É–Ω–æ–∫ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
                </p>
                <p style={{ margin: '0 0 15px 0', color: '#666' }}>
                  –§–∞–π–ª: {task.invoiceFileName || '–ù–µ–≤—ñ–¥–æ–º–æ'}
                </p>
                <div style={{ display: 'flex', gap: '10px' }}>
                  <button
                    onClick={() => window.open(task.invoiceFile, '_blank')}
                    style={{
                      padding: '8px 15px',
                      backgroundColor: '#007bff',
                      color: 'white',
                      border: 'none',
                      borderRadius: '5px',
                      cursor: 'pointer',
                      fontSize: '14px'
                    }}
                  >
                    üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                  </button>
                  <button
                    onClick={() => {
                      console.log('üîÑ NEW DocumentUploadModal: –í–∏–¥–∞–ª—è—î–º–æ —Ñ–∞–π–ª —Ä–∞—Ö—É–Ω–∫—É');
                      onInvoiceDelete(requestId);
                    }}
                    style={{
                      padding: '8px 15px',
                      backgroundColor: '#dc3545',
                      color: 'white',
                      border: 'none',
                      borderRadius: '5px',
                      cursor: 'pointer',
                      fontSize: '14px'
                    }}
                  >
                    üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                  </button>
                </div>
              </div>
            ) : (
              <div>
                {selectedInvoiceFile ? (
                  <div style={{ 
                    padding: '15px', 
                    backgroundColor: '#e3f2fd', 
                    borderRadius: '5px',
                    border: '1px solid #2196f3',
                    marginBottom: '10px'
                  }}>
                    <p style={{ margin: '0 0 10px 0', color: '#1976d2' }}>
                      üìÑ –í–∏–±—Ä–∞–Ω–æ —Ñ–∞–π–ª: {selectedInvoiceFile.name}
                    </p>
                    <button
                      onClick={() => setSelectedInvoiceFile(null)}
                      style={{
                        padding: '5px 10px',
                        backgroundColor: '#f44336',
                        color: 'white',
                        border: 'none',
                        borderRadius: '3px',
                        cursor: 'pointer',
                        fontSize: '12px'
                      }}
                    >
                      –°–∫–∞—Å—É–≤–∞—Ç–∏
                    </button>
                  </div>
                ) : (
                  <div>
                    <input
                      type="file"
                      accept=".pdf,.jpg,.jpeg,.png"
                      onChange={handleInvoiceFileChange}
                      style={{
                        width: '100%',
                        padding: '10px',
                        border: '2px dashed #007bff',
                        borderRadius: '5px',
                        backgroundColor: '#f8f9fa',
                        cursor: 'pointer'
                      }}
                    />
                    <p style={{ 
                      fontSize: '12px', 
                      color: '#666', 
                      marginTop: '5px',
                      textAlign: 'center'
                    }}>
                      –ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏: PDF, JPEG, PNG (–º–∞–∫—Å. 10MB)
                    </p>
                  </div>
                )}
              </div>
            )}
          </div>
        )}

        {/* –°–µ–∫—Ü—ñ—è –¥–ª—è –∞–∫—Ç—É */}
        {needAct && (
          <div style={{ marginBottom: '25px' }}>
            <h3 style={{ color: '#333', marginBottom: '15px', fontSize: '18px' }}>
              üìã –§–∞–π–ª –∞–∫—Ç—É –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç
            </h3>
            
            {task.actFile ? (
              <div style={{ 
                padding: '15px', 
                backgroundColor: '#f8f9fa', 
                borderRadius: '5px',
                border: '1px solid #e9ecef'
              }}>
                <p style={{ margin: '0 0 10px 0', color: '#28a745' }}>
                  ‚úÖ –ê–∫—Ç –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ
                </p>
                <p style={{ margin: '0 0 15px 0', color: '#666' }}>
                  –§–∞–π–ª: {task.actFileName || '–ù–µ–≤—ñ–¥–æ–º–æ'}
                </p>
                <div style={{ display: 'flex', gap: '10px' }}>
                  <button
                    onClick={() => window.open(task.actFile, '_blank')}
                    style={{
                      padding: '8px 15px',
                      backgroundColor: '#007bff',
                      color: 'white',
                      border: 'none',
                      borderRadius: '5px',
                      cursor: 'pointer',
                      fontSize: '14px'
                    }}
                  >
                    üëÅÔ∏è –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏
                  </button>
                  <button
                    onClick={() => {
                      console.log('üîÑ NEW DocumentUploadModal: –í–∏–¥–∞–ª—è—î–º–æ —Ñ–∞–π–ª –∞–∫—Ç—É');
                      onActDelete(requestId);
                    }}
                    style={{
                      padding: '8px 15px',
                      backgroundColor: '#dc3545',
                      color: 'white',
                      border: 'none',
                      borderRadius: '5px',
                      cursor: 'pointer',
                      fontSize: '14px'
                    }}
                  >
                    üóëÔ∏è –í–∏–¥–∞–ª–∏—Ç–∏
                  </button>
                </div>
              </div>
            ) : (
              <div>
                {selectedActFile ? (
                  <div style={{ 
                    padding: '15px', 
                    backgroundColor: '#e3f2fd', 
                    borderRadius: '5px',
                    border: '1px solid #2196f3',
                    marginBottom: '10px'
                  }}>
                    <p style={{ margin: '0 0 10px 0', color: '#1976d2' }}>
                      üìã –í–∏–±—Ä–∞–Ω–æ —Ñ–∞–π–ª: {selectedActFile.name}
                    </p>
                    <button
                      onClick={() => setSelectedActFile(null)}
                      style={{
                        padding: '5px 10px',
                        backgroundColor: '#f44336',
                        color: 'white',
                        border: 'none',
                        borderRadius: '3px',
                        cursor: 'pointer',
                        fontSize: '12px'
                      }}
                    >
                      –°–∫–∞—Å—É–≤–∞—Ç–∏
                    </button>
                  </div>
                ) : (
                  <div>
                    <input
                      type="file"
                      accept=".pdf,.jpg,.jpeg,.png"
                      onChange={handleActFileChange}
                      style={{
                        width: '100%',
                        padding: '10px',
                        border: '2px dashed #007bff',
                        borderRadius: '5px',
                        backgroundColor: '#f8f9fa',
                        cursor: 'pointer'
                      }}
                    />
                    <p style={{ 
                      fontSize: '12px', 
                      color: '#666', 
                      marginTop: '5px',
                      textAlign: 'center'
                    }}>
                      –ü—ñ–¥—Ç—Ä–∏–º—É–≤–∞–Ω—ñ —Ñ–æ—Ä–º–∞—Ç–∏: PDF, JPEG, PNG (–º–∞–∫—Å. 10MB)
                    </p>
                  </div>
                )}
              </div>
            )}
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è */}
        <div style={{ 
          display: 'flex', 
          justifyContent: 'center', 
          gap: '15px', 
          marginTop: '30px',
          paddingTop: '20px',
          borderTop: '1px solid #e9ecef'
        }}>
          <button
            onClick={onClose}
            style={{
              padding: '12px 25px',
              backgroundColor: '#6c757d',
              color: 'white',
              border: 'none',
              borderRadius: '5px',
              cursor: 'pointer',
              fontSize: '16px'
            }}
          >
            –°–∫–∞—Å—É–≤–∞—Ç–∏
          </button>
          
          {(selectedInvoiceFile || selectedActFile) && (
            <button
              onClick={handleSave}
              disabled={isUploading}
              style={{
                padding: '12px 25px',
                backgroundColor: isUploading ? '#6c757d' : '#28a745',
                color: 'white',
                border: 'none',
                borderRadius: '5px',
                cursor: isUploading ? 'not-allowed' : 'pointer',
                fontSize: '16px'
              }}
            >
              {isUploading ? '‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...' : 'üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ —Ñ–∞–π–ª–∏'}
            </button>
          )}
        </div>
      </div>
    </div>
  );
}

export default NewDocumentUploadModal;
